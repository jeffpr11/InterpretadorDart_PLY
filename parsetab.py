
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaABSTRACT ACENTO_AGUDO ACENTO_GRAVE ARROBA AS ASSERT ASYNC AWAIT BARRA_INVERTIDA BREAK CASE CATCH CLASS COMA COMENTARIO COMILLA_DOBLE COMILLA_SIMPLE CONST CONTINUE CORCHETE_APERTURA CORCHETE_CLAUSURA COVARIANT DATO_CADENA_TEXTO DATO_DOBLE DATO_ENTERO DEFAULT DEFERRED DO DOBLE_PUNTO DYNAMIC ELSE ENUM ET EXPORT EXTENDS EXTERNAL FACTORY FALSE FINAL FINALLY FOR FUNCTION GET HIDE IDENTIFICADOR IF IMPLEMENTS IMPORT IN INTERFACE IS LIBRARY LLAVE_APERTURA LLAVE_CLAUSURA MAIN MIXIN NEW NULL NUMERAL ON OPERATOR PARENTESIS_APERTURA PARENTESIS_CLAUSURA PART PLECA PORCENTAJE PUNTO PUNTO_COMA RETHROW RETURN SET SHOW SIGNO_ADMIRACION_APERTURA SIGNO_ADMIRACION_CLAUSURA SIGNO_DIVISION SIGNO_IGUAL SIGNO_INTERROGACION_APERTURA SIGNO_INTERROGACION_CLAUSURA SIGNO_MAS SIGNO_MAYOR_QUE SIGNO_MENOR_QUE SIGNO_MENOS SIGNO_MULTIPLICACION STATIC SUPER SWITCH THIS THROW TIPO_BOOL TIPO_DOUBLE TIPO_FUTURE TIPO_INT TIPO_ITERABLE TIPO_LIST TIPO_MAP TIPO_NEVER TIPO_OBJECT TIPO_RUNE TIPO_SET TIPO_STREAM TIPO_STRING TIPO_SYMBOL TRUE TRY TYPEDEF VAR VIRGULILLA VOID WHILE WITH YIELDprograma : item_programa programa\n                | item_programaitem_programa : instruccion\n                    | clase\n                    | ABSTRACT clase\n                    | funcion\n                    | instruccion_if\n                    | instruccion_while\n                    | instruccion_for\n                    | importimport : IMPORT DATO_CADENA_TEXTO AS IDENTIFICADOR PUNTO_COMA\n                | IMPORT DATO_CADENA_TEXTO PUNTO_COMAinstruccion : asignacion\n                    | FINAL asignacion\n                    | declaracion\n                    | operacion_unitaria PUNTO_COMAoperacion_unitaria : IDENTIFICADOR SIGNO_MAS SIGNO_MAS\n                        | IDENTIFICADOR SIGNO_MENOS SIGNO_MENOS\n                        | SIGNO_MAS SIGNO_MAS IDENTIFICADOR\n                        | SIGNO_MENOS SIGNO_MENOS IDENTIFICADORinstruccion_while : WHILE PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURAinstruccion_for : FOR PARENTESIS_APERTURA condicion_for PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURAcondicion_for : TIPO_INT IDENTIFICADOR IN IDENTIFICADOR\n                    | condicion_for_inicial PUNTO_COMA condicion_for_terminacion PUNTO_COMA condicion_for_pasocondicion_for_inicial : TIPO_INT IDENTIFICADOR SIGNO_IGUAL IDENTIFICADOR\n                            | TIPO_INT IDENTIFICADOR SIGNO_IGUAL DATO_ENTEROcondicion_for_terminacion : IDENTIFICADOR SIGNO_MENOR_QUE DATO_ENTERO\n                                | IDENTIFICADOR SIGNO_MAYOR_QUE DATO_ENTERO\n                                | IDENTIFICADOR SIGNO_MENOR_QUE SIGNO_IGUAL DATO_ENTERO\n                                | IDENTIFICADOR SIGNO_MAYOR_QUE SIGNO_IGUAL DATO_ENTERO\n                                | IDENTIFICADOR SIGNO_IGUAL SIGNO_IGUAL DATO_ENTERO\n                                | IDENTIFICADOR SIGNO_ADMIRACION_APERTURA SIGNO_IGUAL DATO_ENTEROcondicion_for_paso : operacion_unitariainstruccion_switch : SWITCH PARENTESIS_APERTURA IDENTIFICADOR PARENTESIS_CLAUSURA LLAVE_APERTURA bloque_switch LLAVE_CLAUSURAbloque_switch : instrucciones_case instruccion_default\n                    | instrucciones_caseinstrucciones_case : instruccion_case instrucciones_case\n                            | instruccion_caseinstruccion_case : CASE valor_general DOBLE_PUNTO LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA BREAK PUNTO_COMA\n                        | CASE valor_general DOBLE_PUNTO instruccion BREAK PUNTO_COMA\n                        | CASE valor_general DOBLE_PUNTO llamadas_func PUNTO_COMA BREAK PUNTO_COMAinstruccion_default : DEFAULT DOBLE_PUNTO LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA BREAK PUNTO_COMA\n                            | DEFAULT DOBLE_PUNTO instruccion BREAK PUNTO_COMA\n                            | DEFAULT DOBLE_PUNTO llamadas_func PUNTO_COMA BREAK PUNTO_COMAinstruccion_if : IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA\n                    | IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA instruccion_elseinstruccion_else : ELSE IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA instruccion_else\n                        | ELSE IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA\n                        | ELSE LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURAitems_estructura_control : item_estructura_control items_estructura_control\n                                | item_estructura_controlitem_estructura_control : instruccion\n                                | llamadas_func PUNTO_COMA\n                                | instruccion_if\n                                | instruccion_while\n                                | instruccion_forclase : CLASS IDENTIFICADOR LLAVE_APERTURA bloque_clase LLAVE_CLAUSURAbloque_clase : item_bloque_clase bloque_clase\n                    | item_bloque_claseitem_bloque_clase : instruccion\n                        | funcionnuevo_objeto : NEW IDENTIFICADOR PARENTESIS_APERTURA PARENTESIS_CLAUSURAllamadas_func : IDENTIFICADOR PUNTO llamadas_func\n                    | llamada_func PUNTO llamadas_func\n                    | llamada_funcllamada_func : IDENTIFICADOR PARENTESIS_APERTURA params PARENTESIS_CLAUSURA\n                    | IDENTIFICADOR PARENTESIS_APERTURA PARENTESIS_CLAUSURAparams : valor_general COMA params\n                | valor_generaldeclaracion_general : tipos_declaracion IDENTIFICADOR\n                            | TIPO_MAP IDENTIFICADOR\n                            | TIPO_LIST IDENTIFICADOR\n                            | VAR IDENTIFICADOR\n                            | DYNAMIC IDENTIFICADOR\n                            | TIPO_BOOL IDENTIFICADOR\n                            | TIPO_DOUBLE IDENTIFICADOR\n                            | TIPO_INT IDENTIFICADOR\n                            | TIPO_STRING IDENTIFICADORtipos_declaracion : TIPO_SET\n                        | TIPO_SYMBOL\n                        | TIPO_OBJECT\n                        | TIPO_FUTURE\n                        | TIPO_STREAM\n                        | TIPO_ITERABLE\n                        | TIPO_NEVERdeclaracion : declaracion_general PUNTO_COMAasignacion : asignacion_bool\n                | asignacion_int\n                | asignacion_double\n                | TIPO_BOOL IDENTIFICADOR SIGNO_IGUAL expresion_logica PUNTO_COMA\n                | asignacion_string\n                | VAR IDENTIFICADOR SIGNO_IGUAL valor_general PUNTO_COMA\n                | DYNAMIC IDENTIFICADOR SIGNO_IGUAL valor_general PUNTO_COMA\n                | IDENTIFICADOR SIGNO_IGUAL valor_general PUNTO_COMA\n                | IDENTIFICADOR SIGNO_MAS SIGNO_IGUAL expresion_mat_double PUNTO_COMA\n                | IDENTIFICADOR SIGNO_MENOS SIGNO_IGUAL expresion_mat_double PUNTO_COMA\n                | TIPO_MAP IDENTIFICADOR SIGNO_IGUAL bloque_mapa PUNTO_COMA\n                | valor_mapa_lista SIGNO_IGUAL valor_general PUNTO_COMA\n                | TIPO_LIST IDENTIFICADOR SIGNO_IGUAL lista PUNTO_COMA\n                | TIPO_LIST SIGNO_MENOR_QUE IDENTIFICADOR SIGNO_MAYOR_QUE IDENTIFICADOR SIGNO_IGUAL lista PUNTO_COMA\n                | VAR IDENTIFICADOR SIGNO_IGUAL lista PUNTO_COMA\n                | VAR IDENTIFICADOR SIGNO_IGUAL conjunto_especifico PUNTO_COMA\n                | TIPO_SET cast_int IDENTIFICADOR SIGNO_IGUAL LLAVE_APERTURA lista_numeros LLAVE_CLAUSURA PUNTO_COMA\n                | TIPO_SET cast_double IDENTIFICADOR SIGNO_IGUAL LLAVE_APERTURA lista_dobles LLAVE_CLAUSURA PUNTO_COMA\n                | TIPO_SET cast_string IDENTIFICADOR SIGNO_IGUAL LLAVE_APERTURA lista_cadenas LLAVE_CLAUSURA PUNTO_COMAasignacion_string : TIPO_STRING IDENTIFICADOR SIGNO_IGUAL DATO_CADENA_TEXTO PUNTO_COMAasignacion_bool : TIPO_BOOL IDENTIFICADOR SIGNO_IGUAL expresion_bool PUNTO_COMAasignacion_int : TIPO_INT IDENTIFICADOR SIGNO_IGUAL expresion_mat_int PUNTO_COMAasignacion_double : TIPO_DOUBLE IDENTIFICADOR SIGNO_IGUAL expresion_mat_double PUNTO_COMAbloque_mapa : LLAVE_APERTURA pares_llave_valor LLAVE_CLAUSURA\n                    | LLAVE_APERTURA LLAVE_CLAUSURA\n                    | NEW TIPO_MAP PARENTESIS_APERTURA PARENTESIS_CLAUSURApares_llave_valor : par_llave_valor COMA pares_llave_valor\n                        | par_llave_valorpar_llave_valor : valor_general DOBLE_PUNTO valor_generalvalor_general : expresion_mat_double\n                    | expresion_logica\n                    | DATO_CADENA_TEXTO\n                    | llamadas_func\n                    | nuevo_objeto\n                    | NULLvalor_mapa_lista : IDENTIFICADOR CORCHETE_APERTURA valor_general CORCHETE_CLAUSURAexpresion_bool : dato_bool\n                    | dato_bool ET ET dato_bool\n                    | dato_bool PLECA PLECA dato_bool\n                    | SIGNO_ADMIRACION_APERTURA dato_booldato_bool : TRUE\n                | FALSEexpresion_mat_int : expresion_int_no_menos\n                    | SIGNO_MENOS expresion_int_no_menosexpresion_int_no_menos : expresion_int_no_menos SIGNO_MAS expresion_int_no_menos\n                    | expresion_int_no_menos SIGNO_MENOS expresion_int_no_menos\n                    | expresion_int_no_menos SIGNO_MULTIPLICACION expresion_int_no_menos\n                    | expresion_int_no_menos PORCENTAJE expresion_int_no_menos\n                    | expresion_int_no_menos VIRGULILLA SIGNO_DIVISION expresion_int_no_menos\n                    | PARENTESIS_APERTURA expresion_int_no_menos PARENTESIS_CLAUSURA\n                    | DATO_ENTERO\n                    | IDENTIFICADORexpresion_mat_double : expresion_double_no_menos\n                    | SIGNO_MENOS expresion_double_no_menosexpresion_double_no_menos : expresion_double_no_menos SIGNO_MAS expresion_double_no_menos\n                    | expresion_double_no_menos SIGNO_MENOS expresion_double_no_menos\n                    | expresion_double_no_menos SIGNO_MULTIPLICACION expresion_double_no_menos\n                    | expresion_double_no_menos PORCENTAJE expresion_double_no_menos\n                    | expresion_double_no_menos SIGNO_DIVISION expresion_double_no_menos\n                    | PARENTESIS_APERTURA expresion_double_no_menos PARENTESIS_CLAUSURA\n                    | DATO_DOBLE\n                    | DATO_ENTERO\n                    | IDENTIFICADORexpresion_logica : expresion_logica PLECA PLECA expresion_logica\n                        | expresion_logica ET ET expresion_logica\n                        | PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA\n                        | SIGNO_ADMIRACION_APERTURA expresion_logica\n                        | comparacion\n                        | TRUE\n                        | FALSE\n                        | IDENTIFICADORcomparacion : expresion_mat_double SIGNO_MENOR_QUE expresion_mat_double\n                | expresion_mat_double SIGNO_MAYOR_QUE expresion_mat_double\n                | expresion_mat_double SIGNO_MENOR_QUE SIGNO_IGUAL expresion_mat_double\n                | expresion_mat_double SIGNO_MAYOR_QUE SIGNO_IGUAL expresion_mat_double\n                | expresion_mat_double SIGNO_IGUAL SIGNO_IGUAL expresion_mat_double\n                | expresion_mat_double SIGNO_ADMIRACION_APERTURA SIGNO_IGUAL expresion_mat_doublelista : CORCHETE_APERTURA lista_general CORCHETE_CLAUSURA\n                | CORCHETE_APERTURA CORCHETE_CLAUSURA\n                | TIPO_LIST PARENTESIS_APERTURA DATO_ENTERO PARENTESIS_CLAUSURA\n                | NEW TIPO_LIST CORCHETE_APERTURA CORCHETE_CLAUSURA\n                | NEW TIPO_LIST CORCHETE_APERTURA DATO_ENTERO CORCHETE_CLAUSURAlista_general : valor_general \n                        | valor_general COMA lista_generallista_numeros : DATO_ENTERO \n                        | DATO_ENTERO COMA lista_numeroslista_dobles : DATO_DOBLE \n                        | DATO_DOBLE COMA lista_dobleslista_cadenas : DATO_CADENA_TEXTO \n                        | DATO_CADENA_TEXTO COMA lista_cadenasconjunto_especifico : cast_int LLAVE_APERTURA lista_numeros LLAVE_CLAUSURA\n                            | cast_double LLAVE_APERTURA lista_dobles LLAVE_CLAUSURA\n                            | cast_string LLAVE_APERTURA lista_cadenas LLAVE_CLAUSURAcast_int : SIGNO_MENOR_QUE TIPO_INT SIGNO_MAYOR_QUEcast_double : SIGNO_MENOR_QUE TIPO_DOUBLE SIGNO_MAYOR_QUEcast_string : SIGNO_MENOR_QUE TIPO_STRING SIGNO_MAYOR_QUEfuncion : MAIN PARENTESIS_APERTURA PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA\n                | VOID IDENTIFICADOR PARENTESIS_APERTURA PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA\n                | declaracion_general PARENTESIS_APERTURA PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA\n                | VOID IDENTIFICADOR PARENTESIS_APERTURA parametros PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA\n                | declaracion_general PARENTESIS_APERTURA parametros PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA\n                | VOID IDENTIFICADOR funcion_flecha\n                | declaracion_general funcion_flechafuncion_flecha : PARENTESIS_APERTURA PARENTESIS_CLAUSURA SIGNO_IGUAL SIGNO_MAYOR_QUE item_funcion\n                      | PARENTESIS_APERTURA parametros PARENTESIS_CLAUSURA SIGNO_IGUAL SIGNO_MAYOR_QUE item_funcionparametros : declaracion_general\n                    | declaracion_general COMA parametrositems_funcion : item_funcion items_funcion\n                    | item_funcionitem_funcion : instruccion\n                    | instruccion_if\n                    | llamadas_func PUNTO_COMA\n                    | instruccion_while\n                    | instruccion_for\n                    | instruccion_switch\n                    | inst_returninst_return : RETURN valor_general PUNTO_COMA'
    
_lr_action_items = {'ABSTRACT':([0,2,3,4,6,7,8,9,10,11,13,24,25,26,28,48,49,60,69,70,129,150,175,238,256,281,282,285,286,288,289,290,291,314,315,316,320,321,322,331,332,338,343,344,352,362,364,373,374,422,423,425,426,427,430,431,464,465,477,478,479,480,490,496,520,525,],[5,5,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-91,-5,-14,-16,-189,-86,-188,-12,-94,-98,-57,-95,-96,-196,-197,-199,-200,-201,-202,-11,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,-106,-183,-198,-185,-190,-203,-184,-187,-191,-45,-21,-22,-186,-46,-100,-103,-104,-105,-34,-49,-48,-47,]),'FINAL':([0,2,3,4,6,7,8,9,10,11,13,24,25,26,28,48,49,60,69,70,102,129,150,170,171,172,175,198,202,238,256,281,282,284,285,286,288,289,290,291,300,304,305,307,308,309,314,315,316,320,321,322,331,332,338,343,344,352,362,364,372,373,374,376,378,379,381,382,383,422,423,425,426,427,429,430,431,464,465,477,478,479,480,483,490,496,497,498,500,503,506,520,525,],[12,12,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-91,-5,-14,-16,-189,-86,12,-188,-12,12,-60,-61,-94,12,12,-98,-57,-95,-96,12,-196,-197,-199,-200,-201,-202,12,12,12,12,12,12,-11,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,-106,-183,-198,12,-185,-190,12,12,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,12,-34,-49,12,12,12,12,12,-48,-47,]),'CLASS':([0,2,3,4,5,6,7,8,9,10,11,13,24,25,26,28,48,49,60,69,70,129,150,175,238,256,281,282,285,286,288,289,290,291,314,315,316,320,321,322,331,332,338,343,344,352,362,364,373,374,422,423,425,426,427,430,431,464,465,477,478,479,480,490,496,520,525,],[15,15,-3,-4,15,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-91,-5,-14,-16,-189,-86,-188,-12,-94,-98,-57,-95,-96,-196,-197,-199,-200,-201,-202,-11,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,-106,-183,-198,-185,-190,-203,-184,-187,-191,-45,-21,-22,-186,-46,-100,-103,-104,-105,-34,-49,-48,-47,]),'MAIN':([0,2,3,4,6,7,8,9,10,11,13,24,25,26,28,48,49,60,69,70,102,129,150,170,171,172,175,238,256,281,282,285,286,288,289,290,291,314,315,316,320,321,322,331,332,338,343,344,352,362,364,373,374,422,423,425,426,427,430,431,464,465,477,478,479,480,490,496,520,525,],[17,17,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-91,-5,-14,-16,-189,-86,17,-188,-12,17,-60,-61,-94,-98,-57,-95,-96,-196,-197,-199,-200,-201,-202,-11,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,-106,-183,-198,-185,-190,-203,-184,-187,-191,-45,-21,-22,-186,-46,-100,-103,-104,-105,-34,-49,-48,-47,]),'VOID':([0,2,3,4,6,7,8,9,10,11,13,24,25,26,28,48,49,60,69,70,102,129,150,170,171,172,175,238,256,281,282,285,286,288,289,290,291,314,315,316,320,321,322,331,332,338,343,344,352,362,364,373,374,422,423,425,426,427,430,431,464,465,477,478,479,480,490,496,520,525,],[18,18,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-91,-5,-14,-16,-189,-86,18,-188,-12,18,-60,-61,-94,-98,-57,-95,-96,-196,-197,-199,-200,-201,-202,-11,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,-106,-183,-198,-185,-190,-203,-184,-187,-191,-45,-21,-22,-186,-46,-100,-103,-104,-105,-34,-49,-48,-47,]),'IF':([0,2,3,4,6,7,8,9,10,11,13,24,25,26,28,48,49,60,69,70,129,150,175,198,202,238,256,281,282,284,285,286,288,289,290,291,300,304,305,307,308,309,314,315,316,320,321,322,331,332,338,343,344,352,362,364,372,373,374,376,378,379,381,382,383,422,423,425,426,427,429,430,431,464,465,466,477,478,479,480,483,490,496,500,503,506,520,525,],[20,20,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-91,-5,-14,-16,-189,-86,-188,-12,-94,20,20,-98,-57,-95,-96,20,-196,-197,-199,-200,-201,-202,20,20,20,20,20,20,-11,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,-106,-183,-198,20,-185,-190,20,20,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,482,-100,-103,-104,-105,20,-34,-49,20,20,20,-48,-47,]),'WHILE':([0,2,3,4,6,7,8,9,10,11,13,24,25,26,28,48,49,60,69,70,129,150,175,198,202,238,256,281,282,284,285,286,288,289,290,291,300,304,305,307,308,309,314,315,316,320,321,322,331,332,338,343,344,352,362,364,372,373,374,376,378,379,381,382,383,422,423,425,426,427,429,430,431,464,465,477,478,479,480,483,490,496,500,503,506,520,525,],[21,21,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-91,-5,-14,-16,-189,-86,-188,-12,-94,21,21,-98,-57,-95,-96,21,-196,-197,-199,-200,-201,-202,21,21,21,21,21,21,-11,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,-106,-183,-198,21,-185,-190,21,21,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,21,-34,-49,21,21,21,-48,-47,]),'FOR':([0,2,3,4,6,7,8,9,10,11,13,24,25,26,28,48,49,60,69,70,129,150,175,198,202,238,256,281,282,284,285,286,288,289,290,291,300,304,305,307,308,309,314,315,316,320,321,322,331,332,338,343,344,352,362,364,372,373,374,376,378,379,381,382,383,422,423,425,426,427,429,430,431,464,465,477,478,479,480,483,490,496,500,503,506,520,525,],[22,22,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-91,-5,-14,-16,-189,-86,-188,-12,-94,22,22,-98,-57,-95,-96,22,-196,-197,-199,-200,-201,-202,22,22,22,22,22,22,-11,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,-106,-183,-198,22,-185,-190,22,22,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,22,-34,-49,22,22,22,-48,-47,]),'IMPORT':([0,2,3,4,6,7,8,9,10,11,13,24,25,26,28,48,49,60,69,70,129,150,175,238,256,281,282,285,286,288,289,290,291,314,315,316,320,321,322,331,332,338,343,344,352,362,364,373,374,422,423,425,426,427,430,431,464,465,477,478,479,480,490,496,520,525,],[23,23,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-91,-5,-14,-16,-189,-86,-188,-12,-94,-98,-57,-95,-96,-196,-197,-199,-200,-201,-202,-11,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,-106,-183,-198,-185,-190,-203,-184,-187,-191,-45,-21,-22,-186,-46,-100,-103,-104,-105,-34,-49,-48,-47,]),'TIPO_BOOL':([0,2,3,4,6,7,8,9,10,11,12,13,24,25,26,28,48,49,60,68,69,70,102,128,129,150,170,171,172,175,198,201,202,238,256,281,282,284,285,286,288,289,290,291,300,304,305,307,308,309,314,315,316,320,321,322,331,332,338,343,344,352,362,364,372,373,374,376,378,379,381,382,383,422,423,425,426,427,429,430,431,464,465,477,478,479,480,483,490,496,497,498,500,503,506,520,525,],[27,27,-3,-4,-6,-7,-8,-9,-10,-13,50,-15,-87,-88,-89,-91,-5,-14,-16,137,-189,-86,27,137,-188,-12,27,-60,-61,-94,295,137,295,-98,-57,-95,-96,295,-196,-197,-199,-200,-201,-202,295,295,295,295,295,295,-11,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,-106,-183,-198,295,-185,-190,295,295,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,295,-34,-49,295,295,295,295,295,-48,-47,]),'VAR':([0,2,3,4,6,7,8,9,10,11,12,13,24,25,26,28,48,49,60,68,69,70,102,128,129,150,170,171,172,175,198,201,202,238,256,281,282,284,285,286,288,289,290,291,300,304,305,307,308,309,314,315,316,320,321,322,331,332,338,343,344,352,362,364,372,373,374,376,378,379,381,382,383,422,423,425,426,427,429,430,431,464,465,477,478,479,480,483,490,496,497,498,500,503,506,520,525,],[29,29,-3,-4,-6,-7,-8,-9,-10,-13,52,-15,-87,-88,-89,-91,-5,-14,-16,135,-189,-86,29,135,-188,-12,29,-60,-61,-94,29,135,29,-98,-57,-95,-96,29,-196,-197,-199,-200,-201,-202,29,29,29,29,29,29,-11,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,-106,-183,-198,29,-185,-190,29,29,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,29,-34,-49,29,29,29,29,29,-48,-47,]),'DYNAMIC':([0,2,3,4,6,7,8,9,10,11,12,13,24,25,26,28,48,49,60,68,69,70,102,128,129,150,170,171,172,175,198,201,202,238,256,281,282,284,285,286,288,289,290,291,300,304,305,307,308,309,314,315,316,320,321,322,331,332,338,343,344,352,362,364,372,373,374,376,378,379,381,382,383,422,423,425,426,427,429,430,431,464,465,477,478,479,480,483,490,496,497,498,500,503,506,520,525,],[30,30,-3,-4,-6,-7,-8,-9,-10,-13,53,-15,-87,-88,-89,-91,-5,-14,-16,136,-189,-86,30,136,-188,-12,30,-60,-61,-94,30,136,30,-98,-57,-95,-96,30,-196,-197,-199,-200,-201,-202,30,30,30,30,30,30,-11,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,-106,-183,-198,30,-185,-190,30,30,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,30,-34,-49,30,30,30,30,30,-48,-47,]),'IDENTIFICADOR':([0,2,3,4,6,7,8,9,10,11,12,13,15,18,24,25,26,27,28,29,30,33,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,52,53,54,55,57,58,59,60,62,65,69,70,71,72,78,79,81,83,84,85,86,102,112,113,114,119,123,125,129,133,134,135,136,137,138,139,140,141,147,149,150,151,152,153,166,167,170,171,172,173,174,175,176,177,182,183,184,185,186,188,193,198,202,217,221,228,230,236,238,241,245,246,247,252,253,256,264,266,267,268,269,270,281,282,284,285,286,288,289,290,291,294,295,297,298,299,300,304,305,307,308,309,310,311,314,315,316,320,321,322,331,332,338,343,344,345,346,347,348,352,354,362,364,365,372,373,374,376,378,379,381,382,383,389,397,407,408,418,422,423,425,426,427,429,430,431,464,465,477,478,479,480,483,487,488,490,496,497,498,500,503,506,520,525,],[16,16,-3,-4,-6,-7,-8,-9,-10,-13,51,-15,61,67,-87,-88,-89,75,-91,76,77,80,82,-79,88,89,90,91,-80,-81,-82,-83,-84,-85,-5,-14,92,95,96,97,98,99,100,101,-16,103,103,-189,-86,143,143,154,155,103,159,160,161,162,16,189,143,143,194,189,189,-188,205,206,207,208,209,210,211,212,-79,216,218,-12,143,103,103,189,249,16,-60,-61,258,103,-94,189,189,189,189,189,189,189,189,258,292,292,313,143,103,194,103,-98,339,-180,-181,-182,249,249,-57,189,189,189,189,143,143,-95,-96,292,-196,-197,-199,-200,-201,-202,103,367,368,369,370,292,292,292,292,292,292,386,387,-11,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,249,249,249,249,-106,103,-183,-198,421,292,-185,-190,292,292,-52,-54,-55,-56,434,103,103,103,249,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,292,103,143,-34,-49,292,292,292,292,292,-48,-47,]),'TIPO_MAP':([0,2,3,4,6,7,8,9,10,11,12,13,24,25,26,28,48,49,60,68,69,70,102,128,129,150,170,171,172,175,198,201,202,237,238,256,281,282,284,285,286,288,289,290,291,300,304,305,307,308,309,314,315,316,320,321,322,331,332,338,343,344,352,362,364,372,373,374,376,378,379,381,382,383,422,423,425,426,427,429,430,431,464,465,477,478,479,480,483,490,496,497,498,500,503,506,520,525,],[33,33,-3,-4,-6,-7,-8,-9,-10,-13,54,-15,-87,-88,-89,-91,-5,-14,-16,133,-189,-86,33,133,-188,-12,33,-60,-61,-94,33,133,33,337,-98,-57,-95,-96,33,-196,-197,-199,-200,-201,-202,33,33,33,33,33,33,-11,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,-106,-183,-198,33,-185,-190,33,33,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,33,-34,-49,33,33,33,33,33,-48,-47,]),'TIPO_LIST':([0,2,3,4,6,7,8,9,10,11,12,13,24,25,26,28,48,49,60,68,69,70,102,128,129,150,152,158,170,171,172,175,198,201,202,230,238,240,256,281,282,284,285,286,288,289,290,291,300,304,305,307,308,309,314,315,316,320,321,322,331,332,338,343,344,352,362,364,372,373,374,376,378,379,381,382,383,410,422,423,425,426,427,429,430,431,464,465,477,478,479,480,483,490,496,497,498,500,503,506,520,525,],[35,35,-3,-4,-6,-7,-8,-9,-10,-13,55,-15,-87,-88,-89,-91,-5,-14,-16,134,-189,-86,35,134,-188,-12,229,229,35,-60,-61,-94,35,134,35,327,-98,327,-57,-95,-96,35,-196,-197,-199,-200,-201,-202,35,35,35,35,35,35,-11,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,-106,-183,-198,35,-185,-190,35,35,-52,-54,-55,-56,229,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,35,-34,-49,35,35,35,35,35,-48,-47,]),'TIPO_SET':([0,2,3,4,6,7,8,9,10,11,12,13,24,25,26,28,48,49,60,68,69,70,102,128,129,150,170,171,172,175,198,201,202,238,256,281,282,284,285,286,288,289,290,291,300,304,305,307,308,309,314,315,316,320,321,322,331,332,338,343,344,352,362,364,372,373,374,376,378,379,381,382,383,422,423,425,426,427,429,430,431,464,465,477,478,479,480,483,490,496,497,498,500,503,506,520,525,],[36,36,-3,-4,-6,-7,-8,-9,-10,-13,56,-15,-87,-88,-89,-91,-5,-14,-16,141,-189,-86,36,141,-188,-12,36,-60,-61,-94,36,141,36,-98,-57,-95,-96,36,-196,-197,-199,-200,-201,-202,36,36,36,36,36,36,-11,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,-106,-183,-198,36,-185,-190,36,36,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,36,-34,-49,36,36,36,36,36,-48,-47,]),'SIGNO_MAS':([0,2,3,4,6,7,8,9,10,11,13,16,24,25,26,28,31,48,49,51,60,63,69,70,102,103,111,120,121,129,143,150,170,171,172,175,187,189,191,198,202,238,249,251,254,256,271,272,273,274,275,276,278,281,282,284,285,286,288,289,290,291,292,300,304,305,307,308,309,314,315,316,320,321,322,331,332,338,343,344,350,351,352,362,364,372,373,374,376,378,379,381,382,383,389,414,415,416,417,419,422,423,425,426,427,429,430,431,434,462,464,465,467,477,478,479,480,483,490,496,497,498,500,503,506,520,525,],[31,31,-3,-4,-6,-7,-8,-9,-10,-13,-15,63,-87,-88,-89,-91,78,-5,-14,93,-16,122,-189,-86,31,-149,182,-147,-148,-188,-149,-12,31,-60,-61,-94,182,-149,182,31,31,-98,-138,345,-137,-57,182,182,182,182,182,182,-146,-95,-96,31,-196,-197,-199,-200,-201,-202,63,31,31,31,31,31,31,-11,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,345,345,-106,-183,-198,31,-185,-190,31,31,-52,-54,-55,-56,31,345,345,345,345,-136,-203,-184,-187,-191,-45,-53,-21,-22,467,345,-186,-46,122,-100,-103,-104,-105,31,-34,-49,31,31,31,31,31,-48,-47,]),'SIGNO_MENOS':([0,2,3,4,6,7,8,9,10,11,13,16,24,25,26,28,32,48,49,51,60,62,64,65,69,70,71,72,81,102,103,111,113,114,120,121,123,125,129,143,150,151,152,153,166,167,170,171,172,174,175,176,177,187,189,191,198,202,221,228,236,238,249,251,254,256,264,266,267,268,269,270,271,272,273,274,275,276,278,281,282,284,285,286,288,289,290,291,292,294,300,304,305,307,308,309,314,315,316,320,321,322,331,332,338,343,344,350,351,352,354,362,364,372,373,374,376,378,379,381,382,383,389,397,407,408,414,415,416,417,419,422,423,425,426,427,429,430,431,434,462,464,465,468,477,478,479,480,483,487,488,490,496,497,498,500,503,506,520,525,],[32,32,-3,-4,-6,-7,-8,-9,-10,-13,-15,64,-87,-88,-89,-91,79,-5,-14,94,-16,112,124,112,-189,-86,112,112,112,32,-149,183,112,112,-147,-148,112,112,-188,-149,-12,112,112,112,112,252,32,-60,-61,112,-94,112,112,183,-149,183,32,32,112,112,112,-98,-138,346,-137,-57,112,112,112,112,112,112,183,183,183,183,183,183,-146,-95,-96,32,-196,-197,-199,-200,-201,-202,64,112,32,32,32,32,32,32,-11,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,346,346,-106,112,-183,-198,32,-185,-190,32,32,-52,-54,-55,-56,32,112,112,112,346,346,346,346,-136,-203,-184,-187,-191,-45,-53,-21,-22,468,346,-186,-46,124,-100,-103,-104,-105,32,112,112,-34,-49,32,32,32,32,32,-48,-47,]),'TIPO_DOUBLE':([0,2,3,4,6,7,8,9,10,11,12,13,24,25,26,28,48,49,60,68,69,70,87,102,128,129,150,170,171,172,175,198,201,202,238,256,281,282,284,285,286,288,289,290,291,300,304,305,307,308,309,314,315,316,320,321,322,331,332,338,343,344,352,362,364,372,373,374,376,378,379,381,382,383,422,423,425,426,427,429,430,431,464,465,477,478,479,480,483,490,496,497,498,500,503,506,520,525,],[38,38,-3,-4,-6,-7,-8,-9,-10,-13,58,-15,-87,-88,-89,-91,-5,-14,-16,138,-189,-86,164,38,138,-188,-12,38,-60,-61,-94,298,138,298,-98,-57,-95,-96,298,-196,-197,-199,-200,-201,-202,298,298,298,298,298,298,-11,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,-106,-183,-198,298,-185,-190,298,298,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,298,-34,-49,298,298,298,298,298,-48,-47,]),'TIPO_INT':([0,2,3,4,6,7,8,9,10,11,12,13,24,25,26,28,48,49,60,68,69,70,73,87,102,128,129,150,170,171,172,175,198,201,202,238,256,281,282,284,285,286,288,289,290,291,300,304,305,307,308,309,314,315,316,320,321,322,331,332,338,343,344,352,362,364,372,373,374,376,378,379,381,382,383,422,423,425,426,427,429,430,431,464,465,477,478,479,480,483,490,496,497,498,500,503,506,520,525,],[39,39,-3,-4,-6,-7,-8,-9,-10,-13,57,-15,-87,-88,-89,-91,-5,-14,-16,139,-189,-86,147,163,39,139,-188,-12,39,-60,-61,-94,297,139,297,-98,-57,-95,-96,297,-196,-197,-199,-200,-201,-202,297,297,297,297,297,297,-11,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,-106,-183,-198,297,-185,-190,297,297,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,297,-34,-49,297,297,297,297,297,-48,-47,]),'TIPO_STRING':([0,2,3,4,6,7,8,9,10,11,12,13,24,25,26,28,48,49,60,68,69,70,87,102,128,129,150,170,171,172,175,198,201,202,238,256,281,282,284,285,286,288,289,290,291,300,304,305,307,308,309,314,315,316,320,321,322,331,332,338,343,344,352,362,364,372,373,374,376,378,379,381,382,383,422,423,425,426,427,429,430,431,464,465,477,478,479,480,483,490,496,497,498,500,503,506,520,525,],[40,40,-3,-4,-6,-7,-8,-9,-10,-13,59,-15,-87,-88,-89,-91,-5,-14,-16,140,-189,-86,165,40,140,-188,-12,40,-60,-61,-94,299,140,299,-98,-57,-95,-96,299,-196,-197,-199,-200,-201,-202,299,299,299,299,299,299,-11,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,-106,-183,-198,299,-185,-190,299,299,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,299,-34,-49,299,299,299,299,299,-48,-47,]),'TIPO_SYMBOL':([0,2,3,4,6,7,8,9,10,11,13,24,25,26,28,48,49,60,68,69,70,102,128,129,150,170,171,172,175,198,201,202,238,256,281,282,284,285,286,288,289,290,291,300,304,305,307,308,309,314,315,316,320,321,322,331,332,338,343,344,352,362,364,372,373,374,376,378,379,381,382,383,422,423,425,426,427,429,430,431,464,465,477,478,479,480,483,490,496,497,498,500,503,506,520,525,],[41,41,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-91,-5,-14,-16,41,-189,-86,41,41,-188,-12,41,-60,-61,-94,41,41,41,-98,-57,-95,-96,41,-196,-197,-199,-200,-201,-202,41,41,41,41,41,41,-11,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,-106,-183,-198,41,-185,-190,41,41,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,41,-34,-49,41,41,41,41,41,-48,-47,]),'TIPO_OBJECT':([0,2,3,4,6,7,8,9,10,11,13,24,25,26,28,48,49,60,68,69,70,102,128,129,150,170,171,172,175,198,201,202,238,256,281,282,284,285,286,288,289,290,291,300,304,305,307,308,309,314,315,316,320,321,322,331,332,338,343,344,352,362,364,372,373,374,376,378,379,381,382,383,422,423,425,426,427,429,430,431,464,465,477,478,479,480,483,490,496,497,498,500,503,506,520,525,],[42,42,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-91,-5,-14,-16,42,-189,-86,42,42,-188,-12,42,-60,-61,-94,42,42,42,-98,-57,-95,-96,42,-196,-197,-199,-200,-201,-202,42,42,42,42,42,42,-11,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,-106,-183,-198,42,-185,-190,42,42,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,42,-34,-49,42,42,42,42,42,-48,-47,]),'TIPO_FUTURE':([0,2,3,4,6,7,8,9,10,11,13,24,25,26,28,48,49,60,68,69,70,102,128,129,150,170,171,172,175,198,201,202,238,256,281,282,284,285,286,288,289,290,291,300,304,305,307,308,309,314,315,316,320,321,322,331,332,338,343,344,352,362,364,372,373,374,376,378,379,381,382,383,422,423,425,426,427,429,430,431,464,465,477,478,479,480,483,490,496,497,498,500,503,506,520,525,],[43,43,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-91,-5,-14,-16,43,-189,-86,43,43,-188,-12,43,-60,-61,-94,43,43,43,-98,-57,-95,-96,43,-196,-197,-199,-200,-201,-202,43,43,43,43,43,43,-11,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,-106,-183,-198,43,-185,-190,43,43,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,43,-34,-49,43,43,43,43,43,-48,-47,]),'TIPO_STREAM':([0,2,3,4,6,7,8,9,10,11,13,24,25,26,28,48,49,60,68,69,70,102,128,129,150,170,171,172,175,198,201,202,238,256,281,282,284,285,286,288,289,290,291,300,304,305,307,308,309,314,315,316,320,321,322,331,332,338,343,344,352,362,364,372,373,374,376,378,379,381,382,383,422,423,425,426,427,429,430,431,464,465,477,478,479,480,483,490,496,497,498,500,503,506,520,525,],[44,44,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-91,-5,-14,-16,44,-189,-86,44,44,-188,-12,44,-60,-61,-94,44,44,44,-98,-57,-95,-96,44,-196,-197,-199,-200,-201,-202,44,44,44,44,44,44,-11,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,-106,-183,-198,44,-185,-190,44,44,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,44,-34,-49,44,44,44,44,44,-48,-47,]),'TIPO_ITERABLE':([0,2,3,4,6,7,8,9,10,11,13,24,25,26,28,48,49,60,68,69,70,102,128,129,150,170,171,172,175,198,201,202,238,256,281,282,284,285,286,288,289,290,291,300,304,305,307,308,309,314,315,316,320,321,322,331,332,338,343,344,352,362,364,372,373,374,376,378,379,381,382,383,422,423,425,426,427,429,430,431,464,465,477,478,479,480,483,490,496,497,498,500,503,506,520,525,],[45,45,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-91,-5,-14,-16,45,-189,-86,45,45,-188,-12,45,-60,-61,-94,45,45,45,-98,-57,-95,-96,45,-196,-197,-199,-200,-201,-202,45,45,45,45,45,45,-11,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,-106,-183,-198,45,-185,-190,45,45,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,45,-34,-49,45,45,45,45,45,-48,-47,]),'TIPO_NEVER':([0,2,3,4,6,7,8,9,10,11,13,24,25,26,28,48,49,60,68,69,70,102,128,129,150,170,171,172,175,198,201,202,238,256,281,282,284,285,286,288,289,290,291,300,304,305,307,308,309,314,315,316,320,321,322,331,332,338,343,344,352,362,364,372,373,374,376,378,379,381,382,383,422,423,425,426,427,429,430,431,464,465,477,478,479,480,483,490,496,497,498,500,503,506,520,525,],[46,46,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-91,-5,-14,-16,46,-189,-86,46,46,-188,-12,46,-60,-61,-94,46,46,46,-98,-57,-95,-96,46,-196,-197,-199,-200,-201,-202,46,46,46,46,46,46,-11,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,-106,-183,-198,46,-185,-190,46,46,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,46,-34,-49,46,46,46,46,46,-48,-47,]),'$end':([1,2,3,4,6,7,8,9,10,11,13,24,25,26,28,47,48,49,60,69,70,129,150,175,238,256,281,282,285,286,288,289,290,291,314,315,316,320,321,322,331,332,338,343,344,352,362,364,373,374,422,423,425,426,427,430,431,464,465,477,478,479,480,490,496,520,525,],[0,-2,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-91,-1,-5,-14,-16,-189,-86,-188,-12,-94,-98,-57,-95,-96,-196,-197,-199,-200,-201,-202,-11,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,-106,-183,-198,-185,-190,-203,-184,-187,-191,-45,-21,-22,-186,-46,-100,-103,-104,-105,-34,-49,-48,-47,]),'LLAVE_CLAUSURA':([11,13,24,25,26,28,49,60,69,70,103,105,106,107,108,109,110,111,115,116,117,118,120,121,129,143,169,170,171,172,175,187,189,192,236,238,257,259,261,263,265,271,272,273,274,275,277,278,279,281,282,283,284,285,286,288,289,290,291,303,315,316,320,321,322,331,332,333,335,338,343,344,352,353,355,356,357,358,359,360,361,362,363,364,371,373,374,375,377,378,379,381,382,383,384,385,400,401,402,403,404,405,411,412,413,422,423,424,425,426,427,428,429,430,431,455,456,464,465,474,475,476,477,478,479,480,484,485,486,489,490,491,493,496,507,510,513,515,518,520,522,524,525,526,527,],[-13,-15,-87,-88,-89,-91,-14,-16,-189,-86,-149,-116,-117,-118,-119,-120,-121,-139,-154,-155,-156,-65,-147,-148,-188,-157,256,-59,-60,-61,-94,-140,-149,-153,334,-98,-58,-63,-67,-158,-159,-141,-142,-143,-144,-145,-152,-146,-64,-95,-96,362,-195,-196,-197,-199,-200,-201,-202,373,-90,-107,-92,-101,-102,-93,-97,406,-114,-99,-109,-108,-106,-66,-160,-161,-162,-163,-150,-151,-62,-183,-194,-198,423,-185,-190,425,427,-51,-52,-54,-55,-56,430,431,449,-171,451,-173,453,-175,459,460,461,-203,-184,464,-187,-191,-45,-50,-53,-21,-22,-113,-115,-186,-46,-172,-174,-176,-100,-103,-104,-105,490,-36,-38,496,-34,-35,-37,-49,514,517,520,-43,-40,-48,-44,-41,-47,-42,-39,]),'SWITCH':([11,13,24,25,26,28,49,60,70,175,198,202,238,281,282,284,285,286,288,289,290,291,300,304,305,315,316,320,321,322,331,332,338,343,344,352,364,372,376,422,427,430,431,465,477,478,479,480,490,496,520,525,],[-13,-15,-87,-88,-89,-91,-14,-16,-86,-94,293,293,-98,-95,-96,293,-196,-197,-199,-200,-201,-202,293,293,293,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,-106,-198,293,293,-203,-45,-21,-22,-46,-100,-103,-104,-105,-34,-49,-48,-47,]),'RETURN':([11,13,24,25,26,28,49,60,70,175,198,202,238,281,282,284,285,286,288,289,290,291,300,304,305,315,316,320,321,322,331,332,338,343,344,352,364,372,376,422,427,430,431,465,477,478,479,480,490,496,520,525,],[-13,-15,-87,-88,-89,-91,-14,-16,-86,-94,294,294,-98,-95,-96,294,-196,-197,-199,-200,-201,-202,294,294,294,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,-106,-198,294,294,-203,-45,-21,-22,-46,-100,-103,-104,-105,-34,-49,-48,-47,]),'BREAK':([11,13,24,25,26,28,49,60,70,175,238,281,282,315,316,320,321,322,331,332,338,343,344,352,477,478,479,480,501,504,509,512,514,517,],[-13,-15,-87,-88,-89,-91,-14,-16,-86,-94,-98,-95,-96,-90,-107,-92,-101,-102,-93,-97,-99,-109,-108,-106,-100,-103,-104,-105,508,511,516,519,521,523,]),'PUNTO_COMA':([14,19,74,75,76,77,80,82,88,89,90,91,103,104,105,106,107,108,109,110,111,115,116,117,118,120,121,122,124,143,148,154,155,157,187,189,192,195,196,218,219,220,222,223,224,225,226,227,234,235,239,248,249,250,251,254,255,259,261,263,265,271,272,273,274,275,277,278,279,287,296,312,317,324,334,350,353,355,356,357,358,359,360,361,366,367,368,369,370,380,387,388,396,406,414,415,416,417,419,435,437,441,442,443,444,446,447,449,451,453,457,458,459,460,461,462,469,470,471,472,473,502,505,508,511,516,519,521,523,],[60,70,150,-75,-73,-74,-71,-72,-70,-76,-77,-78,-149,175,-116,-117,-118,-119,-120,-121,-139,-154,-155,-156,-65,-147,-148,-17,-18,-157,217,-19,-20,238,-140,-149,-153,281,282,314,315,316,-127,-128,-123,320,321,322,331,332,338,343,-138,344,-129,-137,352,-63,-67,-158,-159,-141,-142,-143,-144,-145,-152,-146,-64,364,70,389,-126,-165,-111,-130,-66,-160,-161,-162,-163,-150,-151,-62,422,-75,-77,-76,-78,429,-25,-26,-164,-110,-131,-132,-133,-134,-136,-27,-28,-124,-127,-128,-125,-166,-167,-177,-178,-179,-112,477,478,479,480,-135,-29,-30,-31,-32,-168,509,512,515,518,522,524,526,527,]),'SIGNO_IGUAL':([16,34,51,63,64,75,76,77,80,82,89,90,91,92,93,94,95,96,97,98,99,100,101,103,105,111,120,121,131,143,144,160,161,162,176,177,178,179,187,189,191,197,199,204,216,271,272,273,274,275,278,292,301,313,339,367,368,369,370,390,391,392,393,],[62,81,62,123,125,151,152,153,156,158,166,167,168,151,123,125,152,153,156,158,167,166,168,-149,178,-139,-147,-148,203,-149,178,242,243,244,264,266,267,268,-140,-149,-139,-122,203,306,311,-141,-142,-143,-144,-145,-146,62,306,392,410,151,167,166,168,436,438,439,440,]),'CORCHETE_APERTURA':([16,51,152,158,292,327,410,],[65,65,228,228,65,399,228,]),'PARENTESIS_APERTURA':([17,19,20,21,22,62,65,67,71,72,75,76,77,80,81,82,88,89,90,91,103,112,113,114,123,125,151,152,153,166,167,174,176,177,182,183,184,185,186,188,194,221,228,229,236,252,253,258,264,266,267,268,269,270,292,293,294,337,345,346,347,348,354,397,407,408,418,482,487,488,],[66,68,71,72,73,113,113,128,113,113,-75,-73,-74,-71,113,-72,-70,-76,-77,-78,174,188,113,113,188,188,113,113,113,188,253,113,188,188,188,188,188,188,188,188,280,113,113,326,113,253,253,174,188,188,188,188,113,113,174,365,113,409,253,253,253,253,113,113,113,113,253,488,113,113,]),'DATO_CADENA_TEXTO':([23,62,65,81,152,153,168,174,228,236,294,330,342,354,397,407,408,454,487,],[74,107,107,107,107,107,255,107,107,107,107,405,405,107,107,107,107,405,107,]),'SIGNO_MENOR_QUE':([35,36,55,56,103,105,111,120,121,143,144,152,187,189,191,271,272,273,274,275,278,313,],[83,87,83,87,-149,176,-139,-147,-148,-149,176,87,-140,-149,-139,-141,-142,-143,-144,-145,-146,390,]),'LLAVE_APERTURA':([61,127,131,156,199,204,213,214,215,231,232,233,242,243,244,245,246,247,301,463,466,497,498,499,],[102,198,202,236,300,305,307,308,309,328,329,330,340,341,342,-180,-181,-182,372,481,483,500,503,506,]),'NULL':([62,65,81,152,153,174,228,236,294,354,397,407,408,487,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'SIGNO_ADMIRACION_APERTURA':([62,65,71,72,81,103,105,111,113,114,120,121,143,144,151,152,153,174,187,189,191,221,228,236,269,270,271,272,273,274,275,278,294,313,354,397,407,408,487,488,],[114,114,114,114,114,-149,179,-139,114,114,-147,-148,-149,179,221,114,114,114,-140,-149,-139,114,114,114,114,114,-141,-142,-143,-144,-145,-146,114,393,114,114,114,114,114,114,]),'TRUE':([62,65,71,72,81,113,114,151,152,153,174,221,228,236,269,270,294,354,394,395,397,407,408,487,488,],[116,116,116,116,116,116,116,222,116,116,116,222,116,116,116,116,116,116,442,442,116,116,116,116,116,]),'FALSE':([62,65,71,72,81,113,114,151,152,153,174,221,228,236,269,270,294,354,394,395,397,407,408,487,488,],[117,117,117,117,117,117,117,223,117,117,117,223,117,117,117,117,117,117,443,443,117,117,117,117,117,]),'NEW':([62,65,81,152,153,156,158,174,228,236,294,354,397,407,408,410,487,],[119,119,119,230,119,237,240,119,119,119,119,119,119,119,119,240,119,]),'DATO_DOBLE':([62,65,71,72,81,112,113,114,123,125,151,152,153,166,174,176,177,182,183,184,185,186,188,221,228,236,264,266,267,268,269,270,294,329,341,354,397,407,408,452,487,488,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,403,403,120,120,120,120,403,120,120,]),'DATO_ENTERO':([62,65,71,72,81,112,113,114,123,125,151,152,153,166,167,174,176,177,182,183,184,185,186,188,221,228,236,252,253,264,266,267,268,269,270,294,311,326,328,340,345,346,347,348,354,390,391,397,399,407,408,418,436,438,439,440,450,487,488,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,254,121,121,121,121,121,121,121,121,121,121,121,121,254,254,121,121,121,121,121,121,121,388,398,401,401,254,254,254,254,121,435,437,121,448,121,121,254,469,470,471,472,401,121,121,]),'PARENTESIS_CLAUSURA':([66,68,88,103,105,106,107,108,109,110,111,115,116,117,118,120,121,122,124,128,130,132,142,143,145,146,154,155,174,187,189,190,191,192,200,205,206,207,208,209,210,211,212,249,254,259,260,261,262,263,265,271,272,273,274,275,276,277,278,279,280,302,351,353,355,356,357,358,359,360,361,386,398,409,414,415,416,417,419,420,421,432,433,462,495,],[127,131,-70,-149,-116,-117,-118,-119,-120,-121,-139,-154,-155,-156,-65,-147,-148,-17,-18,199,-192,204,213,-149,214,215,-19,-20,261,-140,-149,277,278,-153,301,-71,-72,-73,-74,-75,-76,-77,-78,-138,-137,-63,353,-67,-69,-158,-159,-141,-142,-143,-144,-145,278,-152,-146,-64,361,-193,419,-66,-160,-161,-162,-163,-150,-151,-62,-23,446,457,-131,-132,-133,-134,-136,-68,463,-24,-33,-135,499,]),'AS':([74,],[149,]),'COMA':([88,103,105,106,107,108,109,110,111,115,116,117,118,120,121,130,143,187,189,192,205,206,207,208,209,210,211,212,259,261,262,263,265,271,272,273,274,275,277,278,279,325,335,353,355,356,357,358,359,360,361,401,403,405,456,],[-70,-149,-116,-117,-118,-119,-120,-121,-139,-154,-155,-156,-65,-147,-148,201,-157,-140,-149,-153,-71,-72,-73,-74,-75,-76,-77,-78,-63,-67,354,-158,-159,-141,-142,-143,-144,-145,-152,-146,-64,397,407,-66,-160,-161,-162,-163,-150,-151,-62,450,452,454,-115,]),'PLECA':([103,106,111,115,116,117,120,121,142,143,145,180,187,189,190,192,219,222,223,224,263,265,271,272,273,274,275,277,278,319,355,356,357,358,359,360,495,],[-157,180,-139,-154,-155,-156,-147,-148,180,-157,180,269,-140,-149,180,180,180,-127,-128,319,-158,-159,-141,-142,-143,-144,-145,-152,-146,395,-160,-161,-162,-163,180,180,180,]),'ET':([103,106,111,115,116,117,120,121,142,143,145,181,187,189,190,192,219,222,223,224,263,265,271,272,273,274,275,277,278,318,355,356,357,358,359,360,495,],[-157,181,-139,-154,-155,-156,-147,-148,181,-157,181,270,-140,-149,181,181,181,-127,-128,318,-158,-159,-141,-142,-143,-144,-145,-152,-146,394,-160,-161,-162,-163,181,181,181,]),'CORCHETE_CLAUSURA':([103,105,106,107,108,109,110,111,115,116,117,118,120,121,126,143,187,189,192,228,259,261,263,265,271,272,273,274,275,277,278,279,323,325,353,355,356,357,358,359,360,361,399,445,448,],[-149,-116,-117,-118,-119,-120,-121,-139,-154,-155,-156,-65,-147,-148,197,-157,-140,-149,-153,324,-63,-67,-158,-159,-141,-142,-143,-144,-145,-152,-146,-64,396,-169,-66,-160,-161,-162,-163,-150,-151,-62,447,-170,473,]),'DOBLE_PUNTO':([103,105,106,107,108,109,110,111,115,116,117,118,120,121,143,187,189,192,259,261,263,265,271,272,273,274,275,277,278,279,336,353,355,356,357,358,359,360,361,492,494,],[-149,-116,-117,-118,-119,-120,-121,-139,-154,-155,-156,-65,-147,-148,-157,-140,-149,-153,-63,-67,-158,-159,-141,-142,-143,-144,-145,-152,-146,-64,408,-66,-160,-161,-162,-163,-150,-151,-62,497,498,]),'PUNTO':([103,118,258,261,292,353,],[173,193,173,-67,173,-66,]),'SIGNO_MULTIPLICACION':([103,111,120,121,143,187,189,191,249,251,254,271,272,273,274,275,276,278,350,351,414,415,416,417,419,462,],[-149,184,-147,-148,-149,184,-149,184,-138,347,-137,184,184,184,184,184,184,-146,347,347,347,347,347,347,-136,347,]),'PORCENTAJE':([103,111,120,121,143,187,189,191,249,251,254,271,272,273,274,275,276,278,350,351,414,415,416,417,419,462,],[-149,185,-147,-148,-149,185,-149,185,-138,348,-137,185,185,185,185,185,185,-146,348,348,348,348,348,348,-136,348,]),'SIGNO_DIVISION':([103,111,120,121,143,187,189,191,271,272,273,274,275,276,278,349,],[-149,186,-147,-148,-149,186,-149,186,186,186,186,186,186,186,-146,418,]),'SIGNO_MAYOR_QUE':([103,105,111,120,121,143,144,159,163,164,165,187,189,191,203,271,272,273,274,275,278,306,313,],[-149,177,-139,-147,-148,-149,177,241,245,246,247,-140,-149,-139,304,-141,-142,-143,-144,-145,-146,376,391,]),'IN':([216,],[310,]),'VIRGULILLA':([249,251,254,350,351,414,415,416,417,419,462,],[-138,349,-137,349,349,349,349,349,349,-136,349,]),'ELSE':([427,520,],[466,466,]),'CASE':([481,486,518,524,527,],[487,487,-40,-41,-39,]),'DEFAULT':([485,486,493,518,524,527,],[492,-38,-37,-40,-41,-39,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,2,],[1,47,]),'item_programa':([0,2,],[2,2,]),'instruccion':([0,2,102,170,198,202,284,300,304,305,307,308,309,372,376,378,483,497,498,500,503,506,],[3,3,171,171,285,285,285,285,285,285,379,379,379,285,285,379,379,501,504,379,379,379,]),'clase':([0,2,5,],[4,4,48,]),'funcion':([0,2,102,170,],[6,6,172,172,]),'instruccion_if':([0,2,198,202,284,300,304,305,307,308,309,372,376,378,483,500,503,506,],[7,7,286,286,286,286,286,286,381,381,381,286,286,381,381,381,381,381,]),'instruccion_while':([0,2,198,202,284,300,304,305,307,308,309,372,376,378,483,500,503,506,],[8,8,288,288,288,288,288,288,382,382,382,288,288,382,382,382,382,382,]),'instruccion_for':([0,2,198,202,284,300,304,305,307,308,309,372,376,378,483,500,503,506,],[9,9,289,289,289,289,289,289,383,383,383,289,289,383,383,383,383,383,]),'import':([0,2,],[10,10,]),'asignacion':([0,2,12,102,170,198,202,284,300,304,305,307,308,309,372,376,378,483,497,498,500,503,506,],[11,11,49,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'declaracion':([0,2,102,170,198,202,284,300,304,305,307,308,309,372,376,378,483,497,498,500,503,506,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'operacion_unitaria':([0,2,102,170,198,202,284,300,304,305,307,308,309,372,376,378,389,483,497,498,500,503,506,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,433,14,14,14,14,14,14,]),'declaracion_general':([0,2,68,102,128,170,198,201,202,284,300,304,305,307,308,309,372,376,378,483,497,498,500,503,506,],[19,19,130,19,130,19,296,130,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,]),'asignacion_bool':([0,2,12,102,170,198,202,284,300,304,305,307,308,309,372,376,378,483,497,498,500,503,506,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'asignacion_int':([0,2,12,102,170,198,202,284,300,304,305,307,308,309,372,376,378,483,497,498,500,503,506,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'asignacion_double':([0,2,12,102,170,198,202,284,300,304,305,307,308,309,372,376,378,483,497,498,500,503,506,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'asignacion_string':([0,2,12,102,170,198,202,284,300,304,305,307,308,309,372,376,378,483,497,498,500,503,506,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'valor_mapa_lista':([0,2,12,102,170,198,202,284,300,304,305,307,308,309,372,376,378,483,497,498,500,503,506,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'tipos_declaracion':([0,2,68,102,128,170,198,201,202,284,300,304,305,307,308,309,372,376,378,483,497,498,500,503,506,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'funcion_flecha':([19,67,],[69,129,]),'cast_int':([36,56,152,],[84,84,231,]),'cast_double':([36,56,152,],[85,85,232,]),'cast_string':([36,56,152,],[86,86,233,]),'valor_general':([62,65,81,152,153,174,228,236,294,354,397,407,408,487,],[104,126,157,225,234,262,325,336,366,262,325,336,456,494,]),'expresion_mat_double':([62,65,71,72,81,113,114,123,125,151,152,153,166,174,176,177,221,228,236,264,266,267,268,269,270,294,354,397,407,408,487,488,],[105,105,144,144,105,144,144,195,196,144,105,105,248,105,263,265,144,105,105,355,356,357,358,144,144,105,105,105,105,105,105,144,]),'expresion_logica':([62,65,71,72,81,113,114,151,152,153,174,221,228,236,269,270,294,354,397,407,408,487,488,],[106,106,142,145,106,190,192,219,106,106,106,192,106,106,359,360,106,106,106,106,106,106,495,]),'llamadas_func':([62,65,81,152,153,173,174,193,198,202,228,236,284,294,300,304,305,307,308,309,354,372,376,378,397,407,408,483,487,497,498,500,503,506,],[108,108,108,108,108,259,108,279,287,287,108,108,287,108,287,287,287,380,380,380,108,287,287,380,108,108,108,380,108,502,505,380,380,380,]),'nuevo_objeto':([62,65,81,152,153,174,228,236,294,354,397,407,408,487,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'expresion_double_no_menos':([62,65,71,72,81,112,113,114,123,125,151,152,153,166,174,176,177,182,183,184,185,186,188,221,228,236,264,266,267,268,269,270,294,354,397,407,408,487,488,],[111,111,111,111,111,187,191,111,111,111,111,111,111,111,111,111,111,271,272,273,274,275,276,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'comparacion':([62,65,71,72,81,113,114,151,152,153,174,221,228,236,269,270,294,354,397,407,408,487,488,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'llamada_func':([62,65,81,152,153,173,174,193,198,202,228,236,284,294,300,304,305,307,308,309,354,372,376,378,397,407,408,483,487,497,498,500,503,506,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'parametros':([68,128,201,],[132,200,302,]),'condicion_for':([73,],[146,]),'condicion_for_inicial':([73,],[148,]),'bloque_clase':([102,170,],[169,257,]),'item_bloque_clase':([102,170,],[170,170,]),'expresion_bool':([151,],[220,]),'dato_bool':([151,221,394,395,],[224,317,441,444,]),'lista':([152,158,410,],[226,239,458,]),'conjunto_especifico':([152,],[227,]),'bloque_mapa':([156,],[235,]),'expresion_mat_int':([167,],[250,]),'expresion_int_no_menos':([167,252,253,345,346,347,348,418,],[251,350,351,414,415,416,417,462,]),'params':([174,354,],[260,420,]),'items_funcion':([198,202,284,300,305,372,],[283,303,363,371,375,424,]),'item_funcion':([198,202,284,300,304,305,372,376,],[284,284,284,284,374,284,284,426,]),'instruccion_switch':([198,202,284,300,304,305,372,376,],[290,290,290,290,290,290,290,290,]),'inst_return':([198,202,284,300,304,305,372,376,],[291,291,291,291,291,291,291,291,]),'condicion_for_terminacion':([217,],[312,]),'lista_general':([228,397,],[323,445,]),'pares_llave_valor':([236,407,],[333,455,]),'par_llave_valor':([236,407,],[335,335,]),'items_estructura_control':([307,308,309,378,483,500,503,506,],[377,384,385,428,489,507,510,513,]),'item_estructura_control':([307,308,309,378,483,500,503,506,],[378,378,378,378,378,378,378,378,]),'lista_numeros':([328,340,450,],[400,411,474,]),'lista_dobles':([329,341,452,],[402,412,475,]),'lista_cadenas':([330,342,454,],[404,413,476,]),'condicion_for_paso':([389,],[432,]),'instruccion_else':([427,520,],[465,525,]),'bloque_switch':([481,],[484,]),'instrucciones_case':([481,486,],[485,493,]),'instruccion_case':([481,486,],[486,486,]),'instruccion_default':([485,],[491,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> item_programa programa','programa',2,'p_programa','analisis_sintactico.py',14),
  ('programa -> item_programa','programa',1,'p_programa','analisis_sintactico.py',15),
  ('item_programa -> instruccion','item_programa',1,'p_item_programa','analisis_sintactico.py',18),
  ('item_programa -> clase','item_programa',1,'p_item_programa','analisis_sintactico.py',19),
  ('item_programa -> ABSTRACT clase','item_programa',2,'p_item_programa','analisis_sintactico.py',20),
  ('item_programa -> funcion','item_programa',1,'p_item_programa','analisis_sintactico.py',21),
  ('item_programa -> instruccion_if','item_programa',1,'p_item_programa','analisis_sintactico.py',22),
  ('item_programa -> instruccion_while','item_programa',1,'p_item_programa','analisis_sintactico.py',23),
  ('item_programa -> instruccion_for','item_programa',1,'p_item_programa','analisis_sintactico.py',24),
  ('item_programa -> import','item_programa',1,'p_item_programa','analisis_sintactico.py',25),
  ('import -> IMPORT DATO_CADENA_TEXTO AS IDENTIFICADOR PUNTO_COMA','import',5,'p_import','analisis_sintactico.py',28),
  ('import -> IMPORT DATO_CADENA_TEXTO PUNTO_COMA','import',3,'p_import','analisis_sintactico.py',29),
  ('instruccion -> asignacion','instruccion',1,'p_instruccion','analisis_sintactico.py',32),
  ('instruccion -> FINAL asignacion','instruccion',2,'p_instruccion','analisis_sintactico.py',33),
  ('instruccion -> declaracion','instruccion',1,'p_instruccion','analisis_sintactico.py',34),
  ('instruccion -> operacion_unitaria PUNTO_COMA','instruccion',2,'p_instruccion','analisis_sintactico.py',35),
  ('operacion_unitaria -> IDENTIFICADOR SIGNO_MAS SIGNO_MAS','operacion_unitaria',3,'p_operacion_unitaria','analisis_sintactico.py',38),
  ('operacion_unitaria -> IDENTIFICADOR SIGNO_MENOS SIGNO_MENOS','operacion_unitaria',3,'p_operacion_unitaria','analisis_sintactico.py',39),
  ('operacion_unitaria -> SIGNO_MAS SIGNO_MAS IDENTIFICADOR','operacion_unitaria',3,'p_operacion_unitaria','analisis_sintactico.py',40),
  ('operacion_unitaria -> SIGNO_MENOS SIGNO_MENOS IDENTIFICADOR','operacion_unitaria',3,'p_operacion_unitaria','analisis_sintactico.py',41),
  ('instruccion_while -> WHILE PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA','instruccion_while',7,'p_instruccion_while','analisis_sintactico.py',45),
  ('instruccion_for -> FOR PARENTESIS_APERTURA condicion_for PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA','instruccion_for',7,'p_instruccion_for','analisis_sintactico.py',49),
  ('condicion_for -> TIPO_INT IDENTIFICADOR IN IDENTIFICADOR','condicion_for',4,'p_condicion_for','analisis_sintactico.py',52),
  ('condicion_for -> condicion_for_inicial PUNTO_COMA condicion_for_terminacion PUNTO_COMA condicion_for_paso','condicion_for',5,'p_condicion_for','analisis_sintactico.py',53),
  ('condicion_for_inicial -> TIPO_INT IDENTIFICADOR SIGNO_IGUAL IDENTIFICADOR','condicion_for_inicial',4,'p_condicion_for_inicial','analisis_sintactico.py',56),
  ('condicion_for_inicial -> TIPO_INT IDENTIFICADOR SIGNO_IGUAL DATO_ENTERO','condicion_for_inicial',4,'p_condicion_for_inicial','analisis_sintactico.py',57),
  ('condicion_for_terminacion -> IDENTIFICADOR SIGNO_MENOR_QUE DATO_ENTERO','condicion_for_terminacion',3,'p_condicion_for_terminacion','analisis_sintactico.py',60),
  ('condicion_for_terminacion -> IDENTIFICADOR SIGNO_MAYOR_QUE DATO_ENTERO','condicion_for_terminacion',3,'p_condicion_for_terminacion','analisis_sintactico.py',61),
  ('condicion_for_terminacion -> IDENTIFICADOR SIGNO_MENOR_QUE SIGNO_IGUAL DATO_ENTERO','condicion_for_terminacion',4,'p_condicion_for_terminacion','analisis_sintactico.py',62),
  ('condicion_for_terminacion -> IDENTIFICADOR SIGNO_MAYOR_QUE SIGNO_IGUAL DATO_ENTERO','condicion_for_terminacion',4,'p_condicion_for_terminacion','analisis_sintactico.py',63),
  ('condicion_for_terminacion -> IDENTIFICADOR SIGNO_IGUAL SIGNO_IGUAL DATO_ENTERO','condicion_for_terminacion',4,'p_condicion_for_terminacion','analisis_sintactico.py',64),
  ('condicion_for_terminacion -> IDENTIFICADOR SIGNO_ADMIRACION_APERTURA SIGNO_IGUAL DATO_ENTERO','condicion_for_terminacion',4,'p_condicion_for_terminacion','analisis_sintactico.py',65),
  ('condicion_for_paso -> operacion_unitaria','condicion_for_paso',1,'p_condicion_for_paso','analisis_sintactico.py',68),
  ('instruccion_switch -> SWITCH PARENTESIS_APERTURA IDENTIFICADOR PARENTESIS_CLAUSURA LLAVE_APERTURA bloque_switch LLAVE_CLAUSURA','instruccion_switch',7,'p_instruccion_switch','analisis_sintactico.py',72),
  ('bloque_switch -> instrucciones_case instruccion_default','bloque_switch',2,'p_bloque_switch','analisis_sintactico.py',75),
  ('bloque_switch -> instrucciones_case','bloque_switch',1,'p_bloque_switch','analisis_sintactico.py',76),
  ('instrucciones_case -> instruccion_case instrucciones_case','instrucciones_case',2,'p_instrucciones_case','analisis_sintactico.py',79),
  ('instrucciones_case -> instruccion_case','instrucciones_case',1,'p_instrucciones_case','analisis_sintactico.py',80),
  ('instruccion_case -> CASE valor_general DOBLE_PUNTO LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA BREAK PUNTO_COMA','instruccion_case',8,'p_instruccion_case','analisis_sintactico.py',83),
  ('instruccion_case -> CASE valor_general DOBLE_PUNTO instruccion BREAK PUNTO_COMA','instruccion_case',6,'p_instruccion_case','analisis_sintactico.py',84),
  ('instruccion_case -> CASE valor_general DOBLE_PUNTO llamadas_func PUNTO_COMA BREAK PUNTO_COMA','instruccion_case',7,'p_instruccion_case','analisis_sintactico.py',85),
  ('instruccion_default -> DEFAULT DOBLE_PUNTO LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA BREAK PUNTO_COMA','instruccion_default',7,'p_instruccion_default','analisis_sintactico.py',88),
  ('instruccion_default -> DEFAULT DOBLE_PUNTO instruccion BREAK PUNTO_COMA','instruccion_default',5,'p_instruccion_default','analisis_sintactico.py',89),
  ('instruccion_default -> DEFAULT DOBLE_PUNTO llamadas_func PUNTO_COMA BREAK PUNTO_COMA','instruccion_default',6,'p_instruccion_default','analisis_sintactico.py',90),
  ('instruccion_if -> IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA','instruccion_if',7,'p_instruccion_if','analisis_sintactico.py',94),
  ('instruccion_if -> IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA instruccion_else','instruccion_if',8,'p_instruccion_if','analisis_sintactico.py',95),
  ('instruccion_else -> ELSE IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA instruccion_else','instruccion_else',9,'p_instruccion_else','analisis_sintactico.py',98),
  ('instruccion_else -> ELSE IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA','instruccion_else',8,'p_instruccion_else','analisis_sintactico.py',99),
  ('instruccion_else -> ELSE LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA','instruccion_else',4,'p_instruccion_else','analisis_sintactico.py',100),
  ('items_estructura_control -> item_estructura_control items_estructura_control','items_estructura_control',2,'p_items_estructura_control','analisis_sintactico.py',103),
  ('items_estructura_control -> item_estructura_control','items_estructura_control',1,'p_items_estructura_control','analisis_sintactico.py',104),
  ('item_estructura_control -> instruccion','item_estructura_control',1,'p_item_estructura_control','analisis_sintactico.py',107),
  ('item_estructura_control -> llamadas_func PUNTO_COMA','item_estructura_control',2,'p_item_estructura_control','analisis_sintactico.py',108),
  ('item_estructura_control -> instruccion_if','item_estructura_control',1,'p_item_estructura_control','analisis_sintactico.py',109),
  ('item_estructura_control -> instruccion_while','item_estructura_control',1,'p_item_estructura_control','analisis_sintactico.py',110),
  ('item_estructura_control -> instruccion_for','item_estructura_control',1,'p_item_estructura_control','analisis_sintactico.py',111),
  ('clase -> CLASS IDENTIFICADOR LLAVE_APERTURA bloque_clase LLAVE_CLAUSURA','clase',5,'p_clase','analisis_sintactico.py',117),
  ('bloque_clase -> item_bloque_clase bloque_clase','bloque_clase',2,'p_bloque_clase','analisis_sintactico.py',120),
  ('bloque_clase -> item_bloque_clase','bloque_clase',1,'p_bloque_clase','analisis_sintactico.py',121),
  ('item_bloque_clase -> instruccion','item_bloque_clase',1,'p_item_bloque_clase','analisis_sintactico.py',124),
  ('item_bloque_clase -> funcion','item_bloque_clase',1,'p_item_bloque_clase','analisis_sintactico.py',125),
  ('nuevo_objeto -> NEW IDENTIFICADOR PARENTESIS_APERTURA PARENTESIS_CLAUSURA','nuevo_objeto',4,'p_nuevo_objeto','analisis_sintactico.py',128),
  ('llamadas_func -> IDENTIFICADOR PUNTO llamadas_func','llamadas_func',3,'p_llamadas_func','analisis_sintactico.py',132),
  ('llamadas_func -> llamada_func PUNTO llamadas_func','llamadas_func',3,'p_llamadas_func','analisis_sintactico.py',133),
  ('llamadas_func -> llamada_func','llamadas_func',1,'p_llamadas_func','analisis_sintactico.py',134),
  ('llamada_func -> IDENTIFICADOR PARENTESIS_APERTURA params PARENTESIS_CLAUSURA','llamada_func',4,'p_llamada_func','analisis_sintactico.py',137),
  ('llamada_func -> IDENTIFICADOR PARENTESIS_APERTURA PARENTESIS_CLAUSURA','llamada_func',3,'p_llamada_func','analisis_sintactico.py',138),
  ('params -> valor_general COMA params','params',3,'p_params','analisis_sintactico.py',141),
  ('params -> valor_general','params',1,'p_params','analisis_sintactico.py',142),
  ('declaracion_general -> tipos_declaracion IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',146),
  ('declaracion_general -> TIPO_MAP IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',147),
  ('declaracion_general -> TIPO_LIST IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',148),
  ('declaracion_general -> VAR IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',149),
  ('declaracion_general -> DYNAMIC IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',150),
  ('declaracion_general -> TIPO_BOOL IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',151),
  ('declaracion_general -> TIPO_DOUBLE IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',152),
  ('declaracion_general -> TIPO_INT IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',153),
  ('declaracion_general -> TIPO_STRING IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',154),
  ('tipos_declaracion -> TIPO_SET','tipos_declaracion',1,'p_tipos_declaracion','analisis_sintactico.py',157),
  ('tipos_declaracion -> TIPO_SYMBOL','tipos_declaracion',1,'p_tipos_declaracion','analisis_sintactico.py',158),
  ('tipos_declaracion -> TIPO_OBJECT','tipos_declaracion',1,'p_tipos_declaracion','analisis_sintactico.py',159),
  ('tipos_declaracion -> TIPO_FUTURE','tipos_declaracion',1,'p_tipos_declaracion','analisis_sintactico.py',160),
  ('tipos_declaracion -> TIPO_STREAM','tipos_declaracion',1,'p_tipos_declaracion','analisis_sintactico.py',161),
  ('tipos_declaracion -> TIPO_ITERABLE','tipos_declaracion',1,'p_tipos_declaracion','analisis_sintactico.py',162),
  ('tipos_declaracion -> TIPO_NEVER','tipos_declaracion',1,'p_tipos_declaracion','analisis_sintactico.py',163),
  ('declaracion -> declaracion_general PUNTO_COMA','declaracion',2,'p_declaracion','analisis_sintactico.py',166),
  ('asignacion -> asignacion_bool','asignacion',1,'p_asignacion','analisis_sintactico.py',171),
  ('asignacion -> asignacion_int','asignacion',1,'p_asignacion','analisis_sintactico.py',172),
  ('asignacion -> asignacion_double','asignacion',1,'p_asignacion','analisis_sintactico.py',173),
  ('asignacion -> TIPO_BOOL IDENTIFICADOR SIGNO_IGUAL expresion_logica PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',174),
  ('asignacion -> asignacion_string','asignacion',1,'p_asignacion','analisis_sintactico.py',175),
  ('asignacion -> VAR IDENTIFICADOR SIGNO_IGUAL valor_general PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',176),
  ('asignacion -> DYNAMIC IDENTIFICADOR SIGNO_IGUAL valor_general PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',177),
  ('asignacion -> IDENTIFICADOR SIGNO_IGUAL valor_general PUNTO_COMA','asignacion',4,'p_asignacion','analisis_sintactico.py',178),
  ('asignacion -> IDENTIFICADOR SIGNO_MAS SIGNO_IGUAL expresion_mat_double PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',179),
  ('asignacion -> IDENTIFICADOR SIGNO_MENOS SIGNO_IGUAL expresion_mat_double PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',180),
  ('asignacion -> TIPO_MAP IDENTIFICADOR SIGNO_IGUAL bloque_mapa PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',181),
  ('asignacion -> valor_mapa_lista SIGNO_IGUAL valor_general PUNTO_COMA','asignacion',4,'p_asignacion','analisis_sintactico.py',182),
  ('asignacion -> TIPO_LIST IDENTIFICADOR SIGNO_IGUAL lista PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',183),
  ('asignacion -> TIPO_LIST SIGNO_MENOR_QUE IDENTIFICADOR SIGNO_MAYOR_QUE IDENTIFICADOR SIGNO_IGUAL lista PUNTO_COMA','asignacion',8,'p_asignacion','analisis_sintactico.py',184),
  ('asignacion -> VAR IDENTIFICADOR SIGNO_IGUAL lista PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',185),
  ('asignacion -> VAR IDENTIFICADOR SIGNO_IGUAL conjunto_especifico PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',186),
  ('asignacion -> TIPO_SET cast_int IDENTIFICADOR SIGNO_IGUAL LLAVE_APERTURA lista_numeros LLAVE_CLAUSURA PUNTO_COMA','asignacion',8,'p_asignacion','analisis_sintactico.py',187),
  ('asignacion -> TIPO_SET cast_double IDENTIFICADOR SIGNO_IGUAL LLAVE_APERTURA lista_dobles LLAVE_CLAUSURA PUNTO_COMA','asignacion',8,'p_asignacion','analisis_sintactico.py',188),
  ('asignacion -> TIPO_SET cast_string IDENTIFICADOR SIGNO_IGUAL LLAVE_APERTURA lista_cadenas LLAVE_CLAUSURA PUNTO_COMA','asignacion',8,'p_asignacion','analisis_sintactico.py',189),
  ('asignacion_string -> TIPO_STRING IDENTIFICADOR SIGNO_IGUAL DATO_CADENA_TEXTO PUNTO_COMA','asignacion_string',5,'p_asignacion_string','analisis_sintactico.py',193),
  ('asignacion_bool -> TIPO_BOOL IDENTIFICADOR SIGNO_IGUAL expresion_bool PUNTO_COMA','asignacion_bool',5,'p_asignacion_bool','analisis_sintactico.py',198),
  ('asignacion_int -> TIPO_INT IDENTIFICADOR SIGNO_IGUAL expresion_mat_int PUNTO_COMA','asignacion_int',5,'p_asignacion_int','analisis_sintactico.py',204),
  ('asignacion_double -> TIPO_DOUBLE IDENTIFICADOR SIGNO_IGUAL expresion_mat_double PUNTO_COMA','asignacion_double',5,'p_asignacion_double','analisis_sintactico.py',209),
  ('bloque_mapa -> LLAVE_APERTURA pares_llave_valor LLAVE_CLAUSURA','bloque_mapa',3,'p_bloque_mapa','analisis_sintactico.py',215),
  ('bloque_mapa -> LLAVE_APERTURA LLAVE_CLAUSURA','bloque_mapa',2,'p_bloque_mapa','analisis_sintactico.py',216),
  ('bloque_mapa -> NEW TIPO_MAP PARENTESIS_APERTURA PARENTESIS_CLAUSURA','bloque_mapa',4,'p_bloque_mapa','analisis_sintactico.py',217),
  ('pares_llave_valor -> par_llave_valor COMA pares_llave_valor','pares_llave_valor',3,'p_pares_llave_valor','analisis_sintactico.py',220),
  ('pares_llave_valor -> par_llave_valor','pares_llave_valor',1,'p_pares_llave_valor','analisis_sintactico.py',221),
  ('par_llave_valor -> valor_general DOBLE_PUNTO valor_general','par_llave_valor',3,'p_par_llave_valor','analisis_sintactico.py',224),
  ('valor_general -> expresion_mat_double','valor_general',1,'p_valor_general','analisis_sintactico.py',227),
  ('valor_general -> expresion_logica','valor_general',1,'p_valor_general','analisis_sintactico.py',228),
  ('valor_general -> DATO_CADENA_TEXTO','valor_general',1,'p_valor_general','analisis_sintactico.py',229),
  ('valor_general -> llamadas_func','valor_general',1,'p_valor_general','analisis_sintactico.py',230),
  ('valor_general -> nuevo_objeto','valor_general',1,'p_valor_general','analisis_sintactico.py',231),
  ('valor_general -> NULL','valor_general',1,'p_valor_general','analisis_sintactico.py',232),
  ('valor_mapa_lista -> IDENTIFICADOR CORCHETE_APERTURA valor_general CORCHETE_CLAUSURA','valor_mapa_lista',4,'p_valor_mapa_lista','analisis_sintactico.py',235),
  ('expresion_bool -> dato_bool','expresion_bool',1,'p_expresion_bool','analisis_sintactico.py',239),
  ('expresion_bool -> dato_bool ET ET dato_bool','expresion_bool',4,'p_expresion_bool','analisis_sintactico.py',240),
  ('expresion_bool -> dato_bool PLECA PLECA dato_bool','expresion_bool',4,'p_expresion_bool','analisis_sintactico.py',241),
  ('expresion_bool -> SIGNO_ADMIRACION_APERTURA dato_bool','expresion_bool',2,'p_expresion_bool','analisis_sintactico.py',242),
  ('dato_bool -> TRUE','dato_bool',1,'p_dato_bool','analisis_sintactico.py',245),
  ('dato_bool -> FALSE','dato_bool',1,'p_dato_bool','analisis_sintactico.py',246),
  ('expresion_mat_int -> expresion_int_no_menos','expresion_mat_int',1,'p_expresion_mat_int','analisis_sintactico.py',250),
  ('expresion_mat_int -> SIGNO_MENOS expresion_int_no_menos','expresion_mat_int',2,'p_expresion_mat_int','analisis_sintactico.py',251),
  ('expresion_int_no_menos -> expresion_int_no_menos SIGNO_MAS expresion_int_no_menos','expresion_int_no_menos',3,'p_expresion_int_no_menos','analisis_sintactico.py',254),
  ('expresion_int_no_menos -> expresion_int_no_menos SIGNO_MENOS expresion_int_no_menos','expresion_int_no_menos',3,'p_expresion_int_no_menos','analisis_sintactico.py',255),
  ('expresion_int_no_menos -> expresion_int_no_menos SIGNO_MULTIPLICACION expresion_int_no_menos','expresion_int_no_menos',3,'p_expresion_int_no_menos','analisis_sintactico.py',256),
  ('expresion_int_no_menos -> expresion_int_no_menos PORCENTAJE expresion_int_no_menos','expresion_int_no_menos',3,'p_expresion_int_no_menos','analisis_sintactico.py',257),
  ('expresion_int_no_menos -> expresion_int_no_menos VIRGULILLA SIGNO_DIVISION expresion_int_no_menos','expresion_int_no_menos',4,'p_expresion_int_no_menos','analisis_sintactico.py',258),
  ('expresion_int_no_menos -> PARENTESIS_APERTURA expresion_int_no_menos PARENTESIS_CLAUSURA','expresion_int_no_menos',3,'p_expresion_int_no_menos','analisis_sintactico.py',259),
  ('expresion_int_no_menos -> DATO_ENTERO','expresion_int_no_menos',1,'p_expresion_int_no_menos','analisis_sintactico.py',260),
  ('expresion_int_no_menos -> IDENTIFICADOR','expresion_int_no_menos',1,'p_expresion_int_no_menos','analisis_sintactico.py',261),
  ('expresion_mat_double -> expresion_double_no_menos','expresion_mat_double',1,'p_expresion_mat_double','analisis_sintactico.py',264),
  ('expresion_mat_double -> SIGNO_MENOS expresion_double_no_menos','expresion_mat_double',2,'p_expresion_mat_double','analisis_sintactico.py',265),
  ('expresion_double_no_menos -> expresion_double_no_menos SIGNO_MAS expresion_double_no_menos','expresion_double_no_menos',3,'p_expresion_double_no_menos','analisis_sintactico.py',268),
  ('expresion_double_no_menos -> expresion_double_no_menos SIGNO_MENOS expresion_double_no_menos','expresion_double_no_menos',3,'p_expresion_double_no_menos','analisis_sintactico.py',269),
  ('expresion_double_no_menos -> expresion_double_no_menos SIGNO_MULTIPLICACION expresion_double_no_menos','expresion_double_no_menos',3,'p_expresion_double_no_menos','analisis_sintactico.py',270),
  ('expresion_double_no_menos -> expresion_double_no_menos PORCENTAJE expresion_double_no_menos','expresion_double_no_menos',3,'p_expresion_double_no_menos','analisis_sintactico.py',271),
  ('expresion_double_no_menos -> expresion_double_no_menos SIGNO_DIVISION expresion_double_no_menos','expresion_double_no_menos',3,'p_expresion_double_no_menos','analisis_sintactico.py',272),
  ('expresion_double_no_menos -> PARENTESIS_APERTURA expresion_double_no_menos PARENTESIS_CLAUSURA','expresion_double_no_menos',3,'p_expresion_double_no_menos','analisis_sintactico.py',273),
  ('expresion_double_no_menos -> DATO_DOBLE','expresion_double_no_menos',1,'p_expresion_double_no_menos','analisis_sintactico.py',274),
  ('expresion_double_no_menos -> DATO_ENTERO','expresion_double_no_menos',1,'p_expresion_double_no_menos','analisis_sintactico.py',275),
  ('expresion_double_no_menos -> IDENTIFICADOR','expresion_double_no_menos',1,'p_expresion_double_no_menos','analisis_sintactico.py',276),
  ('expresion_logica -> expresion_logica PLECA PLECA expresion_logica','expresion_logica',4,'p_expresion_logica','analisis_sintactico.py',280),
  ('expresion_logica -> expresion_logica ET ET expresion_logica','expresion_logica',4,'p_expresion_logica','analisis_sintactico.py',281),
  ('expresion_logica -> PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA','expresion_logica',3,'p_expresion_logica','analisis_sintactico.py',282),
  ('expresion_logica -> SIGNO_ADMIRACION_APERTURA expresion_logica','expresion_logica',2,'p_expresion_logica','analisis_sintactico.py',283),
  ('expresion_logica -> comparacion','expresion_logica',1,'p_expresion_logica','analisis_sintactico.py',284),
  ('expresion_logica -> TRUE','expresion_logica',1,'p_expresion_logica','analisis_sintactico.py',285),
  ('expresion_logica -> FALSE','expresion_logica',1,'p_expresion_logica','analisis_sintactico.py',286),
  ('expresion_logica -> IDENTIFICADOR','expresion_logica',1,'p_expresion_logica','analisis_sintactico.py',287),
  ('comparacion -> expresion_mat_double SIGNO_MENOR_QUE expresion_mat_double','comparacion',3,'p_comparacion','analisis_sintactico.py',290),
  ('comparacion -> expresion_mat_double SIGNO_MAYOR_QUE expresion_mat_double','comparacion',3,'p_comparacion','analisis_sintactico.py',291),
  ('comparacion -> expresion_mat_double SIGNO_MENOR_QUE SIGNO_IGUAL expresion_mat_double','comparacion',4,'p_comparacion','analisis_sintactico.py',292),
  ('comparacion -> expresion_mat_double SIGNO_MAYOR_QUE SIGNO_IGUAL expresion_mat_double','comparacion',4,'p_comparacion','analisis_sintactico.py',293),
  ('comparacion -> expresion_mat_double SIGNO_IGUAL SIGNO_IGUAL expresion_mat_double','comparacion',4,'p_comparacion','analisis_sintactico.py',294),
  ('comparacion -> expresion_mat_double SIGNO_ADMIRACION_APERTURA SIGNO_IGUAL expresion_mat_double','comparacion',4,'p_comparacion','analisis_sintactico.py',295),
  ('lista -> CORCHETE_APERTURA lista_general CORCHETE_CLAUSURA','lista',3,'p_lista','analisis_sintactico.py',299),
  ('lista -> CORCHETE_APERTURA CORCHETE_CLAUSURA','lista',2,'p_lista','analisis_sintactico.py',300),
  ('lista -> TIPO_LIST PARENTESIS_APERTURA DATO_ENTERO PARENTESIS_CLAUSURA','lista',4,'p_lista','analisis_sintactico.py',301),
  ('lista -> NEW TIPO_LIST CORCHETE_APERTURA CORCHETE_CLAUSURA','lista',4,'p_lista','analisis_sintactico.py',302),
  ('lista -> NEW TIPO_LIST CORCHETE_APERTURA DATO_ENTERO CORCHETE_CLAUSURA','lista',5,'p_lista','analisis_sintactico.py',303),
  ('lista_general -> valor_general','lista_general',1,'p_lista_general','analisis_sintactico.py',306),
  ('lista_general -> valor_general COMA lista_general','lista_general',3,'p_lista_general','analisis_sintactico.py',307),
  ('lista_numeros -> DATO_ENTERO','lista_numeros',1,'p_lista_numeros','analisis_sintactico.py',310),
  ('lista_numeros -> DATO_ENTERO COMA lista_numeros','lista_numeros',3,'p_lista_numeros','analisis_sintactico.py',311),
  ('lista_dobles -> DATO_DOBLE','lista_dobles',1,'p_lista_dobles','analisis_sintactico.py',314),
  ('lista_dobles -> DATO_DOBLE COMA lista_dobles','lista_dobles',3,'p_lista_dobles','analisis_sintactico.py',315),
  ('lista_cadenas -> DATO_CADENA_TEXTO','lista_cadenas',1,'p_lista_cadenas','analisis_sintactico.py',318),
  ('lista_cadenas -> DATO_CADENA_TEXTO COMA lista_cadenas','lista_cadenas',3,'p_lista_cadenas','analisis_sintactico.py',319),
  ('conjunto_especifico -> cast_int LLAVE_APERTURA lista_numeros LLAVE_CLAUSURA','conjunto_especifico',4,'p_conjunto_especifico','analisis_sintactico.py',323),
  ('conjunto_especifico -> cast_double LLAVE_APERTURA lista_dobles LLAVE_CLAUSURA','conjunto_especifico',4,'p_conjunto_especifico','analisis_sintactico.py',324),
  ('conjunto_especifico -> cast_string LLAVE_APERTURA lista_cadenas LLAVE_CLAUSURA','conjunto_especifico',4,'p_conjunto_especifico','analisis_sintactico.py',325),
  ('cast_int -> SIGNO_MENOR_QUE TIPO_INT SIGNO_MAYOR_QUE','cast_int',3,'p_cast_int','analisis_sintactico.py',328),
  ('cast_double -> SIGNO_MENOR_QUE TIPO_DOUBLE SIGNO_MAYOR_QUE','cast_double',3,'p_cast_double','analisis_sintactico.py',331),
  ('cast_string -> SIGNO_MENOR_QUE TIPO_STRING SIGNO_MAYOR_QUE','cast_string',3,'p_cast_string','analisis_sintactico.py',334),
  ('funcion -> MAIN PARENTESIS_APERTURA PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA','funcion',6,'p_funcion','analisis_sintactico.py',338),
  ('funcion -> VOID IDENTIFICADOR PARENTESIS_APERTURA PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA','funcion',7,'p_funcion','analisis_sintactico.py',339),
  ('funcion -> declaracion_general PARENTESIS_APERTURA PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA','funcion',6,'p_funcion','analisis_sintactico.py',340),
  ('funcion -> VOID IDENTIFICADOR PARENTESIS_APERTURA parametros PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA','funcion',8,'p_funcion','analisis_sintactico.py',341),
  ('funcion -> declaracion_general PARENTESIS_APERTURA parametros PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA','funcion',7,'p_funcion','analisis_sintactico.py',342),
  ('funcion -> VOID IDENTIFICADOR funcion_flecha','funcion',3,'p_funcion','analisis_sintactico.py',343),
  ('funcion -> declaracion_general funcion_flecha','funcion',2,'p_funcion','analisis_sintactico.py',344),
  ('funcion_flecha -> PARENTESIS_APERTURA PARENTESIS_CLAUSURA SIGNO_IGUAL SIGNO_MAYOR_QUE item_funcion','funcion_flecha',5,'p_funcion_flecha','analisis_sintactico.py',347),
  ('funcion_flecha -> PARENTESIS_APERTURA parametros PARENTESIS_CLAUSURA SIGNO_IGUAL SIGNO_MAYOR_QUE item_funcion','funcion_flecha',6,'p_funcion_flecha','analisis_sintactico.py',348),
  ('parametros -> declaracion_general','parametros',1,'p_parametros','analisis_sintactico.py',351),
  ('parametros -> declaracion_general COMA parametros','parametros',3,'p_parametros','analisis_sintactico.py',352),
  ('items_funcion -> item_funcion items_funcion','items_funcion',2,'p_items_funcion','analisis_sintactico.py',355),
  ('items_funcion -> item_funcion','items_funcion',1,'p_items_funcion','analisis_sintactico.py',356),
  ('item_funcion -> instruccion','item_funcion',1,'p_item_funcion','analisis_sintactico.py',359),
  ('item_funcion -> instruccion_if','item_funcion',1,'p_item_funcion','analisis_sintactico.py',360),
  ('item_funcion -> llamadas_func PUNTO_COMA','item_funcion',2,'p_item_funcion','analisis_sintactico.py',361),
  ('item_funcion -> instruccion_while','item_funcion',1,'p_item_funcion','analisis_sintactico.py',362),
  ('item_funcion -> instruccion_for','item_funcion',1,'p_item_funcion','analisis_sintactico.py',363),
  ('item_funcion -> instruccion_switch','item_funcion',1,'p_item_funcion','analisis_sintactico.py',364),
  ('item_funcion -> inst_return','item_funcion',1,'p_item_funcion','analisis_sintactico.py',365),
  ('inst_return -> RETURN valor_general PUNTO_COMA','inst_return',3,'p_inst_return','analisis_sintactico.py',368),
]
