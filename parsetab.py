
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaABSTRACT ACENTO_AGUDO ACENTO_GRAVE ARROBA AS ASSERT ASYNC AWAIT BARRA_INVERTIDA BREAK CASE CATCH CLASS COMA COMENTARIO COMILLA_DOBLE COMILLA_SIMPLE CONST CONTINUE CORCHETE_APERTURA CORCHETE_CLAUSURA COVARIANT DATO_CADENA_TEXTO DATO_DOBLE DATO_ENTERO DEFAULT DEFERRED DO DOBLE_PUNTO DYNAMIC ELSE ENUM ET EXPORT EXTENDS EXTERNAL FACTORY FALSE FINAL FINALLY FOR FUNCTION GET HIDE IDENTIFICADOR IF IMPLEMENTS IMPORT IN INTERFACE IS LIBRARY LLAVE_APERTURA LLAVE_CLAUSURA MAIN MIXIN NEW NULL NUMERAL ON OPERATOR PARENTESIS_APERTURA PARENTESIS_CLAUSURA PART PLECA PORCENTAJE PUNTO PUNTO_COMA RETHROW RETURN SET SHOW SIGNO_ADMIRACION_APERTURA SIGNO_ADMIRACION_CLAUSURA SIGNO_DIVISION SIGNO_IGUAL SIGNO_INTERROGACION_APERTURA SIGNO_INTERROGACION_CLAUSURA SIGNO_MAS SIGNO_MAYOR_QUE SIGNO_MENOR_QUE SIGNO_MENOS SIGNO_MULTIPLICACION STATIC SUPER SWITCH THIS THROW TIPO_BOOL TIPO_DOUBLE TIPO_FUTURE TIPO_INT TIPO_ITERABLE TIPO_LIST TIPO_MAP TIPO_NEVER TIPO_OBJECT TIPO_RUNE TIPO_SET TIPO_STREAM TIPO_STRING TIPO_SYMBOL TRUE TRY TYPEDEF VAR VIRGULILLA VOID WHILE WITH YIELDprograma : item_programa programa\n                | item_programaitem_programa : instruccion\n                    | clase\n                    | ABSTRACT clase\n                    | funcion\n                    | instruccion_if\n                    | instruccion_while\n                    | instruccion_for\n                    | importimport : IMPORT DATO_CADENA_TEXTO AS IDENTIFICADOR PUNTO_COMA\n                | IMPORT DATO_CADENA_TEXTO PUNTO_COMAinstruccion : asignacion\n                    | FINAL asignacion\n                    | declaracion\n                    | operacion_unitaria PUNTO_COMAoperacion_unitaria : IDENTIFICADOR SIGNO_MAS SIGNO_MAS\n                        | IDENTIFICADOR SIGNO_MENOS SIGNO_MENOS\n                        | SIGNO_MAS SIGNO_MAS IDENTIFICADOR\n                        | SIGNO_MENOS SIGNO_MENOS IDENTIFICADORinstruccion_while : WHILE PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURAinstruccion_for : FOR PARENTESIS_APERTURA condicion_for PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURAcondicion_for : TIPO_INT IDENTIFICADOR IN IDENTIFICADOR\n                    | condicion_for_inicial PUNTO_COMA condicion_for_terminacion PUNTO_COMA condicion_for_pasocondicion_for_inicial : TIPO_INT IDENTIFICADOR SIGNO_IGUAL IDENTIFICADOR\n                            | TIPO_INT IDENTIFICADOR SIGNO_IGUAL DATO_ENTEROcondicion_for_terminacion : IDENTIFICADOR SIGNO_MENOR_QUE DATO_ENTERO\n                                | IDENTIFICADOR SIGNO_MAYOR_QUE DATO_ENTERO\n                                | IDENTIFICADOR SIGNO_MENOR_QUE SIGNO_IGUAL DATO_ENTERO\n                                | IDENTIFICADOR SIGNO_MAYOR_QUE SIGNO_IGUAL DATO_ENTERO\n                                | IDENTIFICADOR SIGNO_IGUAL SIGNO_IGUAL DATO_ENTERO\n                                | IDENTIFICADOR SIGNO_ADMIRACION_APERTURA SIGNO_IGUAL DATO_ENTEROcondicion_for_paso : operacion_unitariainstruccion_switch : SWITCH PARENTESIS_APERTURA IDENTIFICADOR PARENTESIS_CLAUSURA LLAVE_APERTURA bloque_switch LLAVE_CLAUSURAbloque_switch : instrucciones_case instruccion_default\n                    | instrucciones_caseinstrucciones_case : instruccion_case instrucciones_case\n                            | instruccion_caseinstruccion_case : CASE valor_general DOBLE_PUNTO LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA BREAK PUNTO_COMA\n                        | CASE valor_general DOBLE_PUNTO instruccion BREAK PUNTO_COMA\n                        | CASE valor_general DOBLE_PUNTO llamadas_func PUNTO_COMA BREAK PUNTO_COMAinstruccion_default : DEFAULT DOBLE_PUNTO LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA BREAK PUNTO_COMA\n                            | DEFAULT DOBLE_PUNTO instruccion BREAK PUNTO_COMA\n                            | DEFAULT DOBLE_PUNTO llamadas_func PUNTO_COMA BREAK PUNTO_COMAinstruccion_if : IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA\n                    | IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA instruccion_elseinstruccion_else : ELSE IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA instruccion_else\n                        | ELSE IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA\n                        | ELSE LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURAitems_estructura_control : item_estructura_control items_estructura_control\n                                | item_estructura_controlitem_estructura_control : instruccion\n                                | llamadas_func PUNTO_COMA\n                                | instruccion_if\n                                | instruccion_while\n                                | instruccion_forclase : CLASS IDENTIFICADOR LLAVE_APERTURA bloque_clase LLAVE_CLAUSURAbloque_clase : item_bloque_clase bloque_clase\n                    | item_bloque_claseitem_bloque_clase : instruccion\n                        | funcionnuevo_objeto : NEW IDENTIFICADOR PARENTESIS_APERTURA PARENTESIS_CLAUSURAllamadas_func : IDENTIFICADOR PUNTO llamadas_func\n                    | llamada_func PUNTO llamadas_func\n                    | llamada_funcllamada_func : IDENTIFICADOR PARENTESIS_APERTURA params PARENTESIS_CLAUSURA\n                    | IDENTIFICADOR PARENTESIS_APERTURA PARENTESIS_CLAUSURAparams : valor_general COMA params\n                | valor_generaldeclaracion_general : tipos_declaracion IDENTIFICADOR\n                            | TIPO_MAP IDENTIFICADOR\n                            | TIPO_LIST IDENTIFICADOR\n                            | VAR IDENTIFICADOR\n                            | DYNAMIC IDENTIFICADOR\n                            | TIPO_BOOL IDENTIFICADOR\n                            | TIPO_DOUBLE IDENTIFICADOR\n                            | TIPO_INT IDENTIFICADOR\n                            | TIPO_STRING IDENTIFICADORtipos_declaracion : TIPO_SET\n                        | TIPO_SYMBOL\n                        | TIPO_OBJECT\n                        | TIPO_FUTURE\n                        | TIPO_STREAM\n                        | TIPO_ITERABLE\n                        | TIPO_NEVERdeclaracion : declaracion_general PUNTO_COMAasignacion : asignacion_bool\n                | asignacion_int\n                | asignacion_double\n                | TIPO_BOOL IDENTIFICADOR SIGNO_IGUAL expresion_logica PUNTO_COMA\n                | TIPO_STRING IDENTIFICADOR SIGNO_IGUAL DATO_CADENA_TEXTO PUNTO_COMA\n                | VAR IDENTIFICADOR SIGNO_IGUAL valor_general PUNTO_COMA\n                | DYNAMIC IDENTIFICADOR SIGNO_IGUAL valor_general PUNTO_COMA\n                | IDENTIFICADOR SIGNO_IGUAL valor_general PUNTO_COMA\n                | IDENTIFICADOR SIGNO_MAS SIGNO_IGUAL expresion_mat_double PUNTO_COMA\n                | IDENTIFICADOR SIGNO_MENOS SIGNO_IGUAL expresion_mat_double PUNTO_COMA\n                | TIPO_MAP IDENTIFICADOR SIGNO_IGUAL bloque_mapa PUNTO_COMA\n                | valor_mapa_lista SIGNO_IGUAL valor_general PUNTO_COMA\n                | TIPO_LIST IDENTIFICADOR SIGNO_IGUAL lista PUNTO_COMA\n                | TIPO_LIST SIGNO_MENOR_QUE IDENTIFICADOR SIGNO_MAYOR_QUE IDENTIFICADOR SIGNO_IGUAL lista PUNTO_COMA\n                | VAR IDENTIFICADOR SIGNO_IGUAL lista PUNTO_COMA\n                | VAR IDENTIFICADOR SIGNO_IGUAL conjunto_especifico PUNTO_COMA\n                | TIPO_SET cast_int IDENTIFICADOR SIGNO_IGUAL LLAVE_APERTURA lista_numeros LLAVE_CLAUSURA PUNTO_COMA\n                | TIPO_SET cast_double IDENTIFICADOR SIGNO_IGUAL LLAVE_APERTURA lista_dobles LLAVE_CLAUSURA PUNTO_COMA\n                | TIPO_SET cast_string IDENTIFICADOR SIGNO_IGUAL LLAVE_APERTURA lista_cadenas LLAVE_CLAUSURA PUNTO_COMAasignacion_string : TIPO_STRING IDENTIFICADOR SIGNO_IGUAL DATO_CADENA_TEXTO PUNTO_COMAasignacion_bool : TIPO_BOOL IDENTIFICADOR SIGNO_IGUAL expresion_bool PUNTO_COMAasignacion_int : TIPO_INT IDENTIFICADOR SIGNO_IGUAL expresion_mat_int PUNTO_COMAasignacion_double : TIPO_DOUBLE IDENTIFICADOR SIGNO_IGUAL expresion_mat_double PUNTO_COMAbloque_mapa : LLAVE_APERTURA pares_llave_valor LLAVE_CLAUSURA\n                    | LLAVE_APERTURA LLAVE_CLAUSURA\n                    | NEW TIPO_MAP PARENTESIS_APERTURA PARENTESIS_CLAUSURApares_llave_valor : par_llave_valor COMA pares_llave_valor\n                        | par_llave_valorpar_llave_valor : valor_general DOBLE_PUNTO valor_generalvalor_general : expresion_mat_double\n                    | expresion_logica\n                    | DATO_CADENA_TEXTO\n                    | llamadas_func\n                    | nuevo_objeto\n                    | NULLvalor_mapa_lista : IDENTIFICADOR CORCHETE_APERTURA valor_general CORCHETE_CLAUSURAexpresion_bool : dato_bool\n                    | dato_bool ET ET dato_bool\n                    | dato_bool PLECA PLECA dato_bool\n                    | SIGNO_ADMIRACION_APERTURA dato_booldato_bool : TRUE\n                | FALSEexpresion_mat_int : expresion_int_no_menos\n                    | SIGNO_MENOS expresion_int_no_menosexpresion_int_no_menos : expresion_int_no_menos SIGNO_MAS expresion_int_no_menos\n                    | expresion_int_no_menos SIGNO_MENOS expresion_int_no_menos\n                    | expresion_int_no_menos SIGNO_MULTIPLICACION expresion_int_no_menos\n                    | expresion_int_no_menos PORCENTAJE expresion_int_no_menos\n                    | expresion_int_no_menos VIRGULILLA SIGNO_DIVISION expresion_int_no_menos\n                    | PARENTESIS_APERTURA expresion_int_no_menos PARENTESIS_CLAUSURA\n                    | DATO_ENTERO\n                    | IDENTIFICADORexpresion_mat_double : expresion_double_no_menos\n                    | SIGNO_MENOS expresion_double_no_menosexpresion_double_no_menos : expresion_double_no_menos SIGNO_MAS expresion_double_no_menos\n                    | expresion_double_no_menos SIGNO_MENOS expresion_double_no_menos\n                    | expresion_double_no_menos SIGNO_MULTIPLICACION expresion_double_no_menos\n                    | expresion_double_no_menos PORCENTAJE expresion_double_no_menos\n                    | expresion_double_no_menos SIGNO_DIVISION expresion_double_no_menos\n                    | PARENTESIS_APERTURA expresion_double_no_menos PARENTESIS_CLAUSURA\n                    | DATO_DOBLE\n                    | DATO_ENTERO\n                    | IDENTIFICADORexpresion_logica : expresion_logica PLECA PLECA expresion_logica\n                        | expresion_logica ET ET expresion_logica\n                        | PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA\n                        | SIGNO_ADMIRACION_APERTURA expresion_logica\n                        | comparacion\n                        | TRUE\n                        | FALSE\n                        | IDENTIFICADORcomparacion : expresion_mat_double SIGNO_MENOR_QUE expresion_mat_double\n                | expresion_mat_double SIGNO_MAYOR_QUE expresion_mat_double\n                | expresion_mat_double SIGNO_MENOR_QUE SIGNO_IGUAL expresion_mat_double\n                | expresion_mat_double SIGNO_MAYOR_QUE SIGNO_IGUAL expresion_mat_double\n                | expresion_mat_double SIGNO_IGUAL SIGNO_IGUAL expresion_mat_double\n                | expresion_mat_double SIGNO_ADMIRACION_APERTURA SIGNO_IGUAL expresion_mat_doublelista : CORCHETE_APERTURA lista_general CORCHETE_CLAUSURA\n                | CORCHETE_APERTURA CORCHETE_CLAUSURA\n                | TIPO_LIST PARENTESIS_APERTURA DATO_ENTERO PARENTESIS_CLAUSURA\n                | NEW TIPO_LIST CORCHETE_APERTURA CORCHETE_CLAUSURA\n                | NEW TIPO_LIST CORCHETE_APERTURA DATO_ENTERO CORCHETE_CLAUSURAlista_general : valor_general \n                        | valor_general COMA lista_generallista_numeros : DATO_ENTERO \n                        | DATO_ENTERO COMA lista_numeroslista_dobles : DATO_DOBLE \n                        | DATO_DOBLE COMA lista_dobleslista_cadenas : DATO_CADENA_TEXTO \n                        | DATO_CADENA_TEXTO COMA lista_cadenasconjunto_especifico : cast_int LLAVE_APERTURA lista_numeros LLAVE_CLAUSURA\n                            | cast_double LLAVE_APERTURA lista_dobles LLAVE_CLAUSURA\n                            | cast_string LLAVE_APERTURA lista_cadenas LLAVE_CLAUSURAcast_int : SIGNO_MENOR_QUE TIPO_INT SIGNO_MAYOR_QUEcast_double : SIGNO_MENOR_QUE TIPO_DOUBLE SIGNO_MAYOR_QUEcast_string : SIGNO_MENOR_QUE TIPO_STRING SIGNO_MAYOR_QUEfuncion : MAIN PARENTESIS_APERTURA PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA\n                | VOID IDENTIFICADOR PARENTESIS_APERTURA PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA\n                | declaracion_general PARENTESIS_APERTURA PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA\n                | VOID IDENTIFICADOR PARENTESIS_APERTURA parametros PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA\n                | declaracion_general PARENTESIS_APERTURA parametros PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA\n                | VOID IDENTIFICADOR funcion_flecha\n                | declaracion_general funcion_flechafuncion_flecha : PARENTESIS_APERTURA PARENTESIS_CLAUSURA SIGNO_IGUAL SIGNO_MAYOR_QUE item_funcion\n                      | PARENTESIS_APERTURA parametros PARENTESIS_CLAUSURA SIGNO_IGUAL SIGNO_MAYOR_QUE item_funcionparametros : declaracion_general\n                    | declaracion_general COMA parametrositems_funcion : item_funcion items_funcion\n                    | item_funcionitem_funcion : instruccion\n                    | instruccion_if\n                    | llamadas_func PUNTO_COMA\n                    | instruccion_while\n                    | instruccion_for\n                    | instruccion_switch\n                    | inst_returninst_return : RETURN valor_general PUNTO_COMA'
    
_lr_action_items = {'ABSTRACT':([0,2,3,4,6,7,8,9,10,11,13,24,25,26,47,48,59,68,69,128,149,174,238,255,280,281,284,285,287,288,289,290,312,313,314,318,319,320,321,330,331,337,342,343,360,362,370,371,419,420,422,423,424,427,428,461,462,474,475,476,477,487,493,517,522,],[5,5,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-5,-14,-16,-189,-86,-188,-12,-94,-98,-57,-95,-96,-196,-197,-199,-200,-201,-202,-11,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,-183,-198,-185,-190,-203,-184,-187,-191,-45,-21,-22,-186,-46,-100,-103,-104,-105,-34,-49,-48,-47,]),'FINAL':([0,2,3,4,6,7,8,9,10,11,13,24,25,26,47,48,59,68,69,101,128,149,169,170,171,174,197,201,238,255,280,281,283,284,285,287,288,289,290,298,302,303,305,306,307,312,313,314,318,319,320,321,330,331,337,342,343,360,362,369,370,371,373,375,376,378,379,380,419,420,422,423,424,426,427,428,461,462,474,475,476,477,480,487,493,494,495,497,500,503,517,522,],[12,12,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-5,-14,-16,-189,-86,12,-188,-12,12,-60,-61,-94,12,12,-98,-57,-95,-96,12,-196,-197,-199,-200,-201,-202,12,12,12,12,12,12,-11,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,-183,-198,12,-185,-190,12,12,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,12,-34,-49,12,12,12,12,12,-48,-47,]),'CLASS':([0,2,3,4,5,6,7,8,9,10,11,13,24,25,26,47,48,59,68,69,128,149,174,238,255,280,281,284,285,287,288,289,290,312,313,314,318,319,320,321,330,331,337,342,343,360,362,370,371,419,420,422,423,424,427,428,461,462,474,475,476,477,487,493,517,522,],[15,15,-3,-4,15,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-5,-14,-16,-189,-86,-188,-12,-94,-98,-57,-95,-96,-196,-197,-199,-200,-201,-202,-11,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,-183,-198,-185,-190,-203,-184,-187,-191,-45,-21,-22,-186,-46,-100,-103,-104,-105,-34,-49,-48,-47,]),'MAIN':([0,2,3,4,6,7,8,9,10,11,13,24,25,26,47,48,59,68,69,101,128,149,169,170,171,174,238,255,280,281,284,285,287,288,289,290,312,313,314,318,319,320,321,330,331,337,342,343,360,362,370,371,419,420,422,423,424,427,428,461,462,474,475,476,477,487,493,517,522,],[17,17,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-5,-14,-16,-189,-86,17,-188,-12,17,-60,-61,-94,-98,-57,-95,-96,-196,-197,-199,-200,-201,-202,-11,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,-183,-198,-185,-190,-203,-184,-187,-191,-45,-21,-22,-186,-46,-100,-103,-104,-105,-34,-49,-48,-47,]),'VOID':([0,2,3,4,6,7,8,9,10,11,13,24,25,26,47,48,59,68,69,101,128,149,169,170,171,174,238,255,280,281,284,285,287,288,289,290,312,313,314,318,319,320,321,330,331,337,342,343,360,362,370,371,419,420,422,423,424,427,428,461,462,474,475,476,477,487,493,517,522,],[18,18,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-5,-14,-16,-189,-86,18,-188,-12,18,-60,-61,-94,-98,-57,-95,-96,-196,-197,-199,-200,-201,-202,-11,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,-183,-198,-185,-190,-203,-184,-187,-191,-45,-21,-22,-186,-46,-100,-103,-104,-105,-34,-49,-48,-47,]),'IF':([0,2,3,4,6,7,8,9,10,11,13,24,25,26,47,48,59,68,69,128,149,174,197,201,238,255,280,281,283,284,285,287,288,289,290,298,302,303,305,306,307,312,313,314,318,319,320,321,330,331,337,342,343,360,362,369,370,371,373,375,376,378,379,380,419,420,422,423,424,426,427,428,461,462,463,474,475,476,477,480,487,493,497,500,503,517,522,],[20,20,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-5,-14,-16,-189,-86,-188,-12,-94,20,20,-98,-57,-95,-96,20,-196,-197,-199,-200,-201,-202,20,20,20,20,20,20,-11,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,-183,-198,20,-185,-190,20,20,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,479,-100,-103,-104,-105,20,-34,-49,20,20,20,-48,-47,]),'WHILE':([0,2,3,4,6,7,8,9,10,11,13,24,25,26,47,48,59,68,69,128,149,174,197,201,238,255,280,281,283,284,285,287,288,289,290,298,302,303,305,306,307,312,313,314,318,319,320,321,330,331,337,342,343,360,362,369,370,371,373,375,376,378,379,380,419,420,422,423,424,426,427,428,461,462,474,475,476,477,480,487,493,497,500,503,517,522,],[21,21,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-5,-14,-16,-189,-86,-188,-12,-94,21,21,-98,-57,-95,-96,21,-196,-197,-199,-200,-201,-202,21,21,21,21,21,21,-11,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,-183,-198,21,-185,-190,21,21,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,21,-34,-49,21,21,21,-48,-47,]),'FOR':([0,2,3,4,6,7,8,9,10,11,13,24,25,26,47,48,59,68,69,128,149,174,197,201,238,255,280,281,283,284,285,287,288,289,290,298,302,303,305,306,307,312,313,314,318,319,320,321,330,331,337,342,343,360,362,369,370,371,373,375,376,378,379,380,419,420,422,423,424,426,427,428,461,462,474,475,476,477,480,487,493,497,500,503,517,522,],[22,22,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-5,-14,-16,-189,-86,-188,-12,-94,22,22,-98,-57,-95,-96,22,-196,-197,-199,-200,-201,-202,22,22,22,22,22,22,-11,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,-183,-198,22,-185,-190,22,22,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,22,-34,-49,22,22,22,-48,-47,]),'IMPORT':([0,2,3,4,6,7,8,9,10,11,13,24,25,26,47,48,59,68,69,128,149,174,238,255,280,281,284,285,287,288,289,290,312,313,314,318,319,320,321,330,331,337,342,343,360,362,370,371,419,420,422,423,424,427,428,461,462,474,475,476,477,487,493,517,522,],[23,23,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-5,-14,-16,-189,-86,-188,-12,-94,-98,-57,-95,-96,-196,-197,-199,-200,-201,-202,-11,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,-183,-198,-185,-190,-203,-184,-187,-191,-45,-21,-22,-186,-46,-100,-103,-104,-105,-34,-49,-48,-47,]),'TIPO_BOOL':([0,2,3,4,6,7,8,9,10,11,12,13,24,25,26,47,48,59,67,68,69,101,127,128,149,169,170,171,174,197,200,201,238,255,280,281,283,284,285,287,288,289,290,298,302,303,305,306,307,312,313,314,318,319,320,321,330,331,337,342,343,360,362,369,370,371,373,375,376,378,379,380,419,420,422,423,424,426,427,428,461,462,474,475,476,477,480,487,493,494,495,497,500,503,517,522,],[27,27,-3,-4,-6,-7,-8,-9,-10,-13,49,-15,-87,-88,-89,-5,-14,-16,136,-189,-86,27,136,-188,-12,27,-60,-61,-94,294,136,294,-98,-57,-95,-96,294,-196,-197,-199,-200,-201,-202,294,294,294,294,294,294,-11,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,-183,-198,294,-185,-190,294,294,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,294,-34,-49,294,294,294,294,294,-48,-47,]),'TIPO_STRING':([0,2,3,4,6,7,8,9,10,11,12,13,24,25,26,47,48,59,67,68,69,87,101,127,128,149,169,170,171,174,197,200,201,238,255,280,281,283,284,285,287,288,289,290,298,302,303,305,306,307,312,313,314,318,319,320,321,330,331,337,342,343,360,362,369,370,371,373,375,376,378,379,380,419,420,422,423,424,426,427,428,461,462,474,475,476,477,480,487,493,494,495,497,500,503,517,522,],[28,28,-3,-4,-6,-7,-8,-9,-10,-13,51,-15,-87,-88,-89,-5,-14,-16,139,-189,-86,165,28,139,-188,-12,28,-60,-61,-94,28,139,28,-98,-57,-95,-96,28,-196,-197,-199,-200,-201,-202,28,28,28,28,28,28,-11,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,-183,-198,28,-185,-190,28,28,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,28,-34,-49,28,28,28,28,28,-48,-47,]),'VAR':([0,2,3,4,6,7,8,9,10,11,12,13,24,25,26,47,48,59,67,68,69,101,127,128,149,169,170,171,174,197,200,201,238,255,280,281,283,284,285,287,288,289,290,298,302,303,305,306,307,312,313,314,318,319,320,321,330,331,337,342,343,360,362,369,370,371,373,375,376,378,379,380,419,420,422,423,424,426,427,428,461,462,474,475,476,477,480,487,493,494,495,497,500,503,517,522,],[29,29,-3,-4,-6,-7,-8,-9,-10,-13,52,-15,-87,-88,-89,-5,-14,-16,134,-189,-86,29,134,-188,-12,29,-60,-61,-94,29,134,29,-98,-57,-95,-96,29,-196,-197,-199,-200,-201,-202,29,29,29,29,29,29,-11,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,-183,-198,29,-185,-190,29,29,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,29,-34,-49,29,29,29,29,29,-48,-47,]),'DYNAMIC':([0,2,3,4,6,7,8,9,10,11,12,13,24,25,26,47,48,59,67,68,69,101,127,128,149,169,170,171,174,197,200,201,238,255,280,281,283,284,285,287,288,289,290,298,302,303,305,306,307,312,313,314,318,319,320,321,330,331,337,342,343,360,362,369,370,371,373,375,376,378,379,380,419,420,422,423,424,426,427,428,461,462,474,475,476,477,480,487,493,494,495,497,500,503,517,522,],[30,30,-3,-4,-6,-7,-8,-9,-10,-13,53,-15,-87,-88,-89,-5,-14,-16,135,-189,-86,30,135,-188,-12,30,-60,-61,-94,30,135,30,-98,-57,-95,-96,30,-196,-197,-199,-200,-201,-202,30,30,30,30,30,30,-11,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,-183,-198,30,-185,-190,30,30,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,30,-34,-49,30,30,30,30,30,-48,-47,]),'IDENTIFICADOR':([0,2,3,4,6,7,8,9,10,11,12,13,15,18,24,25,26,27,28,29,30,33,35,36,37,38,39,40,41,42,43,44,45,47,48,49,51,52,53,54,55,57,58,59,61,64,68,69,70,71,78,79,81,83,84,85,86,101,111,112,113,118,122,124,128,132,133,134,135,136,137,138,139,140,146,148,149,150,152,153,166,167,169,170,171,172,173,174,175,176,181,182,183,184,185,187,192,197,201,216,220,228,230,236,238,241,245,246,247,252,253,255,263,265,266,267,268,269,280,281,283,284,285,287,288,289,290,293,294,296,297,298,302,303,305,306,307,308,309,312,313,314,318,319,320,321,330,331,337,342,343,344,345,346,347,352,360,362,363,369,370,371,373,375,376,378,379,380,386,394,404,405,415,419,420,422,423,424,426,427,428,461,462,474,475,476,477,480,484,485,487,493,494,495,497,500,503,517,522,],[16,16,-3,-4,-6,-7,-8,-9,-10,-13,50,-15,60,66,-87,-88,-89,74,75,76,77,80,82,-79,88,89,90,-80,-81,-82,-83,-84,-85,-5,-14,91,94,95,96,97,98,99,100,-16,102,102,-189,-86,142,142,154,155,102,159,160,161,162,16,188,142,142,193,188,188,-188,204,205,206,207,208,209,210,211,-79,215,217,-12,142,102,102,188,249,16,-60,-61,257,102,-94,188,188,188,188,188,188,188,188,257,291,291,311,142,102,193,102,-98,338,-180,-181,-182,249,249,-57,188,188,188,188,142,142,-95,-96,291,-196,-197,-199,-200,-201,-202,102,365,366,367,291,291,291,291,291,291,383,384,-11,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,249,249,249,249,102,-183,-198,418,291,-185,-190,291,291,-52,-54,-55,-56,431,102,102,102,249,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,291,102,142,-34,-49,291,291,291,291,291,-48,-47,]),'TIPO_MAP':([0,2,3,4,6,7,8,9,10,11,12,13,24,25,26,47,48,59,67,68,69,101,127,128,149,169,170,171,174,197,200,201,237,238,255,280,281,283,284,285,287,288,289,290,298,302,303,305,306,307,312,313,314,318,319,320,321,330,331,337,342,343,360,362,369,370,371,373,375,376,378,379,380,419,420,422,423,424,426,427,428,461,462,474,475,476,477,480,487,493,494,495,497,500,503,517,522,],[33,33,-3,-4,-6,-7,-8,-9,-10,-13,54,-15,-87,-88,-89,-5,-14,-16,132,-189,-86,33,132,-188,-12,33,-60,-61,-94,33,132,33,336,-98,-57,-95,-96,33,-196,-197,-199,-200,-201,-202,33,33,33,33,33,33,-11,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,-183,-198,33,-185,-190,33,33,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,33,-34,-49,33,33,33,33,33,-48,-47,]),'TIPO_LIST':([0,2,3,4,6,7,8,9,10,11,12,13,24,25,26,47,48,59,67,68,69,101,127,128,149,152,158,169,170,171,174,197,200,201,230,238,240,255,280,281,283,284,285,287,288,289,290,298,302,303,305,306,307,312,313,314,318,319,320,321,330,331,337,342,343,360,362,369,370,371,373,375,376,378,379,380,407,419,420,422,423,424,426,427,428,461,462,474,475,476,477,480,487,493,494,495,497,500,503,517,522,],[35,35,-3,-4,-6,-7,-8,-9,-10,-13,55,-15,-87,-88,-89,-5,-14,-16,133,-189,-86,35,133,-188,-12,229,229,35,-60,-61,-94,35,133,35,326,-98,326,-57,-95,-96,35,-196,-197,-199,-200,-201,-202,35,35,35,35,35,35,-11,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,-183,-198,35,-185,-190,35,35,-52,-54,-55,-56,229,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,35,-34,-49,35,35,35,35,35,-48,-47,]),'TIPO_SET':([0,2,3,4,6,7,8,9,10,11,12,13,24,25,26,47,48,59,67,68,69,101,127,128,149,169,170,171,174,197,200,201,238,255,280,281,283,284,285,287,288,289,290,298,302,303,305,306,307,312,313,314,318,319,320,321,330,331,337,342,343,360,362,369,370,371,373,375,376,378,379,380,419,420,422,423,424,426,427,428,461,462,474,475,476,477,480,487,493,494,495,497,500,503,517,522,],[36,36,-3,-4,-6,-7,-8,-9,-10,-13,56,-15,-87,-88,-89,-5,-14,-16,140,-189,-86,36,140,-188,-12,36,-60,-61,-94,36,140,36,-98,-57,-95,-96,36,-196,-197,-199,-200,-201,-202,36,36,36,36,36,36,-11,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,-183,-198,36,-185,-190,36,36,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,36,-34,-49,36,36,36,36,36,-48,-47,]),'SIGNO_MAS':([0,2,3,4,6,7,8,9,10,11,13,16,24,25,26,31,47,48,50,59,62,68,69,101,102,110,119,120,128,142,149,169,170,171,174,186,188,190,197,201,238,249,251,254,255,270,271,272,273,274,275,277,280,281,283,284,285,287,288,289,290,291,298,302,303,305,306,307,312,313,314,318,319,320,321,330,331,337,342,343,349,350,360,362,369,370,371,373,375,376,378,379,380,386,411,412,413,414,416,419,420,422,423,424,426,427,428,431,459,461,462,464,474,475,476,477,480,487,493,494,495,497,500,503,517,522,],[31,31,-3,-4,-6,-7,-8,-9,-10,-13,-15,62,-87,-88,-89,78,-5,-14,92,-16,121,-189,-86,31,-149,181,-147,-148,-188,-149,-12,31,-60,-61,-94,181,-149,181,31,31,-98,-138,344,-137,-57,181,181,181,181,181,181,-146,-95,-96,31,-196,-197,-199,-200,-201,-202,62,31,31,31,31,31,31,-11,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,344,344,-183,-198,31,-185,-190,31,31,-52,-54,-55,-56,31,344,344,344,344,-136,-203,-184,-187,-191,-45,-53,-21,-22,464,344,-186,-46,121,-100,-103,-104,-105,31,-34,-49,31,31,31,31,31,-48,-47,]),'SIGNO_MENOS':([0,2,3,4,6,7,8,9,10,11,13,16,24,25,26,32,47,48,50,59,61,63,64,68,69,70,71,81,101,102,110,112,113,119,120,122,124,128,142,149,150,152,153,166,167,169,170,171,173,174,175,176,186,188,190,197,201,220,228,236,238,249,251,254,255,263,265,266,267,268,269,270,271,272,273,274,275,277,280,281,283,284,285,287,288,289,290,291,293,298,302,303,305,306,307,312,313,314,318,319,320,321,330,331,337,342,343,349,350,352,360,362,369,370,371,373,375,376,378,379,380,386,394,404,405,411,412,413,414,416,419,420,422,423,424,426,427,428,431,459,461,462,465,474,475,476,477,480,484,485,487,493,494,495,497,500,503,517,522,],[32,32,-3,-4,-6,-7,-8,-9,-10,-13,-15,63,-87,-88,-89,79,-5,-14,93,-16,111,123,111,-189,-86,111,111,111,32,-149,182,111,111,-147,-148,111,111,-188,-149,-12,111,111,111,111,252,32,-60,-61,111,-94,111,111,182,-149,182,32,32,111,111,111,-98,-138,345,-137,-57,111,111,111,111,111,111,182,182,182,182,182,182,-146,-95,-96,32,-196,-197,-199,-200,-201,-202,63,111,32,32,32,32,32,32,-11,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,345,345,111,-183,-198,32,-185,-190,32,32,-52,-54,-55,-56,32,111,111,111,345,345,345,345,-136,-203,-184,-187,-191,-45,-53,-21,-22,465,345,-186,-46,123,-100,-103,-104,-105,32,111,111,-34,-49,32,32,32,32,32,-48,-47,]),'TIPO_DOUBLE':([0,2,3,4,6,7,8,9,10,11,12,13,24,25,26,47,48,59,67,68,69,87,101,127,128,149,169,170,171,174,197,200,201,238,255,280,281,283,284,285,287,288,289,290,298,302,303,305,306,307,312,313,314,318,319,320,321,330,331,337,342,343,360,362,369,370,371,373,375,376,378,379,380,419,420,422,423,424,426,427,428,461,462,474,475,476,477,480,487,493,494,495,497,500,503,517,522,],[38,38,-3,-4,-6,-7,-8,-9,-10,-13,58,-15,-87,-88,-89,-5,-14,-16,137,-189,-86,164,38,137,-188,-12,38,-60,-61,-94,297,137,297,-98,-57,-95,-96,297,-196,-197,-199,-200,-201,-202,297,297,297,297,297,297,-11,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,-183,-198,297,-185,-190,297,297,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,297,-34,-49,297,297,297,297,297,-48,-47,]),'TIPO_INT':([0,2,3,4,6,7,8,9,10,11,12,13,24,25,26,47,48,59,67,68,69,72,87,101,127,128,149,169,170,171,174,197,200,201,238,255,280,281,283,284,285,287,288,289,290,298,302,303,305,306,307,312,313,314,318,319,320,321,330,331,337,342,343,360,362,369,370,371,373,375,376,378,379,380,419,420,422,423,424,426,427,428,461,462,474,475,476,477,480,487,493,494,495,497,500,503,517,522,],[39,39,-3,-4,-6,-7,-8,-9,-10,-13,57,-15,-87,-88,-89,-5,-14,-16,138,-189,-86,146,163,39,138,-188,-12,39,-60,-61,-94,296,138,296,-98,-57,-95,-96,296,-196,-197,-199,-200,-201,-202,296,296,296,296,296,296,-11,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,-183,-198,296,-185,-190,296,296,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,296,-34,-49,296,296,296,296,296,-48,-47,]),'TIPO_SYMBOL':([0,2,3,4,6,7,8,9,10,11,13,24,25,26,47,48,59,67,68,69,101,127,128,149,169,170,171,174,197,200,201,238,255,280,281,283,284,285,287,288,289,290,298,302,303,305,306,307,312,313,314,318,319,320,321,330,331,337,342,343,360,362,369,370,371,373,375,376,378,379,380,419,420,422,423,424,426,427,428,461,462,474,475,476,477,480,487,493,494,495,497,500,503,517,522,],[40,40,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-5,-14,-16,40,-189,-86,40,40,-188,-12,40,-60,-61,-94,40,40,40,-98,-57,-95,-96,40,-196,-197,-199,-200,-201,-202,40,40,40,40,40,40,-11,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,-183,-198,40,-185,-190,40,40,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,40,-34,-49,40,40,40,40,40,-48,-47,]),'TIPO_OBJECT':([0,2,3,4,6,7,8,9,10,11,13,24,25,26,47,48,59,67,68,69,101,127,128,149,169,170,171,174,197,200,201,238,255,280,281,283,284,285,287,288,289,290,298,302,303,305,306,307,312,313,314,318,319,320,321,330,331,337,342,343,360,362,369,370,371,373,375,376,378,379,380,419,420,422,423,424,426,427,428,461,462,474,475,476,477,480,487,493,494,495,497,500,503,517,522,],[41,41,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-5,-14,-16,41,-189,-86,41,41,-188,-12,41,-60,-61,-94,41,41,41,-98,-57,-95,-96,41,-196,-197,-199,-200,-201,-202,41,41,41,41,41,41,-11,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,-183,-198,41,-185,-190,41,41,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,41,-34,-49,41,41,41,41,41,-48,-47,]),'TIPO_FUTURE':([0,2,3,4,6,7,8,9,10,11,13,24,25,26,47,48,59,67,68,69,101,127,128,149,169,170,171,174,197,200,201,238,255,280,281,283,284,285,287,288,289,290,298,302,303,305,306,307,312,313,314,318,319,320,321,330,331,337,342,343,360,362,369,370,371,373,375,376,378,379,380,419,420,422,423,424,426,427,428,461,462,474,475,476,477,480,487,493,494,495,497,500,503,517,522,],[42,42,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-5,-14,-16,42,-189,-86,42,42,-188,-12,42,-60,-61,-94,42,42,42,-98,-57,-95,-96,42,-196,-197,-199,-200,-201,-202,42,42,42,42,42,42,-11,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,-183,-198,42,-185,-190,42,42,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,42,-34,-49,42,42,42,42,42,-48,-47,]),'TIPO_STREAM':([0,2,3,4,6,7,8,9,10,11,13,24,25,26,47,48,59,67,68,69,101,127,128,149,169,170,171,174,197,200,201,238,255,280,281,283,284,285,287,288,289,290,298,302,303,305,306,307,312,313,314,318,319,320,321,330,331,337,342,343,360,362,369,370,371,373,375,376,378,379,380,419,420,422,423,424,426,427,428,461,462,474,475,476,477,480,487,493,494,495,497,500,503,517,522,],[43,43,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-5,-14,-16,43,-189,-86,43,43,-188,-12,43,-60,-61,-94,43,43,43,-98,-57,-95,-96,43,-196,-197,-199,-200,-201,-202,43,43,43,43,43,43,-11,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,-183,-198,43,-185,-190,43,43,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,43,-34,-49,43,43,43,43,43,-48,-47,]),'TIPO_ITERABLE':([0,2,3,4,6,7,8,9,10,11,13,24,25,26,47,48,59,67,68,69,101,127,128,149,169,170,171,174,197,200,201,238,255,280,281,283,284,285,287,288,289,290,298,302,303,305,306,307,312,313,314,318,319,320,321,330,331,337,342,343,360,362,369,370,371,373,375,376,378,379,380,419,420,422,423,424,426,427,428,461,462,474,475,476,477,480,487,493,494,495,497,500,503,517,522,],[44,44,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-5,-14,-16,44,-189,-86,44,44,-188,-12,44,-60,-61,-94,44,44,44,-98,-57,-95,-96,44,-196,-197,-199,-200,-201,-202,44,44,44,44,44,44,-11,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,-183,-198,44,-185,-190,44,44,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,44,-34,-49,44,44,44,44,44,-48,-47,]),'TIPO_NEVER':([0,2,3,4,6,7,8,9,10,11,13,24,25,26,47,48,59,67,68,69,101,127,128,149,169,170,171,174,197,200,201,238,255,280,281,283,284,285,287,288,289,290,298,302,303,305,306,307,312,313,314,318,319,320,321,330,331,337,342,343,360,362,369,370,371,373,375,376,378,379,380,419,420,422,423,424,426,427,428,461,462,474,475,476,477,480,487,493,494,495,497,500,503,517,522,],[45,45,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-5,-14,-16,45,-189,-86,45,45,-188,-12,45,-60,-61,-94,45,45,45,-98,-57,-95,-96,45,-196,-197,-199,-200,-201,-202,45,45,45,45,45,45,-11,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,-183,-198,45,-185,-190,45,45,-52,-54,-55,-56,-203,-184,-187,-191,-45,-53,-21,-22,-186,-46,-100,-103,-104,-105,45,-34,-49,45,45,45,45,45,-48,-47,]),'$end':([1,2,3,4,6,7,8,9,10,11,13,24,25,26,46,47,48,59,68,69,128,149,174,238,255,280,281,284,285,287,288,289,290,312,313,314,318,319,320,321,330,331,337,342,343,360,362,370,371,419,420,422,423,424,427,428,461,462,474,475,476,477,487,493,517,522,],[0,-2,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-89,-1,-5,-14,-16,-189,-86,-188,-12,-94,-98,-57,-95,-96,-196,-197,-199,-200,-201,-202,-11,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,-183,-198,-185,-190,-203,-184,-187,-191,-45,-21,-22,-186,-46,-100,-103,-104,-105,-34,-49,-48,-47,]),'LLAVE_CLAUSURA':([11,13,24,25,26,48,59,68,69,102,104,105,106,107,108,109,110,114,115,116,117,119,120,128,142,168,169,170,171,174,186,188,191,236,238,256,258,260,262,264,270,271,272,273,274,276,277,278,280,281,282,283,284,285,287,288,289,290,301,313,314,318,319,320,321,330,331,332,334,337,342,343,351,353,354,355,356,357,358,359,360,361,362,368,370,371,372,374,375,376,378,379,380,381,382,397,398,399,400,401,402,408,409,410,419,420,421,422,423,424,425,426,427,428,452,453,461,462,471,472,473,474,475,476,477,481,482,483,486,487,488,490,493,504,507,510,512,515,517,519,521,522,523,524,],[-13,-15,-87,-88,-89,-14,-16,-189,-86,-149,-116,-117,-118,-119,-120,-121,-139,-154,-155,-156,-65,-147,-148,-188,-157,255,-59,-60,-61,-94,-140,-149,-153,333,-98,-58,-63,-67,-158,-159,-141,-142,-143,-144,-145,-152,-146,-64,-95,-96,360,-195,-196,-197,-199,-200,-201,-202,370,-90,-107,-91,-92,-101,-102,-93,-97,403,-114,-99,-109,-108,-66,-160,-161,-162,-163,-150,-151,-62,-183,-194,-198,420,-185,-190,422,424,-51,-52,-54,-55,-56,427,428,446,-171,448,-173,450,-175,456,457,458,-203,-184,461,-187,-191,-45,-50,-53,-21,-22,-113,-115,-186,-46,-172,-174,-176,-100,-103,-104,-105,487,-36,-38,493,-34,-35,-37,-49,511,514,517,-43,-40,-48,-44,-41,-47,-42,-39,]),'SWITCH':([11,13,24,25,26,48,59,69,174,197,201,238,280,281,283,284,285,287,288,289,290,298,302,303,313,314,318,319,320,321,330,331,337,342,343,362,369,373,419,424,427,428,462,474,475,476,477,487,493,517,522,],[-13,-15,-87,-88,-89,-14,-16,-86,-94,292,292,-98,-95,-96,292,-196,-197,-199,-200,-201,-202,292,292,292,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,-198,292,292,-203,-45,-21,-22,-46,-100,-103,-104,-105,-34,-49,-48,-47,]),'RETURN':([11,13,24,25,26,48,59,69,174,197,201,238,280,281,283,284,285,287,288,289,290,298,302,303,313,314,318,319,320,321,330,331,337,342,343,362,369,373,419,424,427,428,462,474,475,476,477,487,493,517,522,],[-13,-15,-87,-88,-89,-14,-16,-86,-94,293,293,-98,-95,-96,293,-196,-197,-199,-200,-201,-202,293,293,293,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,-198,293,293,-203,-45,-21,-22,-46,-100,-103,-104,-105,-34,-49,-48,-47,]),'BREAK':([11,13,24,25,26,48,59,69,174,238,280,281,313,314,318,319,320,321,330,331,337,342,343,474,475,476,477,498,501,506,509,511,514,],[-13,-15,-87,-88,-89,-14,-16,-86,-94,-98,-95,-96,-90,-107,-91,-92,-101,-102,-93,-97,-99,-109,-108,-100,-103,-104,-105,505,508,513,516,518,520,]),'PUNTO_COMA':([14,19,73,74,75,76,77,80,82,88,89,90,102,103,104,105,106,107,108,109,110,114,115,116,117,119,120,121,123,142,147,154,155,157,186,188,191,194,195,217,218,219,221,222,223,224,225,226,227,234,235,239,248,249,250,251,254,258,260,262,264,270,271,272,273,274,276,277,278,286,295,310,315,323,333,349,351,353,354,355,356,357,358,359,364,365,366,367,377,384,385,393,403,411,412,413,414,416,432,434,438,439,440,441,443,444,446,448,450,454,455,456,457,458,459,466,467,468,469,470,499,502,505,508,513,516,518,520,],[59,69,149,-75,-78,-73,-74,-71,-72,-70,-76,-77,-149,174,-116,-117,-118,-119,-120,-121,-139,-154,-155,-156,-65,-147,-148,-17,-18,-157,216,-19,-20,238,-140,-149,-153,280,281,312,313,314,-127,-128,-123,318,319,320,321,330,331,337,342,-138,343,-129,-137,-63,-67,-158,-159,-141,-142,-143,-144,-145,-152,-146,-64,362,69,386,-126,-165,-111,-130,-66,-160,-161,-162,-163,-150,-151,-62,419,-75,-77,-76,426,-25,-26,-164,-110,-131,-132,-133,-134,-136,-27,-28,-124,-127,-128,-125,-166,-167,-177,-178,-179,-112,474,475,476,477,-135,-29,-30,-31,-32,-168,506,509,512,515,519,521,523,524,]),'SIGNO_IGUAL':([16,34,50,62,63,74,75,76,77,80,82,89,90,91,92,93,94,95,96,97,98,99,100,102,104,110,119,120,130,142,143,160,161,162,175,176,177,178,186,188,190,196,198,203,215,270,271,272,273,274,277,291,299,311,338,365,366,367,387,388,389,390,],[61,81,61,122,124,150,151,152,153,156,158,166,167,150,122,124,151,152,153,156,158,167,166,-149,177,-139,-147,-148,202,-149,177,242,243,244,263,265,266,267,-140,-149,-139,-122,202,304,309,-141,-142,-143,-144,-145,-146,61,304,389,407,150,167,166,433,435,436,437,]),'CORCHETE_APERTURA':([16,50,152,158,291,326,407,],[64,64,228,228,64,396,228,]),'PARENTESIS_APERTURA':([17,19,20,21,22,61,64,66,70,71,74,75,76,77,80,81,82,88,89,90,102,111,112,113,122,124,150,152,153,166,167,173,175,176,181,182,183,184,185,187,193,220,228,229,236,252,253,257,263,265,266,267,268,269,291,292,293,336,344,345,346,347,352,394,404,405,415,479,484,485,],[65,67,70,71,72,112,112,127,112,112,-75,-78,-73,-74,-71,112,-72,-70,-76,-77,173,187,112,112,187,187,112,112,112,187,253,112,187,187,187,187,187,187,187,187,279,112,112,325,112,253,253,173,187,187,187,187,112,112,173,363,112,406,253,253,253,253,112,112,112,112,253,485,112,112,]),'DATO_CADENA_TEXTO':([23,61,64,81,151,152,153,173,228,236,293,329,341,352,394,404,405,451,484,],[73,106,106,106,224,106,106,106,106,106,106,402,402,106,106,106,106,402,106,]),'SIGNO_MENOR_QUE':([35,36,55,56,102,104,110,119,120,142,143,152,186,188,190,270,271,272,273,274,277,311,],[83,87,83,87,-149,175,-139,-147,-148,-149,175,87,-140,-149,-139,-141,-142,-143,-144,-145,-146,387,]),'LLAVE_APERTURA':([60,126,130,156,198,203,212,213,214,231,232,233,242,243,244,245,246,247,299,460,463,494,495,496,],[101,197,201,236,298,303,305,306,307,327,328,329,339,340,341,-180,-181,-182,369,478,480,497,500,503,]),'NULL':([61,64,81,152,153,173,228,236,293,352,394,404,405,484,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'SIGNO_ADMIRACION_APERTURA':([61,64,70,71,81,102,104,110,112,113,119,120,142,143,150,152,153,173,186,188,190,220,228,236,268,269,270,271,272,273,274,277,293,311,352,394,404,405,484,485,],[113,113,113,113,113,-149,178,-139,113,113,-147,-148,-149,178,220,113,113,113,-140,-149,-139,113,113,113,113,113,-141,-142,-143,-144,-145,-146,113,390,113,113,113,113,113,113,]),'TRUE':([61,64,70,71,81,112,113,150,152,153,173,220,228,236,268,269,293,352,391,392,394,404,405,484,485,],[115,115,115,115,115,115,115,221,115,115,115,221,115,115,115,115,115,115,439,439,115,115,115,115,115,]),'FALSE':([61,64,70,71,81,112,113,150,152,153,173,220,228,236,268,269,293,352,391,392,394,404,405,484,485,],[116,116,116,116,116,116,116,222,116,116,116,222,116,116,116,116,116,116,440,440,116,116,116,116,116,]),'NEW':([61,64,81,152,153,156,158,173,228,236,293,352,394,404,405,407,484,],[118,118,118,230,118,237,240,118,118,118,118,118,118,118,118,240,118,]),'DATO_DOBLE':([61,64,70,71,81,111,112,113,122,124,150,152,153,166,173,175,176,181,182,183,184,185,187,220,228,236,263,265,266,267,268,269,293,328,340,352,394,404,405,449,484,485,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,400,400,119,119,119,119,400,119,119,]),'DATO_ENTERO':([61,64,70,71,81,111,112,113,122,124,150,152,153,166,167,173,175,176,181,182,183,184,185,187,220,228,236,252,253,263,265,266,267,268,269,293,309,325,327,339,344,345,346,347,352,387,388,394,396,404,405,415,433,435,436,437,447,484,485,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,254,120,120,120,120,120,120,120,120,120,120,120,120,254,254,120,120,120,120,120,120,120,385,395,398,398,254,254,254,254,120,432,434,120,445,120,120,254,466,467,468,469,398,120,120,]),'PARENTESIS_CLAUSURA':([65,67,88,102,104,105,106,107,108,109,110,114,115,116,117,119,120,121,123,127,129,131,141,142,144,145,154,155,173,186,188,189,190,191,199,204,205,206,207,208,209,210,211,249,254,258,259,260,261,262,264,270,271,272,273,274,275,276,277,278,279,300,350,351,353,354,355,356,357,358,359,383,395,406,411,412,413,414,416,417,418,429,430,459,492,],[126,130,-70,-149,-116,-117,-118,-119,-120,-121,-139,-154,-155,-156,-65,-147,-148,-17,-18,198,-192,203,212,-149,213,214,-19,-20,260,-140,-149,276,277,-153,299,-71,-72,-73,-74,-75,-76,-77,-78,-138,-137,-63,351,-67,-69,-158,-159,-141,-142,-143,-144,-145,277,-152,-146,-64,359,-193,416,-66,-160,-161,-162,-163,-150,-151,-62,-23,443,454,-131,-132,-133,-134,-136,-68,460,-24,-33,-135,496,]),'AS':([73,],[148,]),'COMA':([88,102,104,105,106,107,108,109,110,114,115,116,117,119,120,129,142,186,188,191,204,205,206,207,208,209,210,211,258,260,261,262,264,270,271,272,273,274,276,277,278,324,334,351,353,354,355,356,357,358,359,398,400,402,453,],[-70,-149,-116,-117,-118,-119,-120,-121,-139,-154,-155,-156,-65,-147,-148,200,-157,-140,-149,-153,-71,-72,-73,-74,-75,-76,-77,-78,-63,-67,352,-158,-159,-141,-142,-143,-144,-145,-152,-146,-64,394,404,-66,-160,-161,-162,-163,-150,-151,-62,447,449,451,-115,]),'PLECA':([102,105,110,114,115,116,119,120,141,142,144,179,186,188,189,191,218,221,222,223,262,264,270,271,272,273,274,276,277,317,353,354,355,356,357,358,492,],[-157,179,-139,-154,-155,-156,-147,-148,179,-157,179,268,-140,-149,179,179,179,-127,-128,317,-158,-159,-141,-142,-143,-144,-145,-152,-146,392,-160,-161,-162,-163,179,179,179,]),'ET':([102,105,110,114,115,116,119,120,141,142,144,180,186,188,189,191,218,221,222,223,262,264,270,271,272,273,274,276,277,316,353,354,355,356,357,358,492,],[-157,180,-139,-154,-155,-156,-147,-148,180,-157,180,269,-140,-149,180,180,180,-127,-128,316,-158,-159,-141,-142,-143,-144,-145,-152,-146,391,-160,-161,-162,-163,180,180,180,]),'CORCHETE_CLAUSURA':([102,104,105,106,107,108,109,110,114,115,116,117,119,120,125,142,186,188,191,228,258,260,262,264,270,271,272,273,274,276,277,278,322,324,351,353,354,355,356,357,358,359,396,442,445,],[-149,-116,-117,-118,-119,-120,-121,-139,-154,-155,-156,-65,-147,-148,196,-157,-140,-149,-153,323,-63,-67,-158,-159,-141,-142,-143,-144,-145,-152,-146,-64,393,-169,-66,-160,-161,-162,-163,-150,-151,-62,444,-170,470,]),'DOBLE_PUNTO':([102,104,105,106,107,108,109,110,114,115,116,117,119,120,142,186,188,191,258,260,262,264,270,271,272,273,274,276,277,278,335,351,353,354,355,356,357,358,359,489,491,],[-149,-116,-117,-118,-119,-120,-121,-139,-154,-155,-156,-65,-147,-148,-157,-140,-149,-153,-63,-67,-158,-159,-141,-142,-143,-144,-145,-152,-146,-64,405,-66,-160,-161,-162,-163,-150,-151,-62,494,495,]),'PUNTO':([102,117,257,260,291,351,],[172,192,172,-67,172,-66,]),'SIGNO_MULTIPLICACION':([102,110,119,120,142,186,188,190,249,251,254,270,271,272,273,274,275,277,349,350,411,412,413,414,416,459,],[-149,183,-147,-148,-149,183,-149,183,-138,346,-137,183,183,183,183,183,183,-146,346,346,346,346,346,346,-136,346,]),'PORCENTAJE':([102,110,119,120,142,186,188,190,249,251,254,270,271,272,273,274,275,277,349,350,411,412,413,414,416,459,],[-149,184,-147,-148,-149,184,-149,184,-138,347,-137,184,184,184,184,184,184,-146,347,347,347,347,347,347,-136,347,]),'SIGNO_DIVISION':([102,110,119,120,142,186,188,190,270,271,272,273,274,275,277,348,],[-149,185,-147,-148,-149,185,-149,185,185,185,185,185,185,185,-146,415,]),'SIGNO_MAYOR_QUE':([102,104,110,119,120,142,143,159,163,164,165,186,188,190,202,270,271,272,273,274,277,304,311,],[-149,176,-139,-147,-148,-149,176,241,245,246,247,-140,-149,-139,302,-141,-142,-143,-144,-145,-146,373,388,]),'IN':([215,],[308,]),'VIRGULILLA':([249,251,254,349,350,411,412,413,414,416,459,],[-138,348,-137,348,348,348,348,348,348,-136,348,]),'ELSE':([424,517,],[463,463,]),'CASE':([478,483,515,521,524,],[484,484,-40,-41,-39,]),'DEFAULT':([482,483,490,515,521,524,],[489,-38,-37,-40,-41,-39,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,2,],[1,46,]),'item_programa':([0,2,],[2,2,]),'instruccion':([0,2,101,169,197,201,283,298,302,303,305,306,307,369,373,375,480,494,495,497,500,503,],[3,3,170,170,284,284,284,284,284,284,376,376,376,284,284,376,376,498,501,376,376,376,]),'clase':([0,2,5,],[4,4,47,]),'funcion':([0,2,101,169,],[6,6,171,171,]),'instruccion_if':([0,2,197,201,283,298,302,303,305,306,307,369,373,375,480,497,500,503,],[7,7,285,285,285,285,285,285,378,378,378,285,285,378,378,378,378,378,]),'instruccion_while':([0,2,197,201,283,298,302,303,305,306,307,369,373,375,480,497,500,503,],[8,8,287,287,287,287,287,287,379,379,379,287,287,379,379,379,379,379,]),'instruccion_for':([0,2,197,201,283,298,302,303,305,306,307,369,373,375,480,497,500,503,],[9,9,288,288,288,288,288,288,380,380,380,288,288,380,380,380,380,380,]),'import':([0,2,],[10,10,]),'asignacion':([0,2,12,101,169,197,201,283,298,302,303,305,306,307,369,373,375,480,494,495,497,500,503,],[11,11,48,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'declaracion':([0,2,101,169,197,201,283,298,302,303,305,306,307,369,373,375,480,494,495,497,500,503,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'operacion_unitaria':([0,2,101,169,197,201,283,298,302,303,305,306,307,369,373,375,386,480,494,495,497,500,503,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,430,14,14,14,14,14,14,]),'declaracion_general':([0,2,67,101,127,169,197,200,201,283,298,302,303,305,306,307,369,373,375,480,494,495,497,500,503,],[19,19,129,19,129,19,295,129,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,]),'asignacion_bool':([0,2,12,101,169,197,201,283,298,302,303,305,306,307,369,373,375,480,494,495,497,500,503,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'asignacion_int':([0,2,12,101,169,197,201,283,298,302,303,305,306,307,369,373,375,480,494,495,497,500,503,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'asignacion_double':([0,2,12,101,169,197,201,283,298,302,303,305,306,307,369,373,375,480,494,495,497,500,503,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'valor_mapa_lista':([0,2,12,101,169,197,201,283,298,302,303,305,306,307,369,373,375,480,494,495,497,500,503,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'tipos_declaracion':([0,2,67,101,127,169,197,200,201,283,298,302,303,305,306,307,369,373,375,480,494,495,497,500,503,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'funcion_flecha':([19,66,],[68,128,]),'cast_int':([36,56,152,],[84,84,231,]),'cast_double':([36,56,152,],[85,85,232,]),'cast_string':([36,56,152,],[86,86,233,]),'valor_general':([61,64,81,152,153,173,228,236,293,352,394,404,405,484,],[103,125,157,225,234,261,324,335,364,261,324,335,453,491,]),'expresion_mat_double':([61,64,70,71,81,112,113,122,124,150,152,153,166,173,175,176,220,228,236,263,265,266,267,268,269,293,352,394,404,405,484,485,],[104,104,143,143,104,143,143,194,195,143,104,104,248,104,262,264,143,104,104,353,354,355,356,143,143,104,104,104,104,104,104,143,]),'expresion_logica':([61,64,70,71,81,112,113,150,152,153,173,220,228,236,268,269,293,352,394,404,405,484,485,],[105,105,141,144,105,189,191,218,105,105,105,191,105,105,357,358,105,105,105,105,105,105,492,]),'llamadas_func':([61,64,81,152,153,172,173,192,197,201,228,236,283,293,298,302,303,305,306,307,352,369,373,375,394,404,405,480,484,494,495,497,500,503,],[107,107,107,107,107,258,107,278,286,286,107,107,286,107,286,286,286,377,377,377,107,286,286,377,107,107,107,377,107,499,502,377,377,377,]),'nuevo_objeto':([61,64,81,152,153,173,228,236,293,352,394,404,405,484,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'expresion_double_no_menos':([61,64,70,71,81,111,112,113,122,124,150,152,153,166,173,175,176,181,182,183,184,185,187,220,228,236,263,265,266,267,268,269,293,352,394,404,405,484,485,],[110,110,110,110,110,186,190,110,110,110,110,110,110,110,110,110,110,270,271,272,273,274,275,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'comparacion':([61,64,70,71,81,112,113,150,152,153,173,220,228,236,268,269,293,352,394,404,405,484,485,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'llamada_func':([61,64,81,152,153,172,173,192,197,201,228,236,283,293,298,302,303,305,306,307,352,369,373,375,394,404,405,480,484,494,495,497,500,503,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'parametros':([67,127,200,],[131,199,300,]),'condicion_for':([72,],[145,]),'condicion_for_inicial':([72,],[147,]),'bloque_clase':([101,169,],[168,256,]),'item_bloque_clase':([101,169,],[169,169,]),'expresion_bool':([150,],[219,]),'dato_bool':([150,220,391,392,],[223,315,438,441,]),'lista':([152,158,407,],[226,239,455,]),'conjunto_especifico':([152,],[227,]),'bloque_mapa':([156,],[235,]),'expresion_mat_int':([167,],[250,]),'expresion_int_no_menos':([167,252,253,344,345,346,347,415,],[251,349,350,411,412,413,414,459,]),'params':([173,352,],[259,417,]),'items_funcion':([197,201,283,298,303,369,],[282,301,361,368,372,421,]),'item_funcion':([197,201,283,298,302,303,369,373,],[283,283,283,283,371,283,283,423,]),'instruccion_switch':([197,201,283,298,302,303,369,373,],[289,289,289,289,289,289,289,289,]),'inst_return':([197,201,283,298,302,303,369,373,],[290,290,290,290,290,290,290,290,]),'condicion_for_terminacion':([216,],[310,]),'lista_general':([228,394,],[322,442,]),'pares_llave_valor':([236,404,],[332,452,]),'par_llave_valor':([236,404,],[334,334,]),'items_estructura_control':([305,306,307,375,480,497,500,503,],[374,381,382,425,486,504,507,510,]),'item_estructura_control':([305,306,307,375,480,497,500,503,],[375,375,375,375,375,375,375,375,]),'lista_numeros':([327,339,447,],[397,408,471,]),'lista_dobles':([328,340,449,],[399,409,472,]),'lista_cadenas':([329,341,451,],[401,410,473,]),'condicion_for_paso':([386,],[429,]),'instruccion_else':([424,517,],[462,522,]),'bloque_switch':([478,],[481,]),'instrucciones_case':([478,483,],[482,490,]),'instruccion_case':([478,483,],[483,483,]),'instruccion_default':([482,],[488,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> item_programa programa','programa',2,'p_programa','analisis_sintactico.py',8),
  ('programa -> item_programa','programa',1,'p_programa','analisis_sintactico.py',9),
  ('item_programa -> instruccion','item_programa',1,'p_item_programa','analisis_sintactico.py',12),
  ('item_programa -> clase','item_programa',1,'p_item_programa','analisis_sintactico.py',13),
  ('item_programa -> ABSTRACT clase','item_programa',2,'p_item_programa','analisis_sintactico.py',14),
  ('item_programa -> funcion','item_programa',1,'p_item_programa','analisis_sintactico.py',15),
  ('item_programa -> instruccion_if','item_programa',1,'p_item_programa','analisis_sintactico.py',16),
  ('item_programa -> instruccion_while','item_programa',1,'p_item_programa','analisis_sintactico.py',17),
  ('item_programa -> instruccion_for','item_programa',1,'p_item_programa','analisis_sintactico.py',18),
  ('item_programa -> import','item_programa',1,'p_item_programa','analisis_sintactico.py',19),
  ('import -> IMPORT DATO_CADENA_TEXTO AS IDENTIFICADOR PUNTO_COMA','import',5,'p_import','analisis_sintactico.py',22),
  ('import -> IMPORT DATO_CADENA_TEXTO PUNTO_COMA','import',3,'p_import','analisis_sintactico.py',23),
  ('instruccion -> asignacion','instruccion',1,'p_instruccion','analisis_sintactico.py',26),
  ('instruccion -> FINAL asignacion','instruccion',2,'p_instruccion','analisis_sintactico.py',27),
  ('instruccion -> declaracion','instruccion',1,'p_instruccion','analisis_sintactico.py',28),
  ('instruccion -> operacion_unitaria PUNTO_COMA','instruccion',2,'p_instruccion','analisis_sintactico.py',29),
  ('operacion_unitaria -> IDENTIFICADOR SIGNO_MAS SIGNO_MAS','operacion_unitaria',3,'p_operacion_unitaria','analisis_sintactico.py',32),
  ('operacion_unitaria -> IDENTIFICADOR SIGNO_MENOS SIGNO_MENOS','operacion_unitaria',3,'p_operacion_unitaria','analisis_sintactico.py',33),
  ('operacion_unitaria -> SIGNO_MAS SIGNO_MAS IDENTIFICADOR','operacion_unitaria',3,'p_operacion_unitaria','analisis_sintactico.py',34),
  ('operacion_unitaria -> SIGNO_MENOS SIGNO_MENOS IDENTIFICADOR','operacion_unitaria',3,'p_operacion_unitaria','analisis_sintactico.py',35),
  ('instruccion_while -> WHILE PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA','instruccion_while',7,'p_instruccion_while','analisis_sintactico.py',39),
  ('instruccion_for -> FOR PARENTESIS_APERTURA condicion_for PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA','instruccion_for',7,'p_instruccion_for','analisis_sintactico.py',43),
  ('condicion_for -> TIPO_INT IDENTIFICADOR IN IDENTIFICADOR','condicion_for',4,'p_condicion_for','analisis_sintactico.py',46),
  ('condicion_for -> condicion_for_inicial PUNTO_COMA condicion_for_terminacion PUNTO_COMA condicion_for_paso','condicion_for',5,'p_condicion_for','analisis_sintactico.py',47),
  ('condicion_for_inicial -> TIPO_INT IDENTIFICADOR SIGNO_IGUAL IDENTIFICADOR','condicion_for_inicial',4,'p_condicion_for_inicial','analisis_sintactico.py',50),
  ('condicion_for_inicial -> TIPO_INT IDENTIFICADOR SIGNO_IGUAL DATO_ENTERO','condicion_for_inicial',4,'p_condicion_for_inicial','analisis_sintactico.py',51),
  ('condicion_for_terminacion -> IDENTIFICADOR SIGNO_MENOR_QUE DATO_ENTERO','condicion_for_terminacion',3,'p_condicion_for_terminacion','analisis_sintactico.py',54),
  ('condicion_for_terminacion -> IDENTIFICADOR SIGNO_MAYOR_QUE DATO_ENTERO','condicion_for_terminacion',3,'p_condicion_for_terminacion','analisis_sintactico.py',55),
  ('condicion_for_terminacion -> IDENTIFICADOR SIGNO_MENOR_QUE SIGNO_IGUAL DATO_ENTERO','condicion_for_terminacion',4,'p_condicion_for_terminacion','analisis_sintactico.py',56),
  ('condicion_for_terminacion -> IDENTIFICADOR SIGNO_MAYOR_QUE SIGNO_IGUAL DATO_ENTERO','condicion_for_terminacion',4,'p_condicion_for_terminacion','analisis_sintactico.py',57),
  ('condicion_for_terminacion -> IDENTIFICADOR SIGNO_IGUAL SIGNO_IGUAL DATO_ENTERO','condicion_for_terminacion',4,'p_condicion_for_terminacion','analisis_sintactico.py',58),
  ('condicion_for_terminacion -> IDENTIFICADOR SIGNO_ADMIRACION_APERTURA SIGNO_IGUAL DATO_ENTERO','condicion_for_terminacion',4,'p_condicion_for_terminacion','analisis_sintactico.py',59),
  ('condicion_for_paso -> operacion_unitaria','condicion_for_paso',1,'p_condicion_for_paso','analisis_sintactico.py',62),
  ('instruccion_switch -> SWITCH PARENTESIS_APERTURA IDENTIFICADOR PARENTESIS_CLAUSURA LLAVE_APERTURA bloque_switch LLAVE_CLAUSURA','instruccion_switch',7,'p_instruccion_switch','analisis_sintactico.py',66),
  ('bloque_switch -> instrucciones_case instruccion_default','bloque_switch',2,'p_bloque_switch','analisis_sintactico.py',69),
  ('bloque_switch -> instrucciones_case','bloque_switch',1,'p_bloque_switch','analisis_sintactico.py',70),
  ('instrucciones_case -> instruccion_case instrucciones_case','instrucciones_case',2,'p_instrucciones_case','analisis_sintactico.py',73),
  ('instrucciones_case -> instruccion_case','instrucciones_case',1,'p_instrucciones_case','analisis_sintactico.py',74),
  ('instruccion_case -> CASE valor_general DOBLE_PUNTO LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA BREAK PUNTO_COMA','instruccion_case',8,'p_instruccion_case','analisis_sintactico.py',77),
  ('instruccion_case -> CASE valor_general DOBLE_PUNTO instruccion BREAK PUNTO_COMA','instruccion_case',6,'p_instruccion_case','analisis_sintactico.py',78),
  ('instruccion_case -> CASE valor_general DOBLE_PUNTO llamadas_func PUNTO_COMA BREAK PUNTO_COMA','instruccion_case',7,'p_instruccion_case','analisis_sintactico.py',79),
  ('instruccion_default -> DEFAULT DOBLE_PUNTO LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA BREAK PUNTO_COMA','instruccion_default',7,'p_instruccion_default','analisis_sintactico.py',82),
  ('instruccion_default -> DEFAULT DOBLE_PUNTO instruccion BREAK PUNTO_COMA','instruccion_default',5,'p_instruccion_default','analisis_sintactico.py',83),
  ('instruccion_default -> DEFAULT DOBLE_PUNTO llamadas_func PUNTO_COMA BREAK PUNTO_COMA','instruccion_default',6,'p_instruccion_default','analisis_sintactico.py',84),
  ('instruccion_if -> IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA','instruccion_if',7,'p_instruccion_if','analisis_sintactico.py',88),
  ('instruccion_if -> IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA instruccion_else','instruccion_if',8,'p_instruccion_if','analisis_sintactico.py',89),
  ('instruccion_else -> ELSE IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA instruccion_else','instruccion_else',9,'p_instruccion_else','analisis_sintactico.py',92),
  ('instruccion_else -> ELSE IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA','instruccion_else',8,'p_instruccion_else','analisis_sintactico.py',93),
  ('instruccion_else -> ELSE LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA','instruccion_else',4,'p_instruccion_else','analisis_sintactico.py',94),
  ('items_estructura_control -> item_estructura_control items_estructura_control','items_estructura_control',2,'p_items_estructura_control','analisis_sintactico.py',97),
  ('items_estructura_control -> item_estructura_control','items_estructura_control',1,'p_items_estructura_control','analisis_sintactico.py',98),
  ('item_estructura_control -> instruccion','item_estructura_control',1,'p_item_estructura_control','analisis_sintactico.py',101),
  ('item_estructura_control -> llamadas_func PUNTO_COMA','item_estructura_control',2,'p_item_estructura_control','analisis_sintactico.py',102),
  ('item_estructura_control -> instruccion_if','item_estructura_control',1,'p_item_estructura_control','analisis_sintactico.py',103),
  ('item_estructura_control -> instruccion_while','item_estructura_control',1,'p_item_estructura_control','analisis_sintactico.py',104),
  ('item_estructura_control -> instruccion_for','item_estructura_control',1,'p_item_estructura_control','analisis_sintactico.py',105),
  ('clase -> CLASS IDENTIFICADOR LLAVE_APERTURA bloque_clase LLAVE_CLAUSURA','clase',5,'p_clase','analisis_sintactico.py',111),
  ('bloque_clase -> item_bloque_clase bloque_clase','bloque_clase',2,'p_bloque_clase','analisis_sintactico.py',114),
  ('bloque_clase -> item_bloque_clase','bloque_clase',1,'p_bloque_clase','analisis_sintactico.py',115),
  ('item_bloque_clase -> instruccion','item_bloque_clase',1,'p_item_bloque_clase','analisis_sintactico.py',118),
  ('item_bloque_clase -> funcion','item_bloque_clase',1,'p_item_bloque_clase','analisis_sintactico.py',119),
  ('nuevo_objeto -> NEW IDENTIFICADOR PARENTESIS_APERTURA PARENTESIS_CLAUSURA','nuevo_objeto',4,'p_nuevo_objeto','analisis_sintactico.py',122),
  ('llamadas_func -> IDENTIFICADOR PUNTO llamadas_func','llamadas_func',3,'p_llamadas_func','analisis_sintactico.py',126),
  ('llamadas_func -> llamada_func PUNTO llamadas_func','llamadas_func',3,'p_llamadas_func','analisis_sintactico.py',127),
  ('llamadas_func -> llamada_func','llamadas_func',1,'p_llamadas_func','analisis_sintactico.py',128),
  ('llamada_func -> IDENTIFICADOR PARENTESIS_APERTURA params PARENTESIS_CLAUSURA','llamada_func',4,'p_llamada_func','analisis_sintactico.py',131),
  ('llamada_func -> IDENTIFICADOR PARENTESIS_APERTURA PARENTESIS_CLAUSURA','llamada_func',3,'p_llamada_func','analisis_sintactico.py',132),
  ('params -> valor_general COMA params','params',3,'p_params','analisis_sintactico.py',135),
  ('params -> valor_general','params',1,'p_params','analisis_sintactico.py',136),
  ('declaracion_general -> tipos_declaracion IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',140),
  ('declaracion_general -> TIPO_MAP IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',141),
  ('declaracion_general -> TIPO_LIST IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',142),
  ('declaracion_general -> VAR IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',143),
  ('declaracion_general -> DYNAMIC IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',144),
  ('declaracion_general -> TIPO_BOOL IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',145),
  ('declaracion_general -> TIPO_DOUBLE IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',146),
  ('declaracion_general -> TIPO_INT IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',147),
  ('declaracion_general -> TIPO_STRING IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',148),
  ('tipos_declaracion -> TIPO_SET','tipos_declaracion',1,'p_tipos_declaracion','analisis_sintactico.py',151),
  ('tipos_declaracion -> TIPO_SYMBOL','tipos_declaracion',1,'p_tipos_declaracion','analisis_sintactico.py',152),
  ('tipos_declaracion -> TIPO_OBJECT','tipos_declaracion',1,'p_tipos_declaracion','analisis_sintactico.py',153),
  ('tipos_declaracion -> TIPO_FUTURE','tipos_declaracion',1,'p_tipos_declaracion','analisis_sintactico.py',154),
  ('tipos_declaracion -> TIPO_STREAM','tipos_declaracion',1,'p_tipos_declaracion','analisis_sintactico.py',155),
  ('tipos_declaracion -> TIPO_ITERABLE','tipos_declaracion',1,'p_tipos_declaracion','analisis_sintactico.py',156),
  ('tipos_declaracion -> TIPO_NEVER','tipos_declaracion',1,'p_tipos_declaracion','analisis_sintactico.py',157),
  ('declaracion -> declaracion_general PUNTO_COMA','declaracion',2,'p_declaracion','analisis_sintactico.py',160),
  ('asignacion -> asignacion_bool','asignacion',1,'p_asignacion','analisis_sintactico.py',165),
  ('asignacion -> asignacion_int','asignacion',1,'p_asignacion','analisis_sintactico.py',166),
  ('asignacion -> asignacion_double','asignacion',1,'p_asignacion','analisis_sintactico.py',167),
  ('asignacion -> TIPO_BOOL IDENTIFICADOR SIGNO_IGUAL expresion_logica PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',168),
  ('asignacion -> TIPO_STRING IDENTIFICADOR SIGNO_IGUAL DATO_CADENA_TEXTO PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',169),
  ('asignacion -> VAR IDENTIFICADOR SIGNO_IGUAL valor_general PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',170),
  ('asignacion -> DYNAMIC IDENTIFICADOR SIGNO_IGUAL valor_general PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',171),
  ('asignacion -> IDENTIFICADOR SIGNO_IGUAL valor_general PUNTO_COMA','asignacion',4,'p_asignacion','analisis_sintactico.py',172),
  ('asignacion -> IDENTIFICADOR SIGNO_MAS SIGNO_IGUAL expresion_mat_double PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',173),
  ('asignacion -> IDENTIFICADOR SIGNO_MENOS SIGNO_IGUAL expresion_mat_double PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',174),
  ('asignacion -> TIPO_MAP IDENTIFICADOR SIGNO_IGUAL bloque_mapa PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',175),
  ('asignacion -> valor_mapa_lista SIGNO_IGUAL valor_general PUNTO_COMA','asignacion',4,'p_asignacion','analisis_sintactico.py',176),
  ('asignacion -> TIPO_LIST IDENTIFICADOR SIGNO_IGUAL lista PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',177),
  ('asignacion -> TIPO_LIST SIGNO_MENOR_QUE IDENTIFICADOR SIGNO_MAYOR_QUE IDENTIFICADOR SIGNO_IGUAL lista PUNTO_COMA','asignacion',8,'p_asignacion','analisis_sintactico.py',178),
  ('asignacion -> VAR IDENTIFICADOR SIGNO_IGUAL lista PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',179),
  ('asignacion -> VAR IDENTIFICADOR SIGNO_IGUAL conjunto_especifico PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',180),
  ('asignacion -> TIPO_SET cast_int IDENTIFICADOR SIGNO_IGUAL LLAVE_APERTURA lista_numeros LLAVE_CLAUSURA PUNTO_COMA','asignacion',8,'p_asignacion','analisis_sintactico.py',181),
  ('asignacion -> TIPO_SET cast_double IDENTIFICADOR SIGNO_IGUAL LLAVE_APERTURA lista_dobles LLAVE_CLAUSURA PUNTO_COMA','asignacion',8,'p_asignacion','analisis_sintactico.py',182),
  ('asignacion -> TIPO_SET cast_string IDENTIFICADOR SIGNO_IGUAL LLAVE_APERTURA lista_cadenas LLAVE_CLAUSURA PUNTO_COMA','asignacion',8,'p_asignacion','analisis_sintactico.py',183),
  ('asignacion_string -> TIPO_STRING IDENTIFICADOR SIGNO_IGUAL DATO_CADENA_TEXTO PUNTO_COMA','asignacion_string',5,'p_asignacion_string','analisis_sintactico.py',187),
  ('asignacion_bool -> TIPO_BOOL IDENTIFICADOR SIGNO_IGUAL expresion_bool PUNTO_COMA','asignacion_bool',5,'p_asignacion_bool','analisis_sintactico.py',191),
  ('asignacion_int -> TIPO_INT IDENTIFICADOR SIGNO_IGUAL expresion_mat_int PUNTO_COMA','asignacion_int',5,'p_asignacion_int','analisis_sintactico.py',196),
  ('asignacion_double -> TIPO_DOUBLE IDENTIFICADOR SIGNO_IGUAL expresion_mat_double PUNTO_COMA','asignacion_double',5,'p_asignacion_double','analisis_sintactico.py',200),
  ('bloque_mapa -> LLAVE_APERTURA pares_llave_valor LLAVE_CLAUSURA','bloque_mapa',3,'p_bloque_mapa','analisis_sintactico.py',205),
  ('bloque_mapa -> LLAVE_APERTURA LLAVE_CLAUSURA','bloque_mapa',2,'p_bloque_mapa','analisis_sintactico.py',206),
  ('bloque_mapa -> NEW TIPO_MAP PARENTESIS_APERTURA PARENTESIS_CLAUSURA','bloque_mapa',4,'p_bloque_mapa','analisis_sintactico.py',207),
  ('pares_llave_valor -> par_llave_valor COMA pares_llave_valor','pares_llave_valor',3,'p_pares_llave_valor','analisis_sintactico.py',210),
  ('pares_llave_valor -> par_llave_valor','pares_llave_valor',1,'p_pares_llave_valor','analisis_sintactico.py',211),
  ('par_llave_valor -> valor_general DOBLE_PUNTO valor_general','par_llave_valor',3,'p_par_llave_valor','analisis_sintactico.py',214),
  ('valor_general -> expresion_mat_double','valor_general',1,'p_valor_general','analisis_sintactico.py',217),
  ('valor_general -> expresion_logica','valor_general',1,'p_valor_general','analisis_sintactico.py',218),
  ('valor_general -> DATO_CADENA_TEXTO','valor_general',1,'p_valor_general','analisis_sintactico.py',219),
  ('valor_general -> llamadas_func','valor_general',1,'p_valor_general','analisis_sintactico.py',220),
  ('valor_general -> nuevo_objeto','valor_general',1,'p_valor_general','analisis_sintactico.py',221),
  ('valor_general -> NULL','valor_general',1,'p_valor_general','analisis_sintactico.py',222),
  ('valor_mapa_lista -> IDENTIFICADOR CORCHETE_APERTURA valor_general CORCHETE_CLAUSURA','valor_mapa_lista',4,'p_valor_mapa_lista','analisis_sintactico.py',225),
  ('expresion_bool -> dato_bool','expresion_bool',1,'p_expresion_bool','analisis_sintactico.py',229),
  ('expresion_bool -> dato_bool ET ET dato_bool','expresion_bool',4,'p_expresion_bool','analisis_sintactico.py',230),
  ('expresion_bool -> dato_bool PLECA PLECA dato_bool','expresion_bool',4,'p_expresion_bool','analisis_sintactico.py',231),
  ('expresion_bool -> SIGNO_ADMIRACION_APERTURA dato_bool','expresion_bool',2,'p_expresion_bool','analisis_sintactico.py',232),
  ('dato_bool -> TRUE','dato_bool',1,'p_dato_bool','analisis_sintactico.py',235),
  ('dato_bool -> FALSE','dato_bool',1,'p_dato_bool','analisis_sintactico.py',236),
  ('expresion_mat_int -> expresion_int_no_menos','expresion_mat_int',1,'p_expresion_mat_int','analisis_sintactico.py',240),
  ('expresion_mat_int -> SIGNO_MENOS expresion_int_no_menos','expresion_mat_int',2,'p_expresion_mat_int','analisis_sintactico.py',241),
  ('expresion_int_no_menos -> expresion_int_no_menos SIGNO_MAS expresion_int_no_menos','expresion_int_no_menos',3,'p_expresion_int_no_menos','analisis_sintactico.py',244),
  ('expresion_int_no_menos -> expresion_int_no_menos SIGNO_MENOS expresion_int_no_menos','expresion_int_no_menos',3,'p_expresion_int_no_menos','analisis_sintactico.py',245),
  ('expresion_int_no_menos -> expresion_int_no_menos SIGNO_MULTIPLICACION expresion_int_no_menos','expresion_int_no_menos',3,'p_expresion_int_no_menos','analisis_sintactico.py',246),
  ('expresion_int_no_menos -> expresion_int_no_menos PORCENTAJE expresion_int_no_menos','expresion_int_no_menos',3,'p_expresion_int_no_menos','analisis_sintactico.py',247),
  ('expresion_int_no_menos -> expresion_int_no_menos VIRGULILLA SIGNO_DIVISION expresion_int_no_menos','expresion_int_no_menos',4,'p_expresion_int_no_menos','analisis_sintactico.py',248),
  ('expresion_int_no_menos -> PARENTESIS_APERTURA expresion_int_no_menos PARENTESIS_CLAUSURA','expresion_int_no_menos',3,'p_expresion_int_no_menos','analisis_sintactico.py',249),
  ('expresion_int_no_menos -> DATO_ENTERO','expresion_int_no_menos',1,'p_expresion_int_no_menos','analisis_sintactico.py',250),
  ('expresion_int_no_menos -> IDENTIFICADOR','expresion_int_no_menos',1,'p_expresion_int_no_menos','analisis_sintactico.py',251),
  ('expresion_mat_double -> expresion_double_no_menos','expresion_mat_double',1,'p_expresion_mat_double','analisis_sintactico.py',254),
  ('expresion_mat_double -> SIGNO_MENOS expresion_double_no_menos','expresion_mat_double',2,'p_expresion_mat_double','analisis_sintactico.py',255),
  ('expresion_double_no_menos -> expresion_double_no_menos SIGNO_MAS expresion_double_no_menos','expresion_double_no_menos',3,'p_expresion_double_no_menos','analisis_sintactico.py',258),
  ('expresion_double_no_menos -> expresion_double_no_menos SIGNO_MENOS expresion_double_no_menos','expresion_double_no_menos',3,'p_expresion_double_no_menos','analisis_sintactico.py',259),
  ('expresion_double_no_menos -> expresion_double_no_menos SIGNO_MULTIPLICACION expresion_double_no_menos','expresion_double_no_menos',3,'p_expresion_double_no_menos','analisis_sintactico.py',260),
  ('expresion_double_no_menos -> expresion_double_no_menos PORCENTAJE expresion_double_no_menos','expresion_double_no_menos',3,'p_expresion_double_no_menos','analisis_sintactico.py',261),
  ('expresion_double_no_menos -> expresion_double_no_menos SIGNO_DIVISION expresion_double_no_menos','expresion_double_no_menos',3,'p_expresion_double_no_menos','analisis_sintactico.py',262),
  ('expresion_double_no_menos -> PARENTESIS_APERTURA expresion_double_no_menos PARENTESIS_CLAUSURA','expresion_double_no_menos',3,'p_expresion_double_no_menos','analisis_sintactico.py',263),
  ('expresion_double_no_menos -> DATO_DOBLE','expresion_double_no_menos',1,'p_expresion_double_no_menos','analisis_sintactico.py',264),
  ('expresion_double_no_menos -> DATO_ENTERO','expresion_double_no_menos',1,'p_expresion_double_no_menos','analisis_sintactico.py',265),
  ('expresion_double_no_menos -> IDENTIFICADOR','expresion_double_no_menos',1,'p_expresion_double_no_menos','analisis_sintactico.py',266),
  ('expresion_logica -> expresion_logica PLECA PLECA expresion_logica','expresion_logica',4,'p_expresion_logica','analisis_sintactico.py',270),
  ('expresion_logica -> expresion_logica ET ET expresion_logica','expresion_logica',4,'p_expresion_logica','analisis_sintactico.py',271),
  ('expresion_logica -> PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA','expresion_logica',3,'p_expresion_logica','analisis_sintactico.py',272),
  ('expresion_logica -> SIGNO_ADMIRACION_APERTURA expresion_logica','expresion_logica',2,'p_expresion_logica','analisis_sintactico.py',273),
  ('expresion_logica -> comparacion','expresion_logica',1,'p_expresion_logica','analisis_sintactico.py',274),
  ('expresion_logica -> TRUE','expresion_logica',1,'p_expresion_logica','analisis_sintactico.py',275),
  ('expresion_logica -> FALSE','expresion_logica',1,'p_expresion_logica','analisis_sintactico.py',276),
  ('expresion_logica -> IDENTIFICADOR','expresion_logica',1,'p_expresion_logica','analisis_sintactico.py',277),
  ('comparacion -> expresion_mat_double SIGNO_MENOR_QUE expresion_mat_double','comparacion',3,'p_comparacion','analisis_sintactico.py',280),
  ('comparacion -> expresion_mat_double SIGNO_MAYOR_QUE expresion_mat_double','comparacion',3,'p_comparacion','analisis_sintactico.py',281),
  ('comparacion -> expresion_mat_double SIGNO_MENOR_QUE SIGNO_IGUAL expresion_mat_double','comparacion',4,'p_comparacion','analisis_sintactico.py',282),
  ('comparacion -> expresion_mat_double SIGNO_MAYOR_QUE SIGNO_IGUAL expresion_mat_double','comparacion',4,'p_comparacion','analisis_sintactico.py',283),
  ('comparacion -> expresion_mat_double SIGNO_IGUAL SIGNO_IGUAL expresion_mat_double','comparacion',4,'p_comparacion','analisis_sintactico.py',284),
  ('comparacion -> expresion_mat_double SIGNO_ADMIRACION_APERTURA SIGNO_IGUAL expresion_mat_double','comparacion',4,'p_comparacion','analisis_sintactico.py',285),
  ('lista -> CORCHETE_APERTURA lista_general CORCHETE_CLAUSURA','lista',3,'p_lista','analisis_sintactico.py',289),
  ('lista -> CORCHETE_APERTURA CORCHETE_CLAUSURA','lista',2,'p_lista','analisis_sintactico.py',290),
  ('lista -> TIPO_LIST PARENTESIS_APERTURA DATO_ENTERO PARENTESIS_CLAUSURA','lista',4,'p_lista','analisis_sintactico.py',291),
  ('lista -> NEW TIPO_LIST CORCHETE_APERTURA CORCHETE_CLAUSURA','lista',4,'p_lista','analisis_sintactico.py',292),
  ('lista -> NEW TIPO_LIST CORCHETE_APERTURA DATO_ENTERO CORCHETE_CLAUSURA','lista',5,'p_lista','analisis_sintactico.py',293),
  ('lista_general -> valor_general','lista_general',1,'p_lista_general','analisis_sintactico.py',296),
  ('lista_general -> valor_general COMA lista_general','lista_general',3,'p_lista_general','analisis_sintactico.py',297),
  ('lista_numeros -> DATO_ENTERO','lista_numeros',1,'p_lista_numeros','analisis_sintactico.py',300),
  ('lista_numeros -> DATO_ENTERO COMA lista_numeros','lista_numeros',3,'p_lista_numeros','analisis_sintactico.py',301),
  ('lista_dobles -> DATO_DOBLE','lista_dobles',1,'p_lista_dobles','analisis_sintactico.py',304),
  ('lista_dobles -> DATO_DOBLE COMA lista_dobles','lista_dobles',3,'p_lista_dobles','analisis_sintactico.py',305),
  ('lista_cadenas -> DATO_CADENA_TEXTO','lista_cadenas',1,'p_lista_cadenas','analisis_sintactico.py',308),
  ('lista_cadenas -> DATO_CADENA_TEXTO COMA lista_cadenas','lista_cadenas',3,'p_lista_cadenas','analisis_sintactico.py',309),
  ('conjunto_especifico -> cast_int LLAVE_APERTURA lista_numeros LLAVE_CLAUSURA','conjunto_especifico',4,'p_conjunto_especifico','analisis_sintactico.py',313),
  ('conjunto_especifico -> cast_double LLAVE_APERTURA lista_dobles LLAVE_CLAUSURA','conjunto_especifico',4,'p_conjunto_especifico','analisis_sintactico.py',314),
  ('conjunto_especifico -> cast_string LLAVE_APERTURA lista_cadenas LLAVE_CLAUSURA','conjunto_especifico',4,'p_conjunto_especifico','analisis_sintactico.py',315),
  ('cast_int -> SIGNO_MENOR_QUE TIPO_INT SIGNO_MAYOR_QUE','cast_int',3,'p_cast_int','analisis_sintactico.py',318),
  ('cast_double -> SIGNO_MENOR_QUE TIPO_DOUBLE SIGNO_MAYOR_QUE','cast_double',3,'p_cast_double','analisis_sintactico.py',321),
  ('cast_string -> SIGNO_MENOR_QUE TIPO_STRING SIGNO_MAYOR_QUE','cast_string',3,'p_cast_string','analisis_sintactico.py',324),
  ('funcion -> MAIN PARENTESIS_APERTURA PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA','funcion',6,'p_funcion','analisis_sintactico.py',328),
  ('funcion -> VOID IDENTIFICADOR PARENTESIS_APERTURA PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA','funcion',7,'p_funcion','analisis_sintactico.py',329),
  ('funcion -> declaracion_general PARENTESIS_APERTURA PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA','funcion',6,'p_funcion','analisis_sintactico.py',330),
  ('funcion -> VOID IDENTIFICADOR PARENTESIS_APERTURA parametros PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA','funcion',8,'p_funcion','analisis_sintactico.py',331),
  ('funcion -> declaracion_general PARENTESIS_APERTURA parametros PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA','funcion',7,'p_funcion','analisis_sintactico.py',332),
  ('funcion -> VOID IDENTIFICADOR funcion_flecha','funcion',3,'p_funcion','analisis_sintactico.py',333),
  ('funcion -> declaracion_general funcion_flecha','funcion',2,'p_funcion','analisis_sintactico.py',334),
  ('funcion_flecha -> PARENTESIS_APERTURA PARENTESIS_CLAUSURA SIGNO_IGUAL SIGNO_MAYOR_QUE item_funcion','funcion_flecha',5,'p_funcion_flecha','analisis_sintactico.py',337),
  ('funcion_flecha -> PARENTESIS_APERTURA parametros PARENTESIS_CLAUSURA SIGNO_IGUAL SIGNO_MAYOR_QUE item_funcion','funcion_flecha',6,'p_funcion_flecha','analisis_sintactico.py',338),
  ('parametros -> declaracion_general','parametros',1,'p_parametros','analisis_sintactico.py',341),
  ('parametros -> declaracion_general COMA parametros','parametros',3,'p_parametros','analisis_sintactico.py',342),
  ('items_funcion -> item_funcion items_funcion','items_funcion',2,'p_items_funcion','analisis_sintactico.py',345),
  ('items_funcion -> item_funcion','items_funcion',1,'p_items_funcion','analisis_sintactico.py',346),
  ('item_funcion -> instruccion','item_funcion',1,'p_item_funcion','analisis_sintactico.py',349),
  ('item_funcion -> instruccion_if','item_funcion',1,'p_item_funcion','analisis_sintactico.py',350),
  ('item_funcion -> llamadas_func PUNTO_COMA','item_funcion',2,'p_item_funcion','analisis_sintactico.py',351),
  ('item_funcion -> instruccion_while','item_funcion',1,'p_item_funcion','analisis_sintactico.py',352),
  ('item_funcion -> instruccion_for','item_funcion',1,'p_item_funcion','analisis_sintactico.py',353),
  ('item_funcion -> instruccion_switch','item_funcion',1,'p_item_funcion','analisis_sintactico.py',354),
  ('item_funcion -> inst_return','item_funcion',1,'p_item_funcion','analisis_sintactico.py',355),
  ('inst_return -> RETURN valor_general PUNTO_COMA','inst_return',3,'p_inst_return','analisis_sintactico.py',358),
]
