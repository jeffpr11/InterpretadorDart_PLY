
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaABSTRACT ACENTO_AGUDO ACENTO_GRAVE ARROBA AS ASSERT ASYNC AWAIT BARRA_INVERTIDA BREAK CASE CATCH CLASS COMA COMENTARIO COMILLA_DOBLE COMILLA_SIMPLE CONST CONTINUE CORCHETE_APERTURA CORCHETE_CLAUSURA COVARIANT DATO_CADENA_TEXTO DATO_DOBLE DATO_ENTERO DEFAULT DEFERRED DO DOBLE_PUNTO DYNAMIC ELSE ENUM ET EXPORT EXTENDS EXTERNAL FACTORY FALSE FINAL FINALLY FOR FUNCTION GET HIDE IDENTIFICADOR IF IMPLEMENTS IMPORT IN INTERFACE IS LIBRARY LLAVE_APERTURA LLAVE_CLAUSURA MAIN MIXIN NEW NULL NUMERAL ON OPERATOR PARENTESIS_APERTURA PARENTESIS_CLAUSURA PART PLECA PORCENTAJE PUNTO PUNTO_COMA RETHROW RETURN SET SHOW SIGNO_ADMIRACION_APERTURA SIGNO_ADMIRACION_CLAUSURA SIGNO_DIVISION SIGNO_IGUAL SIGNO_INTERROGACION_APERTURA SIGNO_INTERROGACION_CLAUSURA SIGNO_MAS SIGNO_MAYOR_QUE SIGNO_MENOR_QUE SIGNO_MENOS SIGNO_MULTIPLICACION STATIC SUPER SWITCH THIS THROW TIPO_BOOL TIPO_DOUBLE TIPO_FUTURE TIPO_INT TIPO_ITERABLE TIPO_LIST TIPO_MAP TIPO_NEVER TIPO_OBJECT TIPO_RUNE TIPO_SET TIPO_STREAM TIPO_STRING TIPO_SYMBOL TRUE TRY TYPEDEF VAR VIRGULILLA VOID WHILE WITH YIELDprograma : item_programa programa\n                | item_programaitem_programa : instruccion\n                    | clase\n                    | ABSTRACT clase\n                    | funcion\n                    | instruccion_if\n                    | instruccion_while\n                    | instruccion_for\n                    | importimport : IMPORT DATO_CADENA_TEXTO AS IDENTIFICADOR PUNTO_COMA\n                | IMPORT DATO_CADENA_TEXTO PUNTO_COMAinstruccion : asignacion\n                    | FINAL asignacion\n                    | declaracion\n                    | operacion_unitaria PUNTO_COMAoperacion_unitaria : IDENTIFICADOR SIGNO_MAS SIGNO_MAS\n                        | IDENTIFICADOR SIGNO_MENOS SIGNO_MENOS\n                        | SIGNO_MAS SIGNO_MAS IDENTIFICADOR\n                        | SIGNO_MENOS SIGNO_MENOS IDENTIFICADORinstruccion_while : WHILE PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURAinstruccion_for : FOR PARENTESIS_APERTURA condicion_for PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURAcondicion_for : TIPO_INT IDENTIFICADOR IN IDENTIFICADOR\n                    | condicion_for_inicial PUNTO_COMA condicion_for_terminacion PUNTO_COMA condicion_for_pasocondicion_for_inicial : TIPO_INT IDENTIFICADOR SIGNO_IGUAL IDENTIFICADOR\n                            | TIPO_INT IDENTIFICADOR SIGNO_IGUAL DATO_ENTEROcondicion_for_terminacion : IDENTIFICADOR SIGNO_MENOR_QUE DATO_ENTERO\n                                | IDENTIFICADOR SIGNO_MAYOR_QUE DATO_ENTERO\n                                | IDENTIFICADOR SIGNO_MENOR_QUE SIGNO_IGUAL DATO_ENTERO\n                                | IDENTIFICADOR SIGNO_MAYOR_QUE SIGNO_IGUAL DATO_ENTERO\n                                | IDENTIFICADOR SIGNO_IGUAL SIGNO_IGUAL DATO_ENTERO\n                                | IDENTIFICADOR SIGNO_ADMIRACION_APERTURA SIGNO_IGUAL DATO_ENTEROcondicion_for_paso : operacion_unitariainstruccion_switch : SWITCH PARENTESIS_APERTURA IDENTIFICADOR PARENTESIS_CLAUSURA LLAVE_APERTURA bloque_switch LLAVE_CLAUSURAbloque_switch : instrucciones_case instruccion_default\n                    | instrucciones_caseinstrucciones_case : instruccion_case instrucciones_case\n                            | instruccion_caseinstruccion_case : CASE valor_general DOBLE_PUNTO LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA BREAK PUNTO_COMA\n                        | CASE valor_general DOBLE_PUNTO instruccion BREAK PUNTO_COMA\n                        | CASE valor_general DOBLE_PUNTO llamadas_func PUNTO_COMA BREAK PUNTO_COMAinstruccion_default : DEFAULT DOBLE_PUNTO LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA BREAK PUNTO_COMA\n                            | DEFAULT DOBLE_PUNTO instruccion BREAK PUNTO_COMA\n                            | DEFAULT DOBLE_PUNTO llamadas_func PUNTO_COMA BREAK PUNTO_COMAinstruccion_if : IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA\n                    | IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA instruccion_elseinstruccion_else : ELSE IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA instruccion_else\n                        | ELSE IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA\n                        | ELSE LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURAitems_estructura_control : item_estructura_control items_estructura_control\n                                | item_estructura_controlitem_estructura_control : instruccion\n                                | llamadas_func PUNTO_COMA\n                                | instruccion_if\n                                | instruccion_while\n                                | instruccion_forclase : CLASS IDENTIFICADOR LLAVE_APERTURA bloque_clase LLAVE_CLAUSURAbloque_clase : item_bloque_clase bloque_clase\n                    | item_bloque_claseitem_bloque_clase : instruccion\n                        | funcionnuevo_objeto : NEW IDENTIFICADOR PARENTESIS_APERTURA PARENTESIS_CLAUSURAllamadas_func : IDENTIFICADOR PUNTO llamadas_func\n                    | llamada_func PUNTO llamadas_func\n                    | llamada_funcllamada_func : IDENTIFICADOR PARENTESIS_APERTURA params PARENTESIS_CLAUSURA\n                    | IDENTIFICADOR PARENTESIS_APERTURA PARENTESIS_CLAUSURAparams : valor_general COMA params\n                | valor_generaldeclaracion_general : tipos_declaracion IDENTIFICADOR\n                            | TIPO_MAP IDENTIFICADOR\n                            | TIPO_LIST IDENTIFICADOR\n                            | VAR IDENTIFICADOR\n                            | DYNAMIC IDENTIFICADOR\n                            | TIPO_BOOL IDENTIFICADOR\n                            | TIPO_DOUBLE IDENTIFICADOR\n                            | TIPO_INT IDENTIFICADOR\n                            | TIPO_STRING IDENTIFICADORtipos_declaracion : TIPO_SET\n                        | TIPO_SYMBOL\n                        | TIPO_OBJECT\n                        | TIPO_FUTURE\n                        | TIPO_STREAM\n                        | TIPO_ITERABLE\n                        | TIPO_NEVERdeclaracion : declaracion_general PUNTO_COMAasignacion : asignacion_int\n                | asignacion_double\n                | TIPO_BOOL IDENTIFICADOR SIGNO_IGUAL expresion_logica PUNTO_COMA\n                | TIPO_STRING IDENTIFICADOR SIGNO_IGUAL DATO_CADENA_TEXTO PUNTO_COMA\n                | VAR IDENTIFICADOR SIGNO_IGUAL valor_general PUNTO_COMA\n                | DYNAMIC IDENTIFICADOR SIGNO_IGUAL valor_general PUNTO_COMA\n                | IDENTIFICADOR SIGNO_IGUAL valor_general PUNTO_COMA\n                | IDENTIFICADOR SIGNO_MAS SIGNO_IGUAL expresion_mat_double PUNTO_COMA\n                | IDENTIFICADOR SIGNO_MENOS SIGNO_IGUAL expresion_mat_double PUNTO_COMA\n                | TIPO_MAP IDENTIFICADOR SIGNO_IGUAL bloque_mapa PUNTO_COMA\n                | valor_mapa_lista SIGNO_IGUAL valor_general PUNTO_COMA\n                | TIPO_LIST IDENTIFICADOR SIGNO_IGUAL lista PUNTO_COMA\n                | TIPO_LIST SIGNO_MENOR_QUE IDENTIFICADOR SIGNO_MAYOR_QUE IDENTIFICADOR SIGNO_IGUAL lista PUNTO_COMA\n                | VAR IDENTIFICADOR SIGNO_IGUAL lista PUNTO_COMA\n                | VAR IDENTIFICADOR SIGNO_IGUAL conjunto_especifico PUNTO_COMA\n                | TIPO_SET cast_int IDENTIFICADOR SIGNO_IGUAL LLAVE_APERTURA lista_numeros LLAVE_CLAUSURA PUNTO_COMA\n                | TIPO_SET cast_double IDENTIFICADOR SIGNO_IGUAL LLAVE_APERTURA lista_dobles LLAVE_CLAUSURA PUNTO_COMA\n                | TIPO_SET cast_string IDENTIFICADOR SIGNO_IGUAL LLAVE_APERTURA lista_cadenas LLAVE_CLAUSURA PUNTO_COMAasignacion_int : TIPO_INT IDENTIFICADOR SIGNO_IGUAL expresion_mat_int PUNTO_COMAasignacion_double : TIPO_DOUBLE IDENTIFICADOR SIGNO_IGUAL expresion_mat_double PUNTO_COMAbloque_mapa : LLAVE_APERTURA pares_llave_valor LLAVE_CLAUSURA\n                    | LLAVE_APERTURA LLAVE_CLAUSURA\n                    | NEW TIPO_MAP PARENTESIS_APERTURA PARENTESIS_CLAUSURApares_llave_valor : par_llave_valor COMA pares_llave_valor\n                        | par_llave_valorpar_llave_valor : valor_general DOBLE_PUNTO valor_generalvalor_general : expresion_mat_double\n                    | expresion_logica\n                    | DATO_CADENA_TEXTO\n                    | llamadas_func\n                    | nuevo_objeto\n                    | NULLvalor_mapa_lista : IDENTIFICADOR CORCHETE_APERTURA valor_general CORCHETE_CLAUSURAexpresion_mat_int : expresion_int_no_menos\n                    | SIGNO_MENOS expresion_int_no_menosexpresion_int_no_menos : expresion_int_no_menos SIGNO_MAS expresion_int_no_menos\n                    | expresion_int_no_menos SIGNO_MENOS expresion_int_no_menos\n                    | expresion_int_no_menos SIGNO_MULTIPLICACION expresion_int_no_menos\n                    | expresion_int_no_menos PORCENTAJE expresion_int_no_menos\n                    | expresion_int_no_menos VIRGULILLA SIGNO_DIVISION expresion_int_no_menos\n                    | PARENTESIS_APERTURA expresion_int_no_menos PARENTESIS_CLAUSURA\n                    | DATO_ENTERO\n                    | IDENTIFICADORexpresion_mat_double : expresion_double_no_menos\n                    | SIGNO_MENOS expresion_double_no_menosexpresion_double_no_menos : expresion_double_no_menos SIGNO_MAS expresion_double_no_menos\n                    | expresion_double_no_menos SIGNO_MENOS expresion_double_no_menos\n                    | expresion_double_no_menos SIGNO_MULTIPLICACION expresion_double_no_menos\n                    | expresion_double_no_menos PORCENTAJE expresion_double_no_menos\n                    | expresion_double_no_menos SIGNO_DIVISION expresion_double_no_menos\n                    | PARENTESIS_APERTURA expresion_double_no_menos PARENTESIS_CLAUSURA\n                    | DATO_DOBLE\n                    | DATO_ENTERO\n                    | IDENTIFICADORexpresion_logica : expresion_logica PLECA PLECA expresion_logica\n                        | expresion_logica ET ET expresion_logica\n                        | PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA\n                        | SIGNO_ADMIRACION_APERTURA expresion_logica\n                        | comparacion\n                        | TRUE\n                        | FALSE\n                        | IDENTIFICADORcomparacion : expresion_mat_double SIGNO_MENOR_QUE expresion_mat_double\n                | expresion_mat_double SIGNO_MAYOR_QUE expresion_mat_double\n                | expresion_mat_double SIGNO_MENOR_QUE SIGNO_IGUAL expresion_mat_double\n                | expresion_mat_double SIGNO_MAYOR_QUE SIGNO_IGUAL expresion_mat_double\n                | expresion_mat_double SIGNO_IGUAL SIGNO_IGUAL expresion_mat_double\n                | expresion_mat_double SIGNO_ADMIRACION_APERTURA SIGNO_IGUAL expresion_mat_doublelista : CORCHETE_APERTURA lista_general CORCHETE_CLAUSURA\n                | CORCHETE_APERTURA CORCHETE_CLAUSURA\n                | TIPO_LIST PARENTESIS_APERTURA DATO_ENTERO PARENTESIS_CLAUSURA\n                | NEW TIPO_LIST CORCHETE_APERTURA CORCHETE_CLAUSURA\n                | NEW TIPO_LIST CORCHETE_APERTURA DATO_ENTERO CORCHETE_CLAUSURAlista_general : valor_general \n                        | valor_general COMA lista_generallista_numeros : DATO_ENTERO \n                        | DATO_ENTERO COMA lista_numeroslista_dobles : DATO_DOBLE \n                        | DATO_DOBLE COMA lista_dobleslista_cadenas : DATO_CADENA_TEXTO \n                        | DATO_CADENA_TEXTO COMA lista_cadenasconjunto_especifico : cast_int LLAVE_APERTURA lista_numeros LLAVE_CLAUSURA\n                            | cast_double LLAVE_APERTURA lista_dobles LLAVE_CLAUSURA\n                            | cast_string LLAVE_APERTURA lista_cadenas LLAVE_CLAUSURAcast_int : SIGNO_MENOR_QUE TIPO_INT SIGNO_MAYOR_QUEcast_double : SIGNO_MENOR_QUE TIPO_DOUBLE SIGNO_MAYOR_QUEcast_string : SIGNO_MENOR_QUE TIPO_STRING SIGNO_MAYOR_QUEfuncion : MAIN PARENTESIS_APERTURA PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA\n                | VOID IDENTIFICADOR PARENTESIS_APERTURA PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA\n                | declaracion_general PARENTESIS_APERTURA PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA\n                | VOID IDENTIFICADOR PARENTESIS_APERTURA parametros PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA\n                | declaracion_general PARENTESIS_APERTURA parametros PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA\n                | VOID IDENTIFICADOR funcion_flecha\n                | declaracion_general funcion_flechafuncion_flecha : PARENTESIS_APERTURA PARENTESIS_CLAUSURA SIGNO_IGUAL SIGNO_MAYOR_QUE item_funcion\n                      | PARENTESIS_APERTURA parametros PARENTESIS_CLAUSURA SIGNO_IGUAL SIGNO_MAYOR_QUE item_funcionparametros : declaracion_general\n                    | declaracion_general COMA parametrositems_funcion : item_funcion items_funcion\n                    | item_funcionitem_funcion : instruccion\n                    | instruccion_if\n                    | llamadas_func PUNTO_COMA\n                    | instruccion_while\n                    | instruccion_for\n                    | instruccion_switch\n                    | inst_returninst_return : RETURN valor_general PUNTO_COMA'
    
_lr_action_items = {'ABSTRACT':([0,2,3,4,6,7,8,9,10,11,13,24,25,46,47,58,67,68,127,148,173,232,249,274,275,278,279,281,282,283,284,305,306,307,308,309,310,319,320,326,331,332,349,351,358,359,405,406,408,409,410,413,414,443,444,456,457,458,459,469,475,499,504,],[5,5,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-5,-14,-16,-180,-86,-179,-12,-93,-97,-57,-94,-95,-187,-188,-190,-191,-192,-193,-11,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,-174,-189,-176,-181,-194,-175,-178,-182,-45,-21,-22,-177,-46,-99,-102,-103,-104,-34,-49,-48,-47,]),'FINAL':([0,2,3,4,6,7,8,9,10,11,13,24,25,46,47,58,67,68,100,127,148,168,169,170,173,196,200,232,249,274,275,277,278,279,281,282,283,284,291,295,296,298,299,300,305,306,307,308,309,310,319,320,326,331,332,349,351,357,358,359,361,363,364,366,367,368,405,406,408,409,410,412,413,414,443,444,456,457,458,459,462,469,475,476,477,479,482,485,499,504,],[12,12,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-5,-14,-16,-180,-86,12,-179,-12,12,-60,-61,-93,12,12,-97,-57,-94,-95,12,-187,-188,-190,-191,-192,-193,12,12,12,12,12,12,-11,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,-174,-189,12,-176,-181,12,12,-52,-54,-55,-56,-194,-175,-178,-182,-45,-53,-21,-22,-177,-46,-99,-102,-103,-104,12,-34,-49,12,12,12,12,12,-48,-47,]),'CLASS':([0,2,3,4,5,6,7,8,9,10,11,13,24,25,46,47,58,67,68,127,148,173,232,249,274,275,278,279,281,282,283,284,305,306,307,308,309,310,319,320,326,331,332,349,351,358,359,405,406,408,409,410,413,414,443,444,456,457,458,459,469,475,499,504,],[15,15,-3,-4,15,-6,-7,-8,-9,-10,-13,-15,-87,-88,-5,-14,-16,-180,-86,-179,-12,-93,-97,-57,-94,-95,-187,-188,-190,-191,-192,-193,-11,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,-174,-189,-176,-181,-194,-175,-178,-182,-45,-21,-22,-177,-46,-99,-102,-103,-104,-34,-49,-48,-47,]),'MAIN':([0,2,3,4,6,7,8,9,10,11,13,24,25,46,47,58,67,68,100,127,148,168,169,170,173,232,249,274,275,278,279,281,282,283,284,305,306,307,308,309,310,319,320,326,331,332,349,351,358,359,405,406,408,409,410,413,414,443,444,456,457,458,459,469,475,499,504,],[17,17,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-5,-14,-16,-180,-86,17,-179,-12,17,-60,-61,-93,-97,-57,-94,-95,-187,-188,-190,-191,-192,-193,-11,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,-174,-189,-176,-181,-194,-175,-178,-182,-45,-21,-22,-177,-46,-99,-102,-103,-104,-34,-49,-48,-47,]),'VOID':([0,2,3,4,6,7,8,9,10,11,13,24,25,46,47,58,67,68,100,127,148,168,169,170,173,232,249,274,275,278,279,281,282,283,284,305,306,307,308,309,310,319,320,326,331,332,349,351,358,359,405,406,408,409,410,413,414,443,444,456,457,458,459,469,475,499,504,],[18,18,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-5,-14,-16,-180,-86,18,-179,-12,18,-60,-61,-93,-97,-57,-94,-95,-187,-188,-190,-191,-192,-193,-11,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,-174,-189,-176,-181,-194,-175,-178,-182,-45,-21,-22,-177,-46,-99,-102,-103,-104,-34,-49,-48,-47,]),'IF':([0,2,3,4,6,7,8,9,10,11,13,24,25,46,47,58,67,68,127,148,173,196,200,232,249,274,275,277,278,279,281,282,283,284,291,295,296,298,299,300,305,306,307,308,309,310,319,320,326,331,332,349,351,357,358,359,361,363,364,366,367,368,405,406,408,409,410,412,413,414,443,444,445,456,457,458,459,462,469,475,479,482,485,499,504,],[20,20,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-5,-14,-16,-180,-86,-179,-12,-93,20,20,-97,-57,-94,-95,20,-187,-188,-190,-191,-192,-193,20,20,20,20,20,20,-11,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,-174,-189,20,-176,-181,20,20,-52,-54,-55,-56,-194,-175,-178,-182,-45,-53,-21,-22,-177,-46,461,-99,-102,-103,-104,20,-34,-49,20,20,20,-48,-47,]),'WHILE':([0,2,3,4,6,7,8,9,10,11,13,24,25,46,47,58,67,68,127,148,173,196,200,232,249,274,275,277,278,279,281,282,283,284,291,295,296,298,299,300,305,306,307,308,309,310,319,320,326,331,332,349,351,357,358,359,361,363,364,366,367,368,405,406,408,409,410,412,413,414,443,444,456,457,458,459,462,469,475,479,482,485,499,504,],[21,21,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-5,-14,-16,-180,-86,-179,-12,-93,21,21,-97,-57,-94,-95,21,-187,-188,-190,-191,-192,-193,21,21,21,21,21,21,-11,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,-174,-189,21,-176,-181,21,21,-52,-54,-55,-56,-194,-175,-178,-182,-45,-53,-21,-22,-177,-46,-99,-102,-103,-104,21,-34,-49,21,21,21,-48,-47,]),'FOR':([0,2,3,4,6,7,8,9,10,11,13,24,25,46,47,58,67,68,127,148,173,196,200,232,249,274,275,277,278,279,281,282,283,284,291,295,296,298,299,300,305,306,307,308,309,310,319,320,326,331,332,349,351,357,358,359,361,363,364,366,367,368,405,406,408,409,410,412,413,414,443,444,456,457,458,459,462,469,475,479,482,485,499,504,],[22,22,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-5,-14,-16,-180,-86,-179,-12,-93,22,22,-97,-57,-94,-95,22,-187,-188,-190,-191,-192,-193,22,22,22,22,22,22,-11,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,-174,-189,22,-176,-181,22,22,-52,-54,-55,-56,-194,-175,-178,-182,-45,-53,-21,-22,-177,-46,-99,-102,-103,-104,22,-34,-49,22,22,22,-48,-47,]),'IMPORT':([0,2,3,4,6,7,8,9,10,11,13,24,25,46,47,58,67,68,127,148,173,232,249,274,275,278,279,281,282,283,284,305,306,307,308,309,310,319,320,326,331,332,349,351,358,359,405,406,408,409,410,413,414,443,444,456,457,458,459,469,475,499,504,],[23,23,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-5,-14,-16,-180,-86,-179,-12,-93,-97,-57,-94,-95,-187,-188,-190,-191,-192,-193,-11,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,-174,-189,-176,-181,-194,-175,-178,-182,-45,-21,-22,-177,-46,-99,-102,-103,-104,-34,-49,-48,-47,]),'TIPO_BOOL':([0,2,3,4,6,7,8,9,10,11,12,13,24,25,46,47,58,66,67,68,100,126,127,148,168,169,170,173,196,199,200,232,249,274,275,277,278,279,281,282,283,284,291,295,296,298,299,300,305,306,307,308,309,310,319,320,326,331,332,349,351,357,358,359,361,363,364,366,367,368,405,406,408,409,410,412,413,414,443,444,456,457,458,459,462,469,475,476,477,479,482,485,499,504,],[26,26,-3,-4,-6,-7,-8,-9,-10,-13,48,-15,-87,-88,-5,-14,-16,135,-180,-86,26,135,-179,-12,26,-60,-61,-93,26,135,26,-97,-57,-94,-95,26,-187,-188,-190,-191,-192,-193,26,26,26,26,26,26,-11,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,-174,-189,26,-176,-181,26,26,-52,-54,-55,-56,-194,-175,-178,-182,-45,-53,-21,-22,-177,-46,-99,-102,-103,-104,26,-34,-49,26,26,26,26,26,-48,-47,]),'TIPO_STRING':([0,2,3,4,6,7,8,9,10,11,12,13,24,25,46,47,58,66,67,68,86,100,126,127,148,168,169,170,173,196,199,200,232,249,274,275,277,278,279,281,282,283,284,291,295,296,298,299,300,305,306,307,308,309,310,319,320,326,331,332,349,351,357,358,359,361,363,364,366,367,368,405,406,408,409,410,412,413,414,443,444,456,457,458,459,462,469,475,476,477,479,482,485,499,504,],[27,27,-3,-4,-6,-7,-8,-9,-10,-13,50,-15,-87,-88,-5,-14,-16,138,-180,-86,164,27,138,-179,-12,27,-60,-61,-93,27,138,27,-97,-57,-94,-95,27,-187,-188,-190,-191,-192,-193,27,27,27,27,27,27,-11,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,-174,-189,27,-176,-181,27,27,-52,-54,-55,-56,-194,-175,-178,-182,-45,-53,-21,-22,-177,-46,-99,-102,-103,-104,27,-34,-49,27,27,27,27,27,-48,-47,]),'VAR':([0,2,3,4,6,7,8,9,10,11,12,13,24,25,46,47,58,66,67,68,100,126,127,148,168,169,170,173,196,199,200,232,249,274,275,277,278,279,281,282,283,284,291,295,296,298,299,300,305,306,307,308,309,310,319,320,326,331,332,349,351,357,358,359,361,363,364,366,367,368,405,406,408,409,410,412,413,414,443,444,456,457,458,459,462,469,475,476,477,479,482,485,499,504,],[28,28,-3,-4,-6,-7,-8,-9,-10,-13,51,-15,-87,-88,-5,-14,-16,133,-180,-86,28,133,-179,-12,28,-60,-61,-93,28,133,28,-97,-57,-94,-95,28,-187,-188,-190,-191,-192,-193,28,28,28,28,28,28,-11,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,-174,-189,28,-176,-181,28,28,-52,-54,-55,-56,-194,-175,-178,-182,-45,-53,-21,-22,-177,-46,-99,-102,-103,-104,28,-34,-49,28,28,28,28,28,-48,-47,]),'DYNAMIC':([0,2,3,4,6,7,8,9,10,11,12,13,24,25,46,47,58,66,67,68,100,126,127,148,168,169,170,173,196,199,200,232,249,274,275,277,278,279,281,282,283,284,291,295,296,298,299,300,305,306,307,308,309,310,319,320,326,331,332,349,351,357,358,359,361,363,364,366,367,368,405,406,408,409,410,412,413,414,443,444,456,457,458,459,462,469,475,476,477,479,482,485,499,504,],[29,29,-3,-4,-6,-7,-8,-9,-10,-13,52,-15,-87,-88,-5,-14,-16,134,-180,-86,29,134,-179,-12,29,-60,-61,-93,29,134,29,-97,-57,-94,-95,29,-187,-188,-190,-191,-192,-193,29,29,29,29,29,29,-11,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,-174,-189,29,-176,-181,29,29,-52,-54,-55,-56,-194,-175,-178,-182,-45,-53,-21,-22,-177,-46,-99,-102,-103,-104,29,-34,-49,29,29,29,29,29,-48,-47,]),'IDENTIFICADOR':([0,2,3,4,6,7,8,9,10,11,12,13,15,18,24,25,26,27,28,29,32,34,35,36,37,38,39,40,41,42,43,44,46,47,48,50,51,52,53,54,56,57,58,60,63,67,68,69,70,77,78,80,82,83,84,85,100,110,111,112,117,121,123,127,131,132,133,134,135,136,137,138,139,145,147,148,149,151,152,165,166,168,169,170,171,172,173,174,175,180,181,182,183,184,186,191,196,200,215,222,224,230,232,235,239,240,241,246,247,249,257,259,260,261,262,263,274,275,277,278,279,281,282,283,284,287,289,290,291,295,296,298,299,300,301,302,305,306,307,308,309,310,319,320,326,331,332,333,334,335,336,341,349,351,352,357,358,359,361,363,364,366,367,368,374,380,390,391,401,405,406,408,409,410,412,413,414,443,444,456,457,458,459,462,466,467,469,475,476,477,479,482,485,499,504,],[16,16,-3,-4,-6,-7,-8,-9,-10,-13,49,-15,59,65,-87,-88,73,74,75,76,79,81,-79,87,88,89,-80,-81,-82,-83,-84,-85,-5,-14,90,93,94,95,96,97,98,99,-16,101,101,-180,-86,141,141,153,154,101,158,159,160,161,16,187,141,141,192,187,187,-179,203,204,205,206,207,208,209,210,-79,214,216,-12,141,101,101,187,243,16,-60,-61,251,101,-93,187,187,187,187,187,187,187,187,251,285,285,304,101,192,101,-97,327,-171,-172,-173,243,243,-57,187,187,187,187,141,141,-94,-95,285,-187,-188,-190,-191,-192,-193,101,354,355,285,285,285,285,285,285,371,372,-11,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,243,243,243,243,101,-174,-189,404,285,-176,-181,285,285,-52,-54,-55,-56,417,101,101,101,243,-194,-175,-178,-182,-45,-53,-21,-22,-177,-46,-99,-102,-103,-104,285,101,141,-34,-49,285,285,285,285,285,-48,-47,]),'TIPO_MAP':([0,2,3,4,6,7,8,9,10,11,12,13,24,25,46,47,58,66,67,68,100,126,127,148,168,169,170,173,196,199,200,231,232,249,274,275,277,278,279,281,282,283,284,291,295,296,298,299,300,305,306,307,308,309,310,319,320,326,331,332,349,351,357,358,359,361,363,364,366,367,368,405,406,408,409,410,412,413,414,443,444,456,457,458,459,462,469,475,476,477,479,482,485,499,504,],[32,32,-3,-4,-6,-7,-8,-9,-10,-13,53,-15,-87,-88,-5,-14,-16,131,-180,-86,32,131,-179,-12,32,-60,-61,-93,32,131,32,325,-97,-57,-94,-95,32,-187,-188,-190,-191,-192,-193,32,32,32,32,32,32,-11,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,-174,-189,32,-176,-181,32,32,-52,-54,-55,-56,-194,-175,-178,-182,-45,-53,-21,-22,-177,-46,-99,-102,-103,-104,32,-34,-49,32,32,32,32,32,-48,-47,]),'TIPO_LIST':([0,2,3,4,6,7,8,9,10,11,12,13,24,25,46,47,58,66,67,68,100,126,127,148,151,157,168,169,170,173,196,199,200,224,232,234,249,274,275,277,278,279,281,282,283,284,291,295,296,298,299,300,305,306,307,308,309,310,319,320,326,331,332,349,351,357,358,359,361,363,364,366,367,368,393,405,406,408,409,410,412,413,414,443,444,456,457,458,459,462,469,475,476,477,479,482,485,499,504,],[34,34,-3,-4,-6,-7,-8,-9,-10,-13,54,-15,-87,-88,-5,-14,-16,132,-180,-86,34,132,-179,-12,223,223,34,-60,-61,-93,34,132,34,315,-97,315,-57,-94,-95,34,-187,-188,-190,-191,-192,-193,34,34,34,34,34,34,-11,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,-174,-189,34,-176,-181,34,34,-52,-54,-55,-56,223,-194,-175,-178,-182,-45,-53,-21,-22,-177,-46,-99,-102,-103,-104,34,-34,-49,34,34,34,34,34,-48,-47,]),'TIPO_SET':([0,2,3,4,6,7,8,9,10,11,12,13,24,25,46,47,58,66,67,68,100,126,127,148,168,169,170,173,196,199,200,232,249,274,275,277,278,279,281,282,283,284,291,295,296,298,299,300,305,306,307,308,309,310,319,320,326,331,332,349,351,357,358,359,361,363,364,366,367,368,405,406,408,409,410,412,413,414,443,444,456,457,458,459,462,469,475,476,477,479,482,485,499,504,],[35,35,-3,-4,-6,-7,-8,-9,-10,-13,55,-15,-87,-88,-5,-14,-16,139,-180,-86,35,139,-179,-12,35,-60,-61,-93,35,139,35,-97,-57,-94,-95,35,-187,-188,-190,-191,-192,-193,35,35,35,35,35,35,-11,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,-174,-189,35,-176,-181,35,35,-52,-54,-55,-56,-194,-175,-178,-182,-45,-53,-21,-22,-177,-46,-99,-102,-103,-104,35,-34,-49,35,35,35,35,35,-48,-47,]),'SIGNO_MAS':([0,2,3,4,6,7,8,9,10,11,13,16,24,25,30,46,47,49,58,61,67,68,100,101,109,118,119,127,141,148,168,169,170,173,185,187,189,196,200,232,243,245,248,249,264,265,266,267,268,269,271,274,275,277,278,279,281,282,283,284,285,291,295,296,298,299,300,305,306,307,308,309,310,319,320,326,331,332,338,339,349,351,357,358,359,361,363,364,366,367,368,374,397,398,399,400,402,405,406,408,409,410,412,413,414,417,441,443,444,446,456,457,458,459,462,469,475,476,477,479,482,485,499,504,],[30,30,-3,-4,-6,-7,-8,-9,-10,-13,-15,61,-87,-88,77,-5,-14,91,-16,120,-180,-86,30,-140,180,-138,-139,-179,-140,-12,30,-60,-61,-93,180,-140,180,30,30,-97,-129,333,-128,-57,180,180,180,180,180,180,-137,-94,-95,30,-187,-188,-190,-191,-192,-193,61,30,30,30,30,30,30,-11,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,333,333,-174,-189,30,-176,-181,30,30,-52,-54,-55,-56,30,333,333,333,333,-127,-194,-175,-178,-182,-45,-53,-21,-22,446,333,-177,-46,120,-99,-102,-103,-104,30,-34,-49,30,30,30,30,30,-48,-47,]),'SIGNO_MENOS':([0,2,3,4,6,7,8,9,10,11,13,16,24,25,31,46,47,49,58,60,62,63,67,68,69,70,80,100,101,109,111,112,118,119,121,123,127,141,148,149,151,152,165,166,168,169,170,172,173,174,175,185,187,189,196,200,222,230,232,243,245,248,249,257,259,260,261,262,263,264,265,266,267,268,269,271,274,275,277,278,279,281,282,283,284,285,287,291,295,296,298,299,300,305,306,307,308,309,310,319,320,326,331,332,338,339,341,349,351,357,358,359,361,363,364,366,367,368,374,380,390,391,397,398,399,400,402,405,406,408,409,410,412,413,414,417,441,443,444,447,456,457,458,459,462,466,467,469,475,476,477,479,482,485,499,504,],[31,31,-3,-4,-6,-7,-8,-9,-10,-13,-15,62,-87,-88,78,-5,-14,92,-16,110,122,110,-180,-86,110,110,110,31,-140,181,110,110,-138,-139,110,110,-179,-140,-12,110,110,110,110,246,31,-60,-61,110,-93,110,110,181,-140,181,31,31,110,110,-97,-129,334,-128,-57,110,110,110,110,110,110,181,181,181,181,181,181,-137,-94,-95,31,-187,-188,-190,-191,-192,-193,62,110,31,31,31,31,31,31,-11,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,334,334,110,-174,-189,31,-176,-181,31,31,-52,-54,-55,-56,31,110,110,110,334,334,334,334,-127,-194,-175,-178,-182,-45,-53,-21,-22,447,334,-177,-46,122,-99,-102,-103,-104,31,110,110,-34,-49,31,31,31,31,31,-48,-47,]),'TIPO_DOUBLE':([0,2,3,4,6,7,8,9,10,11,12,13,24,25,46,47,58,66,67,68,86,100,126,127,148,168,169,170,173,196,199,200,232,249,274,275,277,278,279,281,282,283,284,291,295,296,298,299,300,305,306,307,308,309,310,319,320,326,331,332,349,351,357,358,359,361,363,364,366,367,368,405,406,408,409,410,412,413,414,443,444,456,457,458,459,462,469,475,476,477,479,482,485,499,504,],[37,37,-3,-4,-6,-7,-8,-9,-10,-13,57,-15,-87,-88,-5,-14,-16,136,-180,-86,163,37,136,-179,-12,37,-60,-61,-93,290,136,290,-97,-57,-94,-95,290,-187,-188,-190,-191,-192,-193,290,290,290,290,290,290,-11,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,-174,-189,290,-176,-181,290,290,-52,-54,-55,-56,-194,-175,-178,-182,-45,-53,-21,-22,-177,-46,-99,-102,-103,-104,290,-34,-49,290,290,290,290,290,-48,-47,]),'TIPO_INT':([0,2,3,4,6,7,8,9,10,11,12,13,24,25,46,47,58,66,67,68,71,86,100,126,127,148,168,169,170,173,196,199,200,232,249,274,275,277,278,279,281,282,283,284,291,295,296,298,299,300,305,306,307,308,309,310,319,320,326,331,332,349,351,357,358,359,361,363,364,366,367,368,405,406,408,409,410,412,413,414,443,444,456,457,458,459,462,469,475,476,477,479,482,485,499,504,],[38,38,-3,-4,-6,-7,-8,-9,-10,-13,56,-15,-87,-88,-5,-14,-16,137,-180,-86,145,162,38,137,-179,-12,38,-60,-61,-93,289,137,289,-97,-57,-94,-95,289,-187,-188,-190,-191,-192,-193,289,289,289,289,289,289,-11,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,-174,-189,289,-176,-181,289,289,-52,-54,-55,-56,-194,-175,-178,-182,-45,-53,-21,-22,-177,-46,-99,-102,-103,-104,289,-34,-49,289,289,289,289,289,-48,-47,]),'TIPO_SYMBOL':([0,2,3,4,6,7,8,9,10,11,13,24,25,46,47,58,66,67,68,100,126,127,148,168,169,170,173,196,199,200,232,249,274,275,277,278,279,281,282,283,284,291,295,296,298,299,300,305,306,307,308,309,310,319,320,326,331,332,349,351,357,358,359,361,363,364,366,367,368,405,406,408,409,410,412,413,414,443,444,456,457,458,459,462,469,475,476,477,479,482,485,499,504,],[39,39,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-5,-14,-16,39,-180,-86,39,39,-179,-12,39,-60,-61,-93,39,39,39,-97,-57,-94,-95,39,-187,-188,-190,-191,-192,-193,39,39,39,39,39,39,-11,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,-174,-189,39,-176,-181,39,39,-52,-54,-55,-56,-194,-175,-178,-182,-45,-53,-21,-22,-177,-46,-99,-102,-103,-104,39,-34,-49,39,39,39,39,39,-48,-47,]),'TIPO_OBJECT':([0,2,3,4,6,7,8,9,10,11,13,24,25,46,47,58,66,67,68,100,126,127,148,168,169,170,173,196,199,200,232,249,274,275,277,278,279,281,282,283,284,291,295,296,298,299,300,305,306,307,308,309,310,319,320,326,331,332,349,351,357,358,359,361,363,364,366,367,368,405,406,408,409,410,412,413,414,443,444,456,457,458,459,462,469,475,476,477,479,482,485,499,504,],[40,40,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-5,-14,-16,40,-180,-86,40,40,-179,-12,40,-60,-61,-93,40,40,40,-97,-57,-94,-95,40,-187,-188,-190,-191,-192,-193,40,40,40,40,40,40,-11,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,-174,-189,40,-176,-181,40,40,-52,-54,-55,-56,-194,-175,-178,-182,-45,-53,-21,-22,-177,-46,-99,-102,-103,-104,40,-34,-49,40,40,40,40,40,-48,-47,]),'TIPO_FUTURE':([0,2,3,4,6,7,8,9,10,11,13,24,25,46,47,58,66,67,68,100,126,127,148,168,169,170,173,196,199,200,232,249,274,275,277,278,279,281,282,283,284,291,295,296,298,299,300,305,306,307,308,309,310,319,320,326,331,332,349,351,357,358,359,361,363,364,366,367,368,405,406,408,409,410,412,413,414,443,444,456,457,458,459,462,469,475,476,477,479,482,485,499,504,],[41,41,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-5,-14,-16,41,-180,-86,41,41,-179,-12,41,-60,-61,-93,41,41,41,-97,-57,-94,-95,41,-187,-188,-190,-191,-192,-193,41,41,41,41,41,41,-11,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,-174,-189,41,-176,-181,41,41,-52,-54,-55,-56,-194,-175,-178,-182,-45,-53,-21,-22,-177,-46,-99,-102,-103,-104,41,-34,-49,41,41,41,41,41,-48,-47,]),'TIPO_STREAM':([0,2,3,4,6,7,8,9,10,11,13,24,25,46,47,58,66,67,68,100,126,127,148,168,169,170,173,196,199,200,232,249,274,275,277,278,279,281,282,283,284,291,295,296,298,299,300,305,306,307,308,309,310,319,320,326,331,332,349,351,357,358,359,361,363,364,366,367,368,405,406,408,409,410,412,413,414,443,444,456,457,458,459,462,469,475,476,477,479,482,485,499,504,],[42,42,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-5,-14,-16,42,-180,-86,42,42,-179,-12,42,-60,-61,-93,42,42,42,-97,-57,-94,-95,42,-187,-188,-190,-191,-192,-193,42,42,42,42,42,42,-11,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,-174,-189,42,-176,-181,42,42,-52,-54,-55,-56,-194,-175,-178,-182,-45,-53,-21,-22,-177,-46,-99,-102,-103,-104,42,-34,-49,42,42,42,42,42,-48,-47,]),'TIPO_ITERABLE':([0,2,3,4,6,7,8,9,10,11,13,24,25,46,47,58,66,67,68,100,126,127,148,168,169,170,173,196,199,200,232,249,274,275,277,278,279,281,282,283,284,291,295,296,298,299,300,305,306,307,308,309,310,319,320,326,331,332,349,351,357,358,359,361,363,364,366,367,368,405,406,408,409,410,412,413,414,443,444,456,457,458,459,462,469,475,476,477,479,482,485,499,504,],[43,43,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-5,-14,-16,43,-180,-86,43,43,-179,-12,43,-60,-61,-93,43,43,43,-97,-57,-94,-95,43,-187,-188,-190,-191,-192,-193,43,43,43,43,43,43,-11,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,-174,-189,43,-176,-181,43,43,-52,-54,-55,-56,-194,-175,-178,-182,-45,-53,-21,-22,-177,-46,-99,-102,-103,-104,43,-34,-49,43,43,43,43,43,-48,-47,]),'TIPO_NEVER':([0,2,3,4,6,7,8,9,10,11,13,24,25,46,47,58,66,67,68,100,126,127,148,168,169,170,173,196,199,200,232,249,274,275,277,278,279,281,282,283,284,291,295,296,298,299,300,305,306,307,308,309,310,319,320,326,331,332,349,351,357,358,359,361,363,364,366,367,368,405,406,408,409,410,412,413,414,443,444,456,457,458,459,462,469,475,476,477,479,482,485,499,504,],[44,44,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-5,-14,-16,44,-180,-86,44,44,-179,-12,44,-60,-61,-93,44,44,44,-97,-57,-94,-95,44,-187,-188,-190,-191,-192,-193,44,44,44,44,44,44,-11,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,-174,-189,44,-176,-181,44,44,-52,-54,-55,-56,-194,-175,-178,-182,-45,-53,-21,-22,-177,-46,-99,-102,-103,-104,44,-34,-49,44,44,44,44,44,-48,-47,]),'$end':([1,2,3,4,6,7,8,9,10,11,13,24,25,45,46,47,58,67,68,127,148,173,232,249,274,275,278,279,281,282,283,284,305,306,307,308,309,310,319,320,326,331,332,349,351,358,359,405,406,408,409,410,413,414,443,444,456,457,458,459,469,475,499,504,],[0,-2,-3,-4,-6,-7,-8,-9,-10,-13,-15,-87,-88,-1,-5,-14,-16,-180,-86,-179,-12,-93,-97,-57,-94,-95,-187,-188,-190,-191,-192,-193,-11,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,-174,-189,-176,-181,-194,-175,-178,-182,-45,-21,-22,-177,-46,-99,-102,-103,-104,-34,-49,-48,-47,]),'LLAVE_CLAUSURA':([11,13,24,25,47,58,67,68,101,103,104,105,106,107,108,109,113,114,115,116,118,119,127,141,167,168,169,170,173,185,187,190,230,232,250,252,254,256,258,264,265,266,267,268,270,271,272,274,275,276,277,278,279,281,282,283,284,294,306,307,308,309,310,319,320,321,323,326,331,332,340,342,343,344,345,346,347,348,349,350,351,356,358,359,360,362,363,364,366,367,368,369,370,383,384,385,386,387,388,394,395,396,405,406,407,408,409,410,411,412,413,414,434,435,443,444,453,454,455,456,457,458,459,463,464,465,468,469,470,472,475,486,489,492,494,497,499,501,503,504,505,506,],[-13,-15,-87,-88,-14,-16,-180,-86,-140,-113,-114,-115,-116,-117,-118,-130,-145,-146,-147,-65,-138,-139,-179,-148,249,-59,-60,-61,-93,-131,-140,-144,322,-97,-58,-63,-67,-149,-150,-132,-133,-134,-135,-136,-143,-137,-64,-94,-95,349,-186,-187,-188,-190,-191,-192,-193,358,-89,-90,-91,-100,-101,-92,-96,389,-111,-98,-106,-105,-66,-151,-152,-153,-154,-141,-142,-62,-174,-185,-189,406,-176,-181,408,410,-51,-52,-54,-55,-56,413,414,428,-162,430,-164,432,-166,438,439,440,-194,-175,443,-178,-182,-45,-50,-53,-21,-22,-110,-112,-177,-46,-163,-165,-167,-99,-102,-103,-104,469,-36,-38,475,-34,-35,-37,-49,493,496,499,-43,-40,-48,-44,-41,-47,-42,-39,]),'SWITCH':([11,13,24,25,47,58,68,173,196,200,232,274,275,277,278,279,281,282,283,284,291,295,296,306,307,308,309,310,319,320,326,331,332,351,357,361,405,410,413,414,444,456,457,458,459,469,475,499,504,],[-13,-15,-87,-88,-14,-16,-86,-93,286,286,-97,-94,-95,286,-187,-188,-190,-191,-192,-193,286,286,286,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,-189,286,286,-194,-45,-21,-22,-46,-99,-102,-103,-104,-34,-49,-48,-47,]),'RETURN':([11,13,24,25,47,58,68,173,196,200,232,274,275,277,278,279,281,282,283,284,291,295,296,306,307,308,309,310,319,320,326,331,332,351,357,361,405,410,413,414,444,456,457,458,459,469,475,499,504,],[-13,-15,-87,-88,-14,-16,-86,-93,287,287,-97,-94,-95,287,-187,-188,-190,-191,-192,-193,287,287,287,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,-189,287,287,-194,-45,-21,-22,-46,-99,-102,-103,-104,-34,-49,-48,-47,]),'BREAK':([11,13,24,25,47,58,68,173,232,274,275,306,307,308,309,310,319,320,326,331,332,456,457,458,459,480,483,488,491,493,496,],[-13,-15,-87,-88,-14,-16,-86,-93,-97,-94,-95,-89,-90,-91,-100,-101,-92,-96,-98,-106,-105,-99,-102,-103,-104,487,490,495,498,500,502,]),'PUNTO_COMA':([14,19,72,73,74,75,76,79,81,87,88,89,101,102,103,104,105,106,107,108,109,113,114,115,116,118,119,120,122,141,146,153,154,156,185,187,190,193,194,216,217,218,219,220,221,228,229,233,242,243,244,245,248,252,254,256,258,264,265,266,267,268,270,271,272,280,288,303,312,322,338,340,342,343,344,345,346,347,348,353,354,355,365,372,373,379,389,397,398,399,400,402,418,420,425,426,428,430,432,436,437,438,439,440,441,448,449,450,451,452,481,484,487,490,495,498,500,502,],[58,68,148,-75,-78,-73,-74,-71,-72,-70,-76,-77,-140,173,-113,-114,-115,-116,-117,-118,-130,-145,-146,-147,-65,-138,-139,-17,-18,-148,215,-19,-20,232,-131,-140,-144,274,275,305,306,307,308,309,310,319,320,326,331,-129,332,-120,-128,-63,-67,-149,-150,-132,-133,-134,-135,-136,-143,-137,-64,351,68,374,-156,-108,-121,-66,-151,-152,-153,-154,-141,-142,-62,405,-77,-76,412,-25,-26,-155,-107,-122,-123,-124,-125,-127,-27,-28,-157,-158,-168,-169,-170,-109,456,457,458,459,-126,-29,-30,-31,-32,-159,488,491,494,497,501,503,505,506,]),'SIGNO_IGUAL':([16,33,49,61,62,73,74,75,76,79,81,88,89,90,91,92,93,94,95,96,97,98,99,101,103,109,118,119,129,141,142,159,160,161,174,175,176,177,185,187,189,195,197,202,214,264,265,266,267,268,271,285,292,304,327,354,355,375,376,377,378,],[60,80,60,121,123,149,150,151,152,155,157,165,166,149,121,123,150,151,152,155,157,166,165,-140,176,-130,-138,-139,201,-140,176,236,237,238,257,259,260,261,-131,-140,-130,-119,201,297,302,-132,-133,-134,-135,-136,-137,60,297,377,393,166,165,419,421,422,423,]),'CORCHETE_APERTURA':([16,49,151,157,285,315,393,],[63,63,222,222,63,382,222,]),'PARENTESIS_APERTURA':([17,19,20,21,22,60,63,65,69,70,73,74,75,76,79,80,81,87,88,89,101,110,111,112,121,123,149,151,152,165,166,172,174,175,180,181,182,183,184,186,192,222,223,230,246,247,251,257,259,260,261,262,263,285,286,287,325,333,334,335,336,341,380,390,391,401,461,466,467,],[64,66,69,70,71,111,111,126,111,111,-75,-78,-73,-74,-71,111,-72,-70,-76,-77,172,186,111,111,186,186,111,111,111,186,247,111,186,186,186,186,186,186,186,186,273,111,314,111,247,247,172,186,186,186,186,111,111,172,352,111,392,247,247,247,247,111,111,111,111,247,467,111,111,]),'DATO_CADENA_TEXTO':([23,60,63,80,150,151,152,172,222,230,287,318,330,341,380,390,391,433,466,],[72,105,105,105,218,105,105,105,105,105,105,388,388,105,105,105,105,388,105,]),'SIGNO_MENOR_QUE':([34,35,54,55,101,103,109,118,119,141,142,151,185,187,189,264,265,266,267,268,271,304,],[82,86,82,86,-140,174,-130,-138,-139,-140,174,86,-131,-140,-130,-132,-133,-134,-135,-136,-137,375,]),'LLAVE_APERTURA':([59,125,129,155,197,202,211,212,213,225,226,227,236,237,238,239,240,241,292,442,445,476,477,478,],[100,196,200,230,291,296,298,299,300,316,317,318,328,329,330,-171,-172,-173,357,460,462,479,482,485,]),'NULL':([60,63,80,151,152,172,222,230,287,341,380,390,391,466,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'SIGNO_ADMIRACION_APERTURA':([60,63,69,70,80,101,103,109,111,112,118,119,141,142,149,151,152,172,185,187,189,222,230,262,263,264,265,266,267,268,271,287,304,341,380,390,391,466,467,],[112,112,112,112,112,-140,177,-130,112,112,-138,-139,-140,177,112,112,112,112,-131,-140,-130,112,112,112,112,-132,-133,-134,-135,-136,-137,112,378,112,112,112,112,112,112,]),'TRUE':([60,63,69,70,80,111,112,149,151,152,172,222,230,262,263,287,341,380,390,391,466,467,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'FALSE':([60,63,69,70,80,111,112,149,151,152,172,222,230,262,263,287,341,380,390,391,466,467,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'NEW':([60,63,80,151,152,155,157,172,222,230,287,341,380,390,391,393,466,],[117,117,117,224,117,231,234,117,117,117,117,117,117,117,117,234,117,]),'DATO_DOBLE':([60,63,69,70,80,110,111,112,121,123,149,151,152,165,172,174,175,180,181,182,183,184,186,222,230,257,259,260,261,262,263,287,317,329,341,380,390,391,431,466,467,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,386,386,118,118,118,118,386,118,118,]),'DATO_ENTERO':([60,63,69,70,80,110,111,112,121,123,149,151,152,165,166,172,174,175,180,181,182,183,184,186,222,230,246,247,257,259,260,261,262,263,287,302,314,316,328,333,334,335,336,341,375,376,380,382,390,391,401,419,421,422,423,429,466,467,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,248,119,119,119,119,119,119,119,119,119,119,119,248,248,119,119,119,119,119,119,119,373,381,384,384,248,248,248,248,119,418,420,119,427,119,119,248,448,449,450,451,384,119,119,]),'PARENTESIS_CLAUSURA':([64,66,87,101,103,104,105,106,107,108,109,113,114,115,116,118,119,120,122,126,128,130,140,141,143,144,153,154,172,185,187,188,189,190,198,203,204,205,206,207,208,209,210,243,248,252,253,254,255,256,258,264,265,266,267,268,269,270,271,272,273,293,339,340,342,343,344,345,346,347,348,371,381,392,397,398,399,400,402,403,404,415,416,441,474,],[125,129,-70,-140,-113,-114,-115,-116,-117,-118,-130,-145,-146,-147,-65,-138,-139,-17,-18,197,-183,202,211,-140,212,213,-19,-20,254,-131,-140,270,271,-144,292,-71,-72,-73,-74,-75,-76,-77,-78,-129,-128,-63,340,-67,-69,-149,-150,-132,-133,-134,-135,-136,271,-143,-137,-64,348,-184,402,-66,-151,-152,-153,-154,-141,-142,-62,-23,425,436,-122,-123,-124,-125,-127,-68,442,-24,-33,-126,478,]),'AS':([72,],[147,]),'COMA':([87,101,103,104,105,106,107,108,109,113,114,115,116,118,119,128,141,185,187,190,203,204,205,206,207,208,209,210,252,254,255,256,258,264,265,266,267,268,270,271,272,313,323,340,342,343,344,345,346,347,348,384,386,388,435,],[-70,-140,-113,-114,-115,-116,-117,-118,-130,-145,-146,-147,-65,-138,-139,199,-148,-131,-140,-144,-71,-72,-73,-74,-75,-76,-77,-78,-63,-67,341,-149,-150,-132,-133,-134,-135,-136,-143,-137,-64,380,390,-66,-151,-152,-153,-154,-141,-142,-62,429,431,433,-112,]),'PLECA':([101,104,109,113,114,115,118,119,140,141,143,178,185,187,188,190,217,256,258,264,265,266,267,268,270,271,342,343,344,345,346,347,474,],[-148,178,-130,-145,-146,-147,-138,-139,178,-148,178,262,-131,-140,178,178,178,-149,-150,-132,-133,-134,-135,-136,-143,-137,-151,-152,-153,-154,178,178,178,]),'ET':([101,104,109,113,114,115,118,119,140,141,143,179,185,187,188,190,217,256,258,264,265,266,267,268,270,271,342,343,344,345,346,347,474,],[-148,179,-130,-145,-146,-147,-138,-139,179,-148,179,263,-131,-140,179,179,179,-149,-150,-132,-133,-134,-135,-136,-143,-137,-151,-152,-153,-154,179,179,179,]),'CORCHETE_CLAUSURA':([101,103,104,105,106,107,108,109,113,114,115,116,118,119,124,141,185,187,190,222,252,254,256,258,264,265,266,267,268,270,271,272,311,313,340,342,343,344,345,346,347,348,382,424,427,],[-140,-113,-114,-115,-116,-117,-118,-130,-145,-146,-147,-65,-138,-139,195,-148,-131,-140,-144,312,-63,-67,-149,-150,-132,-133,-134,-135,-136,-143,-137,-64,379,-160,-66,-151,-152,-153,-154,-141,-142,-62,426,-161,452,]),'DOBLE_PUNTO':([101,103,104,105,106,107,108,109,113,114,115,116,118,119,141,185,187,190,252,254,256,258,264,265,266,267,268,270,271,272,324,340,342,343,344,345,346,347,348,471,473,],[-140,-113,-114,-115,-116,-117,-118,-130,-145,-146,-147,-65,-138,-139,-148,-131,-140,-144,-63,-67,-149,-150,-132,-133,-134,-135,-136,-143,-137,-64,391,-66,-151,-152,-153,-154,-141,-142,-62,476,477,]),'PUNTO':([101,116,251,254,285,340,],[171,191,171,-67,171,-66,]),'SIGNO_MULTIPLICACION':([101,109,118,119,141,185,187,189,243,245,248,264,265,266,267,268,269,271,338,339,397,398,399,400,402,441,],[-140,182,-138,-139,-140,182,-140,182,-129,335,-128,182,182,182,182,182,182,-137,335,335,335,335,335,335,-127,335,]),'PORCENTAJE':([101,109,118,119,141,185,187,189,243,245,248,264,265,266,267,268,269,271,338,339,397,398,399,400,402,441,],[-140,183,-138,-139,-140,183,-140,183,-129,336,-128,183,183,183,183,183,183,-137,336,336,336,336,336,336,-127,336,]),'SIGNO_DIVISION':([101,109,118,119,141,185,187,189,264,265,266,267,268,269,271,337,],[-140,184,-138,-139,-140,184,-140,184,184,184,184,184,184,184,-137,401,]),'SIGNO_MAYOR_QUE':([101,103,109,118,119,141,142,158,162,163,164,185,187,189,201,264,265,266,267,268,271,297,304,],[-140,175,-130,-138,-139,-140,175,235,239,240,241,-131,-140,-130,295,-132,-133,-134,-135,-136,-137,361,376,]),'IN':([214,],[301,]),'VIRGULILLA':([243,245,248,338,339,397,398,399,400,402,441,],[-129,337,-128,337,337,337,337,337,337,-127,337,]),'ELSE':([410,499,],[445,445,]),'CASE':([460,465,497,503,506,],[466,466,-40,-41,-39,]),'DEFAULT':([464,465,472,497,503,506,],[471,-38,-37,-40,-41,-39,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,2,],[1,45,]),'item_programa':([0,2,],[2,2,]),'instruccion':([0,2,100,168,196,200,277,291,295,296,298,299,300,357,361,363,462,476,477,479,482,485,],[3,3,169,169,278,278,278,278,278,278,364,364,364,278,278,364,364,480,483,364,364,364,]),'clase':([0,2,5,],[4,4,46,]),'funcion':([0,2,100,168,],[6,6,170,170,]),'instruccion_if':([0,2,196,200,277,291,295,296,298,299,300,357,361,363,462,479,482,485,],[7,7,279,279,279,279,279,279,366,366,366,279,279,366,366,366,366,366,]),'instruccion_while':([0,2,196,200,277,291,295,296,298,299,300,357,361,363,462,479,482,485,],[8,8,281,281,281,281,281,281,367,367,367,281,281,367,367,367,367,367,]),'instruccion_for':([0,2,196,200,277,291,295,296,298,299,300,357,361,363,462,479,482,485,],[9,9,282,282,282,282,282,282,368,368,368,282,282,368,368,368,368,368,]),'import':([0,2,],[10,10,]),'asignacion':([0,2,12,100,168,196,200,277,291,295,296,298,299,300,357,361,363,462,476,477,479,482,485,],[11,11,47,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'declaracion':([0,2,100,168,196,200,277,291,295,296,298,299,300,357,361,363,462,476,477,479,482,485,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'operacion_unitaria':([0,2,100,168,196,200,277,291,295,296,298,299,300,357,361,363,374,462,476,477,479,482,485,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,416,14,14,14,14,14,14,]),'declaracion_general':([0,2,66,100,126,168,196,199,200,277,291,295,296,298,299,300,357,361,363,462,476,477,479,482,485,],[19,19,128,19,128,19,288,128,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,]),'asignacion_int':([0,2,12,100,168,196,200,277,291,295,296,298,299,300,357,361,363,462,476,477,479,482,485,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'asignacion_double':([0,2,12,100,168,196,200,277,291,295,296,298,299,300,357,361,363,462,476,477,479,482,485,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'valor_mapa_lista':([0,2,12,100,168,196,200,277,291,295,296,298,299,300,357,361,363,462,476,477,479,482,485,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'tipos_declaracion':([0,2,66,100,126,168,196,199,200,277,291,295,296,298,299,300,357,361,363,462,476,477,479,482,485,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'funcion_flecha':([19,65,],[67,127,]),'cast_int':([35,55,151,],[83,83,225,]),'cast_double':([35,55,151,],[84,84,226,]),'cast_string':([35,55,151,],[85,85,227,]),'valor_general':([60,63,80,151,152,172,222,230,287,341,380,390,391,466,],[102,124,156,219,228,255,313,324,353,255,313,324,435,473,]),'expresion_mat_double':([60,63,69,70,80,111,112,121,123,149,151,152,165,172,174,175,222,230,257,259,260,261,262,263,287,341,380,390,391,466,467,],[103,103,142,142,103,142,142,193,194,142,103,103,242,103,256,258,103,103,342,343,344,345,142,142,103,103,103,103,103,103,142,]),'expresion_logica':([60,63,69,70,80,111,112,149,151,152,172,222,230,262,263,287,341,380,390,391,466,467,],[104,104,140,143,104,188,190,217,104,104,104,104,104,346,347,104,104,104,104,104,104,474,]),'llamadas_func':([60,63,80,151,152,171,172,191,196,200,222,230,277,287,291,295,296,298,299,300,341,357,361,363,380,390,391,462,466,476,477,479,482,485,],[106,106,106,106,106,252,106,272,280,280,106,106,280,106,280,280,280,365,365,365,106,280,280,365,106,106,106,365,106,481,484,365,365,365,]),'nuevo_objeto':([60,63,80,151,152,172,222,230,287,341,380,390,391,466,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'expresion_double_no_menos':([60,63,69,70,80,110,111,112,121,123,149,151,152,165,172,174,175,180,181,182,183,184,186,222,230,257,259,260,261,262,263,287,341,380,390,391,466,467,],[109,109,109,109,109,185,189,109,109,109,109,109,109,109,109,109,109,264,265,266,267,268,269,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'comparacion':([60,63,69,70,80,111,112,149,151,152,172,222,230,262,263,287,341,380,390,391,466,467,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'llamada_func':([60,63,80,151,152,171,172,191,196,200,222,230,277,287,291,295,296,298,299,300,341,357,361,363,380,390,391,462,466,476,477,479,482,485,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'parametros':([66,126,199,],[130,198,293,]),'condicion_for':([71,],[144,]),'condicion_for_inicial':([71,],[146,]),'bloque_clase':([100,168,],[167,250,]),'item_bloque_clase':([100,168,],[168,168,]),'lista':([151,157,393,],[220,233,437,]),'conjunto_especifico':([151,],[221,]),'bloque_mapa':([155,],[229,]),'expresion_mat_int':([166,],[244,]),'expresion_int_no_menos':([166,246,247,333,334,335,336,401,],[245,338,339,397,398,399,400,441,]),'params':([172,341,],[253,403,]),'items_funcion':([196,200,277,291,296,357,],[276,294,350,356,360,407,]),'item_funcion':([196,200,277,291,295,296,357,361,],[277,277,277,277,359,277,277,409,]),'instruccion_switch':([196,200,277,291,295,296,357,361,],[283,283,283,283,283,283,283,283,]),'inst_return':([196,200,277,291,295,296,357,361,],[284,284,284,284,284,284,284,284,]),'condicion_for_terminacion':([215,],[303,]),'lista_general':([222,380,],[311,424,]),'pares_llave_valor':([230,390,],[321,434,]),'par_llave_valor':([230,390,],[323,323,]),'items_estructura_control':([298,299,300,363,462,479,482,485,],[362,369,370,411,468,486,489,492,]),'item_estructura_control':([298,299,300,363,462,479,482,485,],[363,363,363,363,363,363,363,363,]),'lista_numeros':([316,328,429,],[383,394,453,]),'lista_dobles':([317,329,431,],[385,395,454,]),'lista_cadenas':([318,330,433,],[387,396,455,]),'condicion_for_paso':([374,],[415,]),'instruccion_else':([410,499,],[444,504,]),'bloque_switch':([460,],[463,]),'instrucciones_case':([460,465,],[464,472,]),'instruccion_case':([460,465,],[465,465,]),'instruccion_default':([464,],[470,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> item_programa programa','programa',2,'p_programa','analisis_sintactico.py',8),
  ('programa -> item_programa','programa',1,'p_programa','analisis_sintactico.py',9),
  ('item_programa -> instruccion','item_programa',1,'p_item_programa','analisis_sintactico.py',12),
  ('item_programa -> clase','item_programa',1,'p_item_programa','analisis_sintactico.py',13),
  ('item_programa -> ABSTRACT clase','item_programa',2,'p_item_programa','analisis_sintactico.py',14),
  ('item_programa -> funcion','item_programa',1,'p_item_programa','analisis_sintactico.py',15),
  ('item_programa -> instruccion_if','item_programa',1,'p_item_programa','analisis_sintactico.py',16),
  ('item_programa -> instruccion_while','item_programa',1,'p_item_programa','analisis_sintactico.py',17),
  ('item_programa -> instruccion_for','item_programa',1,'p_item_programa','analisis_sintactico.py',18),
  ('item_programa -> import','item_programa',1,'p_item_programa','analisis_sintactico.py',19),
  ('import -> IMPORT DATO_CADENA_TEXTO AS IDENTIFICADOR PUNTO_COMA','import',5,'p_import','analisis_sintactico.py',22),
  ('import -> IMPORT DATO_CADENA_TEXTO PUNTO_COMA','import',3,'p_import','analisis_sintactico.py',23),
  ('instruccion -> asignacion','instruccion',1,'p_instruccion','analisis_sintactico.py',26),
  ('instruccion -> FINAL asignacion','instruccion',2,'p_instruccion','analisis_sintactico.py',27),
  ('instruccion -> declaracion','instruccion',1,'p_instruccion','analisis_sintactico.py',28),
  ('instruccion -> operacion_unitaria PUNTO_COMA','instruccion',2,'p_instruccion','analisis_sintactico.py',29),
  ('operacion_unitaria -> IDENTIFICADOR SIGNO_MAS SIGNO_MAS','operacion_unitaria',3,'p_operacion_unitaria','analisis_sintactico.py',32),
  ('operacion_unitaria -> IDENTIFICADOR SIGNO_MENOS SIGNO_MENOS','operacion_unitaria',3,'p_operacion_unitaria','analisis_sintactico.py',33),
  ('operacion_unitaria -> SIGNO_MAS SIGNO_MAS IDENTIFICADOR','operacion_unitaria',3,'p_operacion_unitaria','analisis_sintactico.py',34),
  ('operacion_unitaria -> SIGNO_MENOS SIGNO_MENOS IDENTIFICADOR','operacion_unitaria',3,'p_operacion_unitaria','analisis_sintactico.py',35),
  ('instruccion_while -> WHILE PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA','instruccion_while',7,'p_instruccion_while','analisis_sintactico.py',39),
  ('instruccion_for -> FOR PARENTESIS_APERTURA condicion_for PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA','instruccion_for',7,'p_instruccion_for','analisis_sintactico.py',43),
  ('condicion_for -> TIPO_INT IDENTIFICADOR IN IDENTIFICADOR','condicion_for',4,'p_condicion_for','analisis_sintactico.py',46),
  ('condicion_for -> condicion_for_inicial PUNTO_COMA condicion_for_terminacion PUNTO_COMA condicion_for_paso','condicion_for',5,'p_condicion_for','analisis_sintactico.py',47),
  ('condicion_for_inicial -> TIPO_INT IDENTIFICADOR SIGNO_IGUAL IDENTIFICADOR','condicion_for_inicial',4,'p_condicion_for_inicial','analisis_sintactico.py',50),
  ('condicion_for_inicial -> TIPO_INT IDENTIFICADOR SIGNO_IGUAL DATO_ENTERO','condicion_for_inicial',4,'p_condicion_for_inicial','analisis_sintactico.py',51),
  ('condicion_for_terminacion -> IDENTIFICADOR SIGNO_MENOR_QUE DATO_ENTERO','condicion_for_terminacion',3,'p_condicion_for_terminacion','analisis_sintactico.py',54),
  ('condicion_for_terminacion -> IDENTIFICADOR SIGNO_MAYOR_QUE DATO_ENTERO','condicion_for_terminacion',3,'p_condicion_for_terminacion','analisis_sintactico.py',55),
  ('condicion_for_terminacion -> IDENTIFICADOR SIGNO_MENOR_QUE SIGNO_IGUAL DATO_ENTERO','condicion_for_terminacion',4,'p_condicion_for_terminacion','analisis_sintactico.py',56),
  ('condicion_for_terminacion -> IDENTIFICADOR SIGNO_MAYOR_QUE SIGNO_IGUAL DATO_ENTERO','condicion_for_terminacion',4,'p_condicion_for_terminacion','analisis_sintactico.py',57),
  ('condicion_for_terminacion -> IDENTIFICADOR SIGNO_IGUAL SIGNO_IGUAL DATO_ENTERO','condicion_for_terminacion',4,'p_condicion_for_terminacion','analisis_sintactico.py',58),
  ('condicion_for_terminacion -> IDENTIFICADOR SIGNO_ADMIRACION_APERTURA SIGNO_IGUAL DATO_ENTERO','condicion_for_terminacion',4,'p_condicion_for_terminacion','analisis_sintactico.py',59),
  ('condicion_for_paso -> operacion_unitaria','condicion_for_paso',1,'p_condicion_for_paso','analisis_sintactico.py',62),
  ('instruccion_switch -> SWITCH PARENTESIS_APERTURA IDENTIFICADOR PARENTESIS_CLAUSURA LLAVE_APERTURA bloque_switch LLAVE_CLAUSURA','instruccion_switch',7,'p_instruccion_switch','analisis_sintactico.py',66),
  ('bloque_switch -> instrucciones_case instruccion_default','bloque_switch',2,'p_bloque_switch','analisis_sintactico.py',69),
  ('bloque_switch -> instrucciones_case','bloque_switch',1,'p_bloque_switch','analisis_sintactico.py',70),
  ('instrucciones_case -> instruccion_case instrucciones_case','instrucciones_case',2,'p_instrucciones_case','analisis_sintactico.py',73),
  ('instrucciones_case -> instruccion_case','instrucciones_case',1,'p_instrucciones_case','analisis_sintactico.py',74),
  ('instruccion_case -> CASE valor_general DOBLE_PUNTO LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA BREAK PUNTO_COMA','instruccion_case',8,'p_instruccion_case','analisis_sintactico.py',77),
  ('instruccion_case -> CASE valor_general DOBLE_PUNTO instruccion BREAK PUNTO_COMA','instruccion_case',6,'p_instruccion_case','analisis_sintactico.py',78),
  ('instruccion_case -> CASE valor_general DOBLE_PUNTO llamadas_func PUNTO_COMA BREAK PUNTO_COMA','instruccion_case',7,'p_instruccion_case','analisis_sintactico.py',79),
  ('instruccion_default -> DEFAULT DOBLE_PUNTO LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA BREAK PUNTO_COMA','instruccion_default',7,'p_instruccion_default','analisis_sintactico.py',82),
  ('instruccion_default -> DEFAULT DOBLE_PUNTO instruccion BREAK PUNTO_COMA','instruccion_default',5,'p_instruccion_default','analisis_sintactico.py',83),
  ('instruccion_default -> DEFAULT DOBLE_PUNTO llamadas_func PUNTO_COMA BREAK PUNTO_COMA','instruccion_default',6,'p_instruccion_default','analisis_sintactico.py',84),
  ('instruccion_if -> IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA','instruccion_if',7,'p_instruccion_if','analisis_sintactico.py',88),
  ('instruccion_if -> IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA instruccion_else','instruccion_if',8,'p_instruccion_if','analisis_sintactico.py',89),
  ('instruccion_else -> ELSE IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA instruccion_else','instruccion_else',9,'p_instruccion_else','analisis_sintactico.py',92),
  ('instruccion_else -> ELSE IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA','instruccion_else',8,'p_instruccion_else','analisis_sintactico.py',93),
  ('instruccion_else -> ELSE LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA','instruccion_else',4,'p_instruccion_else','analisis_sintactico.py',94),
  ('items_estructura_control -> item_estructura_control items_estructura_control','items_estructura_control',2,'p_items_estructura_control','analisis_sintactico.py',97),
  ('items_estructura_control -> item_estructura_control','items_estructura_control',1,'p_items_estructura_control','analisis_sintactico.py',98),
  ('item_estructura_control -> instruccion','item_estructura_control',1,'p_item_estructura_control','analisis_sintactico.py',101),
  ('item_estructura_control -> llamadas_func PUNTO_COMA','item_estructura_control',2,'p_item_estructura_control','analisis_sintactico.py',102),
  ('item_estructura_control -> instruccion_if','item_estructura_control',1,'p_item_estructura_control','analisis_sintactico.py',103),
  ('item_estructura_control -> instruccion_while','item_estructura_control',1,'p_item_estructura_control','analisis_sintactico.py',104),
  ('item_estructura_control -> instruccion_for','item_estructura_control',1,'p_item_estructura_control','analisis_sintactico.py',105),
  ('clase -> CLASS IDENTIFICADOR LLAVE_APERTURA bloque_clase LLAVE_CLAUSURA','clase',5,'p_clase','analisis_sintactico.py',111),
  ('bloque_clase -> item_bloque_clase bloque_clase','bloque_clase',2,'p_bloque_clase','analisis_sintactico.py',114),
  ('bloque_clase -> item_bloque_clase','bloque_clase',1,'p_bloque_clase','analisis_sintactico.py',115),
  ('item_bloque_clase -> instruccion','item_bloque_clase',1,'p_item_bloque_clase','analisis_sintactico.py',118),
  ('item_bloque_clase -> funcion','item_bloque_clase',1,'p_item_bloque_clase','analisis_sintactico.py',119),
  ('nuevo_objeto -> NEW IDENTIFICADOR PARENTESIS_APERTURA PARENTESIS_CLAUSURA','nuevo_objeto',4,'p_nuevo_objeto','analisis_sintactico.py',122),
  ('llamadas_func -> IDENTIFICADOR PUNTO llamadas_func','llamadas_func',3,'p_llamadas_func','analisis_sintactico.py',126),
  ('llamadas_func -> llamada_func PUNTO llamadas_func','llamadas_func',3,'p_llamadas_func','analisis_sintactico.py',127),
  ('llamadas_func -> llamada_func','llamadas_func',1,'p_llamadas_func','analisis_sintactico.py',128),
  ('llamada_func -> IDENTIFICADOR PARENTESIS_APERTURA params PARENTESIS_CLAUSURA','llamada_func',4,'p_llamada_func','analisis_sintactico.py',131),
  ('llamada_func -> IDENTIFICADOR PARENTESIS_APERTURA PARENTESIS_CLAUSURA','llamada_func',3,'p_llamada_func','analisis_sintactico.py',132),
  ('params -> valor_general COMA params','params',3,'p_params','analisis_sintactico.py',135),
  ('params -> valor_general','params',1,'p_params','analisis_sintactico.py',136),
  ('declaracion_general -> tipos_declaracion IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',140),
  ('declaracion_general -> TIPO_MAP IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',141),
  ('declaracion_general -> TIPO_LIST IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',142),
  ('declaracion_general -> VAR IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',143),
  ('declaracion_general -> DYNAMIC IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',144),
  ('declaracion_general -> TIPO_BOOL IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',145),
  ('declaracion_general -> TIPO_DOUBLE IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',146),
  ('declaracion_general -> TIPO_INT IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',147),
  ('declaracion_general -> TIPO_STRING IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',148),
  ('tipos_declaracion -> TIPO_SET','tipos_declaracion',1,'p_tipos_declaracion','analisis_sintactico.py',151),
  ('tipos_declaracion -> TIPO_SYMBOL','tipos_declaracion',1,'p_tipos_declaracion','analisis_sintactico.py',152),
  ('tipos_declaracion -> TIPO_OBJECT','tipos_declaracion',1,'p_tipos_declaracion','analisis_sintactico.py',153),
  ('tipos_declaracion -> TIPO_FUTURE','tipos_declaracion',1,'p_tipos_declaracion','analisis_sintactico.py',154),
  ('tipos_declaracion -> TIPO_STREAM','tipos_declaracion',1,'p_tipos_declaracion','analisis_sintactico.py',155),
  ('tipos_declaracion -> TIPO_ITERABLE','tipos_declaracion',1,'p_tipos_declaracion','analisis_sintactico.py',156),
  ('tipos_declaracion -> TIPO_NEVER','tipos_declaracion',1,'p_tipos_declaracion','analisis_sintactico.py',157),
  ('declaracion -> declaracion_general PUNTO_COMA','declaracion',2,'p_declaracion','analisis_sintactico.py',160),
  ('asignacion -> asignacion_int','asignacion',1,'p_asignacion','analisis_sintactico.py',165),
  ('asignacion -> asignacion_double','asignacion',1,'p_asignacion','analisis_sintactico.py',166),
  ('asignacion -> TIPO_BOOL IDENTIFICADOR SIGNO_IGUAL expresion_logica PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',167),
  ('asignacion -> TIPO_STRING IDENTIFICADOR SIGNO_IGUAL DATO_CADENA_TEXTO PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',168),
  ('asignacion -> VAR IDENTIFICADOR SIGNO_IGUAL valor_general PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',169),
  ('asignacion -> DYNAMIC IDENTIFICADOR SIGNO_IGUAL valor_general PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',170),
  ('asignacion -> IDENTIFICADOR SIGNO_IGUAL valor_general PUNTO_COMA','asignacion',4,'p_asignacion','analisis_sintactico.py',171),
  ('asignacion -> IDENTIFICADOR SIGNO_MAS SIGNO_IGUAL expresion_mat_double PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',172),
  ('asignacion -> IDENTIFICADOR SIGNO_MENOS SIGNO_IGUAL expresion_mat_double PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',173),
  ('asignacion -> TIPO_MAP IDENTIFICADOR SIGNO_IGUAL bloque_mapa PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',174),
  ('asignacion -> valor_mapa_lista SIGNO_IGUAL valor_general PUNTO_COMA','asignacion',4,'p_asignacion','analisis_sintactico.py',175),
  ('asignacion -> TIPO_LIST IDENTIFICADOR SIGNO_IGUAL lista PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',176),
  ('asignacion -> TIPO_LIST SIGNO_MENOR_QUE IDENTIFICADOR SIGNO_MAYOR_QUE IDENTIFICADOR SIGNO_IGUAL lista PUNTO_COMA','asignacion',8,'p_asignacion','analisis_sintactico.py',177),
  ('asignacion -> VAR IDENTIFICADOR SIGNO_IGUAL lista PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',178),
  ('asignacion -> VAR IDENTIFICADOR SIGNO_IGUAL conjunto_especifico PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',179),
  ('asignacion -> TIPO_SET cast_int IDENTIFICADOR SIGNO_IGUAL LLAVE_APERTURA lista_numeros LLAVE_CLAUSURA PUNTO_COMA','asignacion',8,'p_asignacion','analisis_sintactico.py',180),
  ('asignacion -> TIPO_SET cast_double IDENTIFICADOR SIGNO_IGUAL LLAVE_APERTURA lista_dobles LLAVE_CLAUSURA PUNTO_COMA','asignacion',8,'p_asignacion','analisis_sintactico.py',181),
  ('asignacion -> TIPO_SET cast_string IDENTIFICADOR SIGNO_IGUAL LLAVE_APERTURA lista_cadenas LLAVE_CLAUSURA PUNTO_COMA','asignacion',8,'p_asignacion','analisis_sintactico.py',182),
  ('asignacion_int -> TIPO_INT IDENTIFICADOR SIGNO_IGUAL expresion_mat_int PUNTO_COMA','asignacion_int',5,'p_asignacion_int','analisis_sintactico.py',186),
  ('asignacion_double -> TIPO_DOUBLE IDENTIFICADOR SIGNO_IGUAL expresion_mat_double PUNTO_COMA','asignacion_double',5,'p_asignacion_double','analisis_sintactico.py',190),
  ('bloque_mapa -> LLAVE_APERTURA pares_llave_valor LLAVE_CLAUSURA','bloque_mapa',3,'p_bloque_mapa','analisis_sintactico.py',195),
  ('bloque_mapa -> LLAVE_APERTURA LLAVE_CLAUSURA','bloque_mapa',2,'p_bloque_mapa','analisis_sintactico.py',196),
  ('bloque_mapa -> NEW TIPO_MAP PARENTESIS_APERTURA PARENTESIS_CLAUSURA','bloque_mapa',4,'p_bloque_mapa','analisis_sintactico.py',197),
  ('pares_llave_valor -> par_llave_valor COMA pares_llave_valor','pares_llave_valor',3,'p_pares_llave_valor','analisis_sintactico.py',200),
  ('pares_llave_valor -> par_llave_valor','pares_llave_valor',1,'p_pares_llave_valor','analisis_sintactico.py',201),
  ('par_llave_valor -> valor_general DOBLE_PUNTO valor_general','par_llave_valor',3,'p_par_llave_valor','analisis_sintactico.py',204),
  ('valor_general -> expresion_mat_double','valor_general',1,'p_valor_general','analisis_sintactico.py',207),
  ('valor_general -> expresion_logica','valor_general',1,'p_valor_general','analisis_sintactico.py',208),
  ('valor_general -> DATO_CADENA_TEXTO','valor_general',1,'p_valor_general','analisis_sintactico.py',209),
  ('valor_general -> llamadas_func','valor_general',1,'p_valor_general','analisis_sintactico.py',210),
  ('valor_general -> nuevo_objeto','valor_general',1,'p_valor_general','analisis_sintactico.py',211),
  ('valor_general -> NULL','valor_general',1,'p_valor_general','analisis_sintactico.py',212),
  ('valor_mapa_lista -> IDENTIFICADOR CORCHETE_APERTURA valor_general CORCHETE_CLAUSURA','valor_mapa_lista',4,'p_valor_mapa_lista','analisis_sintactico.py',215),
  ('expresion_mat_int -> expresion_int_no_menos','expresion_mat_int',1,'p_expresion_mat_int','analisis_sintactico.py',219),
  ('expresion_mat_int -> SIGNO_MENOS expresion_int_no_menos','expresion_mat_int',2,'p_expresion_mat_int','analisis_sintactico.py',220),
  ('expresion_int_no_menos -> expresion_int_no_menos SIGNO_MAS expresion_int_no_menos','expresion_int_no_menos',3,'p_expresion_int_no_menos','analisis_sintactico.py',223),
  ('expresion_int_no_menos -> expresion_int_no_menos SIGNO_MENOS expresion_int_no_menos','expresion_int_no_menos',3,'p_expresion_int_no_menos','analisis_sintactico.py',224),
  ('expresion_int_no_menos -> expresion_int_no_menos SIGNO_MULTIPLICACION expresion_int_no_menos','expresion_int_no_menos',3,'p_expresion_int_no_menos','analisis_sintactico.py',225),
  ('expresion_int_no_menos -> expresion_int_no_menos PORCENTAJE expresion_int_no_menos','expresion_int_no_menos',3,'p_expresion_int_no_menos','analisis_sintactico.py',226),
  ('expresion_int_no_menos -> expresion_int_no_menos VIRGULILLA SIGNO_DIVISION expresion_int_no_menos','expresion_int_no_menos',4,'p_expresion_int_no_menos','analisis_sintactico.py',227),
  ('expresion_int_no_menos -> PARENTESIS_APERTURA expresion_int_no_menos PARENTESIS_CLAUSURA','expresion_int_no_menos',3,'p_expresion_int_no_menos','analisis_sintactico.py',228),
  ('expresion_int_no_menos -> DATO_ENTERO','expresion_int_no_menos',1,'p_expresion_int_no_menos','analisis_sintactico.py',229),
  ('expresion_int_no_menos -> IDENTIFICADOR','expresion_int_no_menos',1,'p_expresion_int_no_menos','analisis_sintactico.py',230),
  ('expresion_mat_double -> expresion_double_no_menos','expresion_mat_double',1,'p_expresion_mat_double','analisis_sintactico.py',233),
  ('expresion_mat_double -> SIGNO_MENOS expresion_double_no_menos','expresion_mat_double',2,'p_expresion_mat_double','analisis_sintactico.py',234),
  ('expresion_double_no_menos -> expresion_double_no_menos SIGNO_MAS expresion_double_no_menos','expresion_double_no_menos',3,'p_expresion_double_no_menos','analisis_sintactico.py',237),
  ('expresion_double_no_menos -> expresion_double_no_menos SIGNO_MENOS expresion_double_no_menos','expresion_double_no_menos',3,'p_expresion_double_no_menos','analisis_sintactico.py',238),
  ('expresion_double_no_menos -> expresion_double_no_menos SIGNO_MULTIPLICACION expresion_double_no_menos','expresion_double_no_menos',3,'p_expresion_double_no_menos','analisis_sintactico.py',239),
  ('expresion_double_no_menos -> expresion_double_no_menos PORCENTAJE expresion_double_no_menos','expresion_double_no_menos',3,'p_expresion_double_no_menos','analisis_sintactico.py',240),
  ('expresion_double_no_menos -> expresion_double_no_menos SIGNO_DIVISION expresion_double_no_menos','expresion_double_no_menos',3,'p_expresion_double_no_menos','analisis_sintactico.py',241),
  ('expresion_double_no_menos -> PARENTESIS_APERTURA expresion_double_no_menos PARENTESIS_CLAUSURA','expresion_double_no_menos',3,'p_expresion_double_no_menos','analisis_sintactico.py',242),
  ('expresion_double_no_menos -> DATO_DOBLE','expresion_double_no_menos',1,'p_expresion_double_no_menos','analisis_sintactico.py',243),
  ('expresion_double_no_menos -> DATO_ENTERO','expresion_double_no_menos',1,'p_expresion_double_no_menos','analisis_sintactico.py',244),
  ('expresion_double_no_menos -> IDENTIFICADOR','expresion_double_no_menos',1,'p_expresion_double_no_menos','analisis_sintactico.py',245),
  ('expresion_logica -> expresion_logica PLECA PLECA expresion_logica','expresion_logica',4,'p_expresion_logica','analisis_sintactico.py',249),
  ('expresion_logica -> expresion_logica ET ET expresion_logica','expresion_logica',4,'p_expresion_logica','analisis_sintactico.py',250),
  ('expresion_logica -> PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA','expresion_logica',3,'p_expresion_logica','analisis_sintactico.py',251),
  ('expresion_logica -> SIGNO_ADMIRACION_APERTURA expresion_logica','expresion_logica',2,'p_expresion_logica','analisis_sintactico.py',252),
  ('expresion_logica -> comparacion','expresion_logica',1,'p_expresion_logica','analisis_sintactico.py',253),
  ('expresion_logica -> TRUE','expresion_logica',1,'p_expresion_logica','analisis_sintactico.py',254),
  ('expresion_logica -> FALSE','expresion_logica',1,'p_expresion_logica','analisis_sintactico.py',255),
  ('expresion_logica -> IDENTIFICADOR','expresion_logica',1,'p_expresion_logica','analisis_sintactico.py',256),
  ('comparacion -> expresion_mat_double SIGNO_MENOR_QUE expresion_mat_double','comparacion',3,'p_comparacion','analisis_sintactico.py',259),
  ('comparacion -> expresion_mat_double SIGNO_MAYOR_QUE expresion_mat_double','comparacion',3,'p_comparacion','analisis_sintactico.py',260),
  ('comparacion -> expresion_mat_double SIGNO_MENOR_QUE SIGNO_IGUAL expresion_mat_double','comparacion',4,'p_comparacion','analisis_sintactico.py',261),
  ('comparacion -> expresion_mat_double SIGNO_MAYOR_QUE SIGNO_IGUAL expresion_mat_double','comparacion',4,'p_comparacion','analisis_sintactico.py',262),
  ('comparacion -> expresion_mat_double SIGNO_IGUAL SIGNO_IGUAL expresion_mat_double','comparacion',4,'p_comparacion','analisis_sintactico.py',263),
  ('comparacion -> expresion_mat_double SIGNO_ADMIRACION_APERTURA SIGNO_IGUAL expresion_mat_double','comparacion',4,'p_comparacion','analisis_sintactico.py',264),
  ('lista -> CORCHETE_APERTURA lista_general CORCHETE_CLAUSURA','lista',3,'p_lista','analisis_sintactico.py',268),
  ('lista -> CORCHETE_APERTURA CORCHETE_CLAUSURA','lista',2,'p_lista','analisis_sintactico.py',269),
  ('lista -> TIPO_LIST PARENTESIS_APERTURA DATO_ENTERO PARENTESIS_CLAUSURA','lista',4,'p_lista','analisis_sintactico.py',270),
  ('lista -> NEW TIPO_LIST CORCHETE_APERTURA CORCHETE_CLAUSURA','lista',4,'p_lista','analisis_sintactico.py',271),
  ('lista -> NEW TIPO_LIST CORCHETE_APERTURA DATO_ENTERO CORCHETE_CLAUSURA','lista',5,'p_lista','analisis_sintactico.py',272),
  ('lista_general -> valor_general','lista_general',1,'p_lista_general','analisis_sintactico.py',275),
  ('lista_general -> valor_general COMA lista_general','lista_general',3,'p_lista_general','analisis_sintactico.py',276),
  ('lista_numeros -> DATO_ENTERO','lista_numeros',1,'p_lista_numeros','analisis_sintactico.py',279),
  ('lista_numeros -> DATO_ENTERO COMA lista_numeros','lista_numeros',3,'p_lista_numeros','analisis_sintactico.py',280),
  ('lista_dobles -> DATO_DOBLE','lista_dobles',1,'p_lista_dobles','analisis_sintactico.py',283),
  ('lista_dobles -> DATO_DOBLE COMA lista_dobles','lista_dobles',3,'p_lista_dobles','analisis_sintactico.py',284),
  ('lista_cadenas -> DATO_CADENA_TEXTO','lista_cadenas',1,'p_lista_cadenas','analisis_sintactico.py',287),
  ('lista_cadenas -> DATO_CADENA_TEXTO COMA lista_cadenas','lista_cadenas',3,'p_lista_cadenas','analisis_sintactico.py',288),
  ('conjunto_especifico -> cast_int LLAVE_APERTURA lista_numeros LLAVE_CLAUSURA','conjunto_especifico',4,'p_conjunto_especifico','analisis_sintactico.py',292),
  ('conjunto_especifico -> cast_double LLAVE_APERTURA lista_dobles LLAVE_CLAUSURA','conjunto_especifico',4,'p_conjunto_especifico','analisis_sintactico.py',293),
  ('conjunto_especifico -> cast_string LLAVE_APERTURA lista_cadenas LLAVE_CLAUSURA','conjunto_especifico',4,'p_conjunto_especifico','analisis_sintactico.py',294),
  ('cast_int -> SIGNO_MENOR_QUE TIPO_INT SIGNO_MAYOR_QUE','cast_int',3,'p_cast_int','analisis_sintactico.py',297),
  ('cast_double -> SIGNO_MENOR_QUE TIPO_DOUBLE SIGNO_MAYOR_QUE','cast_double',3,'p_cast_double','analisis_sintactico.py',300),
  ('cast_string -> SIGNO_MENOR_QUE TIPO_STRING SIGNO_MAYOR_QUE','cast_string',3,'p_cast_string','analisis_sintactico.py',303),
  ('funcion -> MAIN PARENTESIS_APERTURA PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA','funcion',6,'p_funcion','analisis_sintactico.py',307),
  ('funcion -> VOID IDENTIFICADOR PARENTESIS_APERTURA PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA','funcion',7,'p_funcion','analisis_sintactico.py',308),
  ('funcion -> declaracion_general PARENTESIS_APERTURA PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA','funcion',6,'p_funcion','analisis_sintactico.py',309),
  ('funcion -> VOID IDENTIFICADOR PARENTESIS_APERTURA parametros PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA','funcion',8,'p_funcion','analisis_sintactico.py',310),
  ('funcion -> declaracion_general PARENTESIS_APERTURA parametros PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA','funcion',7,'p_funcion','analisis_sintactico.py',311),
  ('funcion -> VOID IDENTIFICADOR funcion_flecha','funcion',3,'p_funcion','analisis_sintactico.py',312),
  ('funcion -> declaracion_general funcion_flecha','funcion',2,'p_funcion','analisis_sintactico.py',313),
  ('funcion_flecha -> PARENTESIS_APERTURA PARENTESIS_CLAUSURA SIGNO_IGUAL SIGNO_MAYOR_QUE item_funcion','funcion_flecha',5,'p_funcion_flecha','analisis_sintactico.py',316),
  ('funcion_flecha -> PARENTESIS_APERTURA parametros PARENTESIS_CLAUSURA SIGNO_IGUAL SIGNO_MAYOR_QUE item_funcion','funcion_flecha',6,'p_funcion_flecha','analisis_sintactico.py',317),
  ('parametros -> declaracion_general','parametros',1,'p_parametros','analisis_sintactico.py',320),
  ('parametros -> declaracion_general COMA parametros','parametros',3,'p_parametros','analisis_sintactico.py',321),
  ('items_funcion -> item_funcion items_funcion','items_funcion',2,'p_items_funcion','analisis_sintactico.py',324),
  ('items_funcion -> item_funcion','items_funcion',1,'p_items_funcion','analisis_sintactico.py',325),
  ('item_funcion -> instruccion','item_funcion',1,'p_item_funcion','analisis_sintactico.py',328),
  ('item_funcion -> instruccion_if','item_funcion',1,'p_item_funcion','analisis_sintactico.py',329),
  ('item_funcion -> llamadas_func PUNTO_COMA','item_funcion',2,'p_item_funcion','analisis_sintactico.py',330),
  ('item_funcion -> instruccion_while','item_funcion',1,'p_item_funcion','analisis_sintactico.py',331),
  ('item_funcion -> instruccion_for','item_funcion',1,'p_item_funcion','analisis_sintactico.py',332),
  ('item_funcion -> instruccion_switch','item_funcion',1,'p_item_funcion','analisis_sintactico.py',333),
  ('item_funcion -> inst_return','item_funcion',1,'p_item_funcion','analisis_sintactico.py',334),
  ('inst_return -> RETURN valor_general PUNTO_COMA','inst_return',3,'p_inst_return','analisis_sintactico.py',337),
]
