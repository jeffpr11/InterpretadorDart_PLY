
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaABSTRACT ACENTO_AGUDO ACENTO_GRAVE ARROBA AS ASSERT ASYNC AWAIT BARRA_INVERTIDA BREAK CASE CATCH CLASS COMA COMENTARIO COMILLA_DOBLE COMILLA_SIMPLE CONST CONTINUE CORCHETE_APERTURA CORCHETE_CLAUSURA COVARIANT DATO_CADENA_TEXTO DATO_DOBLE DATO_ENTERO DEFAULT DEFERRED DO DOBLE_PUNTO DYNAMIC ELSE ENUM ET EXPORT EXTENDS EXTERNAL FACTORY FALSE FINAL FINALLY FOR FUNCTION GET HIDE IDENTIFICADOR IF IMPLEMENTS IMPORT IN INTERFACE IS LIBRARY LLAVE_APERTURA LLAVE_CLAUSURA MAIN MIXIN NEW NULL NUMERAL ON OPERATOR PARENTESIS_APERTURA PARENTESIS_CLAUSURA PART PLECA PORCENTAJE PUNTO PUNTO_COMA RETHROW RETURN SET SHOW SIGNO_ADMIRACION_APERTURA SIGNO_ADMIRACION_CLAUSURA SIGNO_DIVISION SIGNO_IGUAL SIGNO_INTERROGACION_APERTURA SIGNO_INTERROGACION_CLAUSURA SIGNO_MAS SIGNO_MAYOR_QUE SIGNO_MENOR_QUE SIGNO_MENOS SIGNO_MULTIPLICACION STATIC SUPER SWITCH THIS THROW TIPO_BOOL TIPO_DOUBLE TIPO_FUTURE TIPO_INT TIPO_ITERABLE TIPO_LIST TIPO_MAP TIPO_NEVER TIPO_OBJECT TIPO_RUNE TIPO_SET TIPO_STREAM TIPO_STRING TIPO_SYMBOL TRUE TRY TYPEDEF VAR VIRGULILLA VOID WHILE WITH YIELDprograma : item_programa programa\n                | item_programaitem_programa : instruccion\n                    | clase\n                    | ABSTRACT clase\n                    | funcion\n                    | instruccion_if\n                    | instruccion_while\n                    | instruccion_for\n                    | instruccion_switch\n                    | importimport : IMPORT DATO_CADENA_TEXTO AS IDENTIFICADOR PUNTO_COMA\n                | IMPORT DATO_CADENA_TEXTO PUNTO_COMAinstruccion : asignacion\n                    | FINAL asignacion\n                    | declaracion\n                    | operacion_unitaria PUNTO_COMAoperacion_unitaria : IDENTIFICADOR SIGNO_MAS SIGNO_MAS\n                        | IDENTIFICADOR SIGNO_MENOS SIGNO_MENOS\n                        | SIGNO_MAS SIGNO_MAS IDENTIFICADOR\n                        | SIGNO_MENOS SIGNO_MENOS IDENTIFICADORinstruccion_while : WHILE PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURAinstruccion_for : FOR PARENTESIS_APERTURA condicion_for PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURAcondicion_for : TIPO_INT IDENTIFICADOR IN IDENTIFICADOR\n                    | condicion_for_inicial PUNTO_COMA condicion_for_terminacion PUNTO_COMA condicion_for_pasocondicion_for_inicial : TIPO_INT IDENTIFICADOR SIGNO_IGUAL IDENTIFICADOR\n                            | TIPO_INT IDENTIFICADOR SIGNO_IGUAL DATO_ENTEROcondicion_for_terminacion : IDENTIFICADOR SIGNO_MENOR_QUE DATO_ENTERO\n                                | IDENTIFICADOR SIGNO_MAYOR_QUE DATO_ENTERO\n                                | IDENTIFICADOR SIGNO_MENOR_QUE SIGNO_IGUAL DATO_ENTERO\n                                | IDENTIFICADOR SIGNO_MAYOR_QUE SIGNO_IGUAL DATO_ENTERO\n                                | IDENTIFICADOR SIGNO_IGUAL SIGNO_IGUAL DATO_ENTERO\n                                | IDENTIFICADOR SIGNO_ADMIRACION_APERTURA SIGNO_IGUAL DATO_ENTEROcondicion_for_paso : operacion_unitariainstruccion_switch : SWITCH PARENTESIS_APERTURA IDENTIFICADOR PARENTESIS_CLAUSURA LLAVE_APERTURA bloque_switch LLAVE_CLAUSURAbloque_switch : instrucciones_case instruccion_default\n                    | instrucciones_caseinstrucciones_case : instruccion_case instrucciones_case\n                            | instruccion_caseinstruccion_case : CASE valor_general DOBLE_PUNTO LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA BREAK PUNTO_COMA\n                        | CASE valor_general DOBLE_PUNTO instruccion BREAK PUNTO_COMA\n                        | CASE valor_general DOBLE_PUNTO llamadas_func PUNTO_COMA BREAK PUNTO_COMAinstruccion_default : DEFAULT DOBLE_PUNTO LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA BREAK PUNTO_COMA\n                            | DEFAULT DOBLE_PUNTO instruccion BREAK PUNTO_COMA\n                            | DEFAULT DOBLE_PUNTO llamadas_func PUNTO_COMA BREAK PUNTO_COMAinstruccion_if : IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA\n                    | IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA instruccion_elseinstruccion_else : ELSE IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA instruccion_else\n                        | ELSE IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA\n                        | ELSE LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURAitems_estructura_control : item_estructura_control items_estructura_control\n                                | item_estructura_controlitem_estructura_control : instruccion\n                                | llamadas_func PUNTO_COMA\n                                | instruccion_if\n                                | instruccion_while\n                                | instruccion_forclase : CLASS IDENTIFICADOR LLAVE_APERTURA bloque_clase LLAVE_CLAUSURAbloque_clase : item_bloque_clase bloque_clase\n                    | item_bloque_claseitem_bloque_clase : instruccion\n                        | funcionnuevo_objeto : NEW IDENTIFICADOR PARENTESIS_APERTURA PARENTESIS_CLAUSURAllamadas_func : IDENTIFICADOR PUNTO llamadas_func\n                    | llamada_func PUNTO llamadas_func\n                    | llamada_funcllamada_func : IDENTIFICADOR PARENTESIS_APERTURA params PARENTESIS_CLAUSURA\n                    | IDENTIFICADOR PARENTESIS_APERTURA PARENTESIS_CLAUSURAparams : valor_general COMA params\n                | valor_generaldeclaracion_general : tipos_declaracion IDENTIFICADOR\n                            | TIPO_MAP IDENTIFICADOR\n                            | TIPO_LIST IDENTIFICADOR\n                            | VAR IDENTIFICADOR\n                            | DYNAMIC IDENTIFICADOR\n                            | TIPO_BOOL IDENTIFICADOR\n                            | TIPO_DOUBLE IDENTIFICADOR\n                            | TIPO_INT IDENTIFICADOR\n                            | TIPO_STRING IDENTIFICADORtipos_declaracion : TIPO_SET\n                        | TIPO_SYMBOL\n                        | TIPO_OBJECT\n                        | TIPO_FUTURE\n                        | TIPO_STREAM\n                        | TIPO_ITERABLE\n                        | TIPO_NEVERdeclaracion : declaracion_general PUNTO_COMAasignacion : asignacion_bool\n                | asignacion_int\n                | asignacion_double\n                | TIPO_BOOL IDENTIFICADOR SIGNO_IGUAL expresion_logica PUNTO_COMA\n                | asignacion_string\n                | VAR IDENTIFICADOR SIGNO_IGUAL valor_general PUNTO_COMA\n                | DYNAMIC IDENTIFICADOR SIGNO_IGUAL valor_general PUNTO_COMA\n                | IDENTIFICADOR SIGNO_IGUAL valor_general PUNTO_COMA\n                | IDENTIFICADOR SIGNO_MAS SIGNO_IGUAL expresion_mat_double PUNTO_COMA\n                | IDENTIFICADOR SIGNO_MENOS SIGNO_IGUAL expresion_mat_double PUNTO_COMA\n                | TIPO_MAP IDENTIFICADOR SIGNO_IGUAL bloque_mapa PUNTO_COMA\n                | valor_mapa_lista SIGNO_IGUAL valor_general PUNTO_COMA\n                | TIPO_LIST IDENTIFICADOR SIGNO_IGUAL lista PUNTO_COMA\n                | TIPO_LIST SIGNO_MENOR_QUE IDENTIFICADOR SIGNO_MAYOR_QUE IDENTIFICADOR SIGNO_IGUAL lista PUNTO_COMA\n                | VAR IDENTIFICADOR SIGNO_IGUAL lista PUNTO_COMA\n                | VAR IDENTIFICADOR SIGNO_IGUAL conjunto_especifico PUNTO_COMA\n                | TIPO_SET cast_int IDENTIFICADOR SIGNO_IGUAL LLAVE_APERTURA lista_numeros LLAVE_CLAUSURA PUNTO_COMA\n                | TIPO_SET cast_double IDENTIFICADOR SIGNO_IGUAL LLAVE_APERTURA lista_dobles LLAVE_CLAUSURA PUNTO_COMA\n                | TIPO_SET cast_string IDENTIFICADOR SIGNO_IGUAL LLAVE_APERTURA lista_cadenas LLAVE_CLAUSURA PUNTO_COMAasignacion_string : TIPO_STRING IDENTIFICADOR SIGNO_IGUAL DATO_CADENA_TEXTO PUNTO_COMAasignacion_bool : TIPO_BOOL IDENTIFICADOR SIGNO_IGUAL expresion_bool PUNTO_COMAasignacion_int : TIPO_INT IDENTIFICADOR SIGNO_IGUAL expresion_mat_int PUNTO_COMAasignacion_double : TIPO_DOUBLE IDENTIFICADOR SIGNO_IGUAL expresion_mat_double PUNTO_COMAbloque_mapa : LLAVE_APERTURA pares_llave_valor LLAVE_CLAUSURA\n                    | LLAVE_APERTURA LLAVE_CLAUSURA\n                    | NEW TIPO_MAP PARENTESIS_APERTURA PARENTESIS_CLAUSURApares_llave_valor : par_llave_valor COMA pares_llave_valor\n                        | par_llave_valorpar_llave_valor : valor_general DOBLE_PUNTO valor_generalvalor_general : expresion_mat_double\n                    | expresion_logica\n                    | DATO_CADENA_TEXTO\n                    | llamadas_func\n                    | nuevo_objeto\n                    | NULLvalor_mapa_lista : IDENTIFICADOR CORCHETE_APERTURA valor_general CORCHETE_CLAUSURAexpresion_bool : dato_bool\n                    | dato_bool ET ET dato_bool\n                    | dato_bool PLECA PLECA dato_bool\n                    | SIGNO_ADMIRACION_APERTURA dato_booldato_bool : TRUE\n                | FALSEexpresion_mat_int : expresion_int_no_menos\n                    | SIGNO_MENOS expresion_int_no_menosexpresion_int_no_menos : expresion_int_no_menos SIGNO_MAS expresion_int_no_menos\n                    | expresion_int_no_menos SIGNO_MENOS expresion_int_no_menos\n                    | expresion_int_no_menos SIGNO_MULTIPLICACION expresion_int_no_menos\n                    | expresion_int_no_menos PORCENTAJE expresion_int_no_menos\n                    | expresion_int_no_menos VIRGULILLA SIGNO_DIVISION expresion_int_no_menos\n                    | PARENTESIS_APERTURA expresion_int_no_menos PARENTESIS_CLAUSURA\n                    | DATO_ENTERO\n                    | IDENTIFICADORexpresion_mat_double : expresion_double_no_menos\n                    | SIGNO_MENOS expresion_double_no_menosexpresion_double_no_menos : expresion_double_no_menos SIGNO_MAS expresion_double_no_menos\n                    | expresion_double_no_menos SIGNO_MENOS expresion_double_no_menos\n                    | expresion_double_no_menos SIGNO_MULTIPLICACION expresion_double_no_menos\n                    | expresion_double_no_menos PORCENTAJE expresion_double_no_menos\n                    | expresion_double_no_menos SIGNO_DIVISION expresion_double_no_menos\n                    | PARENTESIS_APERTURA expresion_double_no_menos PARENTESIS_CLAUSURA\n                    | DATO_DOBLE\n                    | DATO_ENTERO\n                    | IDENTIFICADORexpresion_logica : expresion_logica PLECA PLECA expresion_logica\n                        | expresion_logica ET ET expresion_logica\n                        | PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA\n                        | SIGNO_ADMIRACION_APERTURA expresion_logica\n                        | comparacion\n                        | TRUE\n                        | FALSE\n                        | IDENTIFICADORcomparacion : expresion_mat_double SIGNO_MENOR_QUE expresion_mat_double\n                | expresion_mat_double SIGNO_MAYOR_QUE expresion_mat_double\n                | expresion_mat_double SIGNO_MENOR_QUE SIGNO_IGUAL expresion_mat_double\n                | expresion_mat_double SIGNO_MAYOR_QUE SIGNO_IGUAL expresion_mat_double\n                | expresion_mat_double SIGNO_IGUAL SIGNO_IGUAL expresion_mat_double\n                | expresion_mat_double SIGNO_ADMIRACION_APERTURA SIGNO_IGUAL expresion_mat_doublelista : CORCHETE_APERTURA lista_general CORCHETE_CLAUSURA\n                | CORCHETE_APERTURA CORCHETE_CLAUSURA\n                | TIPO_LIST PARENTESIS_APERTURA DATO_ENTERO PARENTESIS_CLAUSURA\n                | NEW TIPO_LIST CORCHETE_APERTURA CORCHETE_CLAUSURA\n                | NEW TIPO_LIST CORCHETE_APERTURA DATO_ENTERO CORCHETE_CLAUSURAlista_general : valor_general \n                        | valor_general COMA lista_generallista_numeros : DATO_ENTERO \n                        | DATO_ENTERO COMA lista_numeroslista_dobles : DATO_DOBLE \n                        | DATO_DOBLE COMA lista_dobleslista_cadenas : DATO_CADENA_TEXTO \n                        | DATO_CADENA_TEXTO COMA lista_cadenasconjunto_especifico : cast_int LLAVE_APERTURA lista_numeros LLAVE_CLAUSURA\n                            | cast_double LLAVE_APERTURA lista_dobles LLAVE_CLAUSURA\n                            | cast_string LLAVE_APERTURA lista_cadenas LLAVE_CLAUSURAcast_int : SIGNO_MENOR_QUE TIPO_INT SIGNO_MAYOR_QUEcast_double : SIGNO_MENOR_QUE TIPO_DOUBLE SIGNO_MAYOR_QUEcast_string : SIGNO_MENOR_QUE TIPO_STRING SIGNO_MAYOR_QUEfuncion : MAIN PARENTESIS_APERTURA PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA\n                | VOID IDENTIFICADOR PARENTESIS_APERTURA PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA\n                | declaracion_general PARENTESIS_APERTURA PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA\n                | VOID IDENTIFICADOR PARENTESIS_APERTURA parametros PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA\n                | declaracion_general PARENTESIS_APERTURA parametros PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA\n                | VOID IDENTIFICADOR funcion_flecha\n                | declaracion_general funcion_flechafuncion_flecha : PARENTESIS_APERTURA PARENTESIS_CLAUSURA SIGNO_IGUAL SIGNO_MAYOR_QUE item_funcion\n                      | PARENTESIS_APERTURA parametros PARENTESIS_CLAUSURA SIGNO_IGUAL SIGNO_MAYOR_QUE item_funcionparametros : declaracion_general\n                    | declaracion_general COMA parametrositems_funcion : item_funcion items_funcion\n                    | item_funcionitem_funcion : instruccion\n                    | instruccion_if\n                    | llamadas_func PUNTO_COMA\n                    | instruccion_while\n                    | instruccion_for\n                    | instruccion_switch\n                    | inst_returninst_return : RETURN valor_general PUNTO_COMA'
    
_lr_action_items = {'ABSTRACT':([0,2,3,4,6,7,8,9,10,11,12,14,26,27,28,30,50,51,62,71,72,132,154,179,243,261,286,287,290,291,293,294,295,296,319,320,321,325,326,327,336,337,343,348,349,357,367,369,377,378,429,430,432,433,434,437,438,448,475,476,490,491,492,493,511,527,528,],[5,5,-3,-4,-6,-7,-8,-9,-10,-11,-14,-16,-88,-89,-90,-92,-5,-15,-17,-190,-87,-189,-13,-95,-99,-58,-96,-97,-197,-198,-200,-201,-202,-203,-12,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,-107,-184,-199,-186,-191,-204,-185,-188,-192,-46,-22,-23,-35,-187,-47,-101,-104,-105,-106,-50,-49,-48,]),'FINAL':([0,2,3,4,6,7,8,9,10,11,12,14,26,27,28,30,50,51,62,71,72,105,132,154,174,175,176,179,202,206,243,261,286,287,289,290,291,293,294,295,296,304,308,309,311,312,313,319,320,321,325,326,327,336,337,343,348,349,357,367,369,376,377,378,380,382,383,385,386,387,429,430,432,433,434,436,437,438,448,475,476,484,485,490,491,492,493,495,496,499,511,523,527,528,],[13,13,-3,-4,-6,-7,-8,-9,-10,-11,-14,-16,-88,-89,-90,-92,-5,-15,-17,-190,-87,13,-189,-13,13,-61,-62,-95,13,13,-99,-58,-96,-97,13,-197,-198,-200,-201,-202,-203,13,13,13,13,13,13,-12,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,-107,-184,-199,13,-186,-191,13,13,-53,-55,-56,-57,-204,-185,-188,-192,-46,-54,-22,-23,-35,-187,-47,13,13,-101,-104,-105,-106,13,13,13,-50,13,-49,-48,]),'CLASS':([0,2,3,4,5,6,7,8,9,10,11,12,14,26,27,28,30,50,51,62,71,72,132,154,179,243,261,286,287,290,291,293,294,295,296,319,320,321,325,326,327,336,337,343,348,349,357,367,369,377,378,429,430,432,433,434,437,438,448,475,476,490,491,492,493,511,527,528,],[16,16,-3,-4,16,-6,-7,-8,-9,-10,-11,-14,-16,-88,-89,-90,-92,-5,-15,-17,-190,-87,-189,-13,-95,-99,-58,-96,-97,-197,-198,-200,-201,-202,-203,-12,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,-107,-184,-199,-186,-191,-204,-185,-188,-192,-46,-22,-23,-35,-187,-47,-101,-104,-105,-106,-50,-49,-48,]),'MAIN':([0,2,3,4,6,7,8,9,10,11,12,14,26,27,28,30,50,51,62,71,72,105,132,154,174,175,176,179,243,261,286,287,290,291,293,294,295,296,319,320,321,325,326,327,336,337,343,348,349,357,367,369,377,378,429,430,432,433,434,437,438,448,475,476,490,491,492,493,511,527,528,],[18,18,-3,-4,-6,-7,-8,-9,-10,-11,-14,-16,-88,-89,-90,-92,-5,-15,-17,-190,-87,18,-189,-13,18,-61,-62,-95,-99,-58,-96,-97,-197,-198,-200,-201,-202,-203,-12,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,-107,-184,-199,-186,-191,-204,-185,-188,-192,-46,-22,-23,-35,-187,-47,-101,-104,-105,-106,-50,-49,-48,]),'VOID':([0,2,3,4,6,7,8,9,10,11,12,14,26,27,28,30,50,51,62,71,72,105,132,154,174,175,176,179,243,261,286,287,290,291,293,294,295,296,319,320,321,325,326,327,336,337,343,348,349,357,367,369,377,378,429,430,432,433,434,437,438,448,475,476,490,491,492,493,511,527,528,],[19,19,-3,-4,-6,-7,-8,-9,-10,-11,-14,-16,-88,-89,-90,-92,-5,-15,-17,-190,-87,19,-189,-13,19,-61,-62,-95,-99,-58,-96,-97,-197,-198,-200,-201,-202,-203,-12,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,-107,-184,-199,-186,-191,-204,-185,-188,-192,-46,-22,-23,-35,-187,-47,-101,-104,-105,-106,-50,-49,-48,]),'IF':([0,2,3,4,6,7,8,9,10,11,12,14,26,27,28,30,50,51,62,71,72,132,154,179,202,206,243,261,286,287,289,290,291,293,294,295,296,304,308,309,311,312,313,319,320,321,325,326,327,336,337,343,348,349,357,367,369,376,377,378,380,382,383,385,386,387,429,430,432,433,434,436,437,438,448,475,476,477,490,491,492,493,495,496,499,511,523,527,528,],[21,21,-3,-4,-6,-7,-8,-9,-10,-11,-14,-16,-88,-89,-90,-92,-5,-15,-17,-190,-87,-189,-13,-95,21,21,-99,-58,-96,-97,21,-197,-198,-200,-201,-202,-203,21,21,21,21,21,21,-12,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,-107,-184,-199,21,-186,-191,21,21,-53,-55,-56,-57,-204,-185,-188,-192,-46,-54,-22,-23,-35,-187,-47,494,-101,-104,-105,-106,21,21,21,-50,21,-49,-48,]),'WHILE':([0,2,3,4,6,7,8,9,10,11,12,14,26,27,28,30,50,51,62,71,72,132,154,179,202,206,243,261,286,287,289,290,291,293,294,295,296,304,308,309,311,312,313,319,320,321,325,326,327,336,337,343,348,349,357,367,369,376,377,378,380,382,383,385,386,387,429,430,432,433,434,436,437,438,448,475,476,490,491,492,493,495,496,499,511,523,527,528,],[22,22,-3,-4,-6,-7,-8,-9,-10,-11,-14,-16,-88,-89,-90,-92,-5,-15,-17,-190,-87,-189,-13,-95,22,22,-99,-58,-96,-97,22,-197,-198,-200,-201,-202,-203,22,22,22,22,22,22,-12,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,-107,-184,-199,22,-186,-191,22,22,-53,-55,-56,-57,-204,-185,-188,-192,-46,-54,-22,-23,-35,-187,-47,-101,-104,-105,-106,22,22,22,-50,22,-49,-48,]),'FOR':([0,2,3,4,6,7,8,9,10,11,12,14,26,27,28,30,50,51,62,71,72,132,154,179,202,206,243,261,286,287,289,290,291,293,294,295,296,304,308,309,311,312,313,319,320,321,325,326,327,336,337,343,348,349,357,367,369,376,377,378,380,382,383,385,386,387,429,430,432,433,434,436,437,438,448,475,476,490,491,492,493,495,496,499,511,523,527,528,],[23,23,-3,-4,-6,-7,-8,-9,-10,-11,-14,-16,-88,-89,-90,-92,-5,-15,-17,-190,-87,-189,-13,-95,23,23,-99,-58,-96,-97,23,-197,-198,-200,-201,-202,-203,23,23,23,23,23,23,-12,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,-107,-184,-199,23,-186,-191,23,23,-53,-55,-56,-57,-204,-185,-188,-192,-46,-54,-22,-23,-35,-187,-47,-101,-104,-105,-106,23,23,23,-50,23,-49,-48,]),'SWITCH':([0,2,3,4,6,7,8,9,10,11,12,14,26,27,28,30,50,51,62,71,72,132,154,179,202,206,243,261,286,287,289,290,291,293,294,295,296,304,308,309,319,320,321,325,326,327,336,337,343,348,349,357,367,369,376,377,378,380,429,430,432,433,434,437,438,448,475,476,490,491,492,493,511,527,528,],[24,24,-3,-4,-6,-7,-8,-9,-10,-11,-14,-16,-88,-89,-90,-92,-5,-15,-17,-190,-87,-189,-13,-95,24,24,-99,-58,-96,-97,24,-197,-198,-200,-201,-202,-203,24,24,24,-12,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,-107,-184,-199,24,-186,-191,24,-204,-185,-188,-192,-46,-22,-23,-35,-187,-47,-101,-104,-105,-106,-50,-49,-48,]),'IMPORT':([0,2,3,4,6,7,8,9,10,11,12,14,26,27,28,30,50,51,62,71,72,132,154,179,243,261,286,287,290,291,293,294,295,296,319,320,321,325,326,327,336,337,343,348,349,357,367,369,377,378,429,430,432,433,434,437,438,448,475,476,490,491,492,493,511,527,528,],[25,25,-3,-4,-6,-7,-8,-9,-10,-11,-14,-16,-88,-89,-90,-92,-5,-15,-17,-190,-87,-189,-13,-95,-99,-58,-96,-97,-197,-198,-200,-201,-202,-203,-12,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,-107,-184,-199,-186,-191,-204,-185,-188,-192,-46,-22,-23,-35,-187,-47,-101,-104,-105,-106,-50,-49,-48,]),'TIPO_BOOL':([0,2,3,4,6,7,8,9,10,11,12,13,14,26,27,28,30,50,51,62,70,71,72,105,131,132,154,174,175,176,179,202,205,206,243,261,286,287,289,290,291,293,294,295,296,304,308,309,311,312,313,319,320,321,325,326,327,336,337,343,348,349,357,367,369,376,377,378,380,382,383,385,386,387,429,430,432,433,434,436,437,438,448,475,476,484,485,490,491,492,493,495,496,499,511,523,527,528,],[29,29,-3,-4,-6,-7,-8,-9,-10,-11,-14,52,-16,-88,-89,-90,-92,-5,-15,-17,140,-190,-87,29,140,-189,-13,29,-61,-62,-95,299,140,299,-99,-58,-96,-97,299,-197,-198,-200,-201,-202,-203,299,299,299,299,299,299,-12,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,-107,-184,-199,299,-186,-191,299,299,-53,-55,-56,-57,-204,-185,-188,-192,-46,-54,-22,-23,-35,-187,-47,299,299,-101,-104,-105,-106,299,299,299,-50,299,-49,-48,]),'VAR':([0,2,3,4,6,7,8,9,10,11,12,13,14,26,27,28,30,50,51,62,70,71,72,105,131,132,154,174,175,176,179,202,205,206,243,261,286,287,289,290,291,293,294,295,296,304,308,309,311,312,313,319,320,321,325,326,327,336,337,343,348,349,357,367,369,376,377,378,380,382,383,385,386,387,429,430,432,433,434,436,437,438,448,475,476,484,485,490,491,492,493,495,496,499,511,523,527,528,],[31,31,-3,-4,-6,-7,-8,-9,-10,-11,-14,54,-16,-88,-89,-90,-92,-5,-15,-17,138,-190,-87,31,138,-189,-13,31,-61,-62,-95,31,138,31,-99,-58,-96,-97,31,-197,-198,-200,-201,-202,-203,31,31,31,31,31,31,-12,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,-107,-184,-199,31,-186,-191,31,31,-53,-55,-56,-57,-204,-185,-188,-192,-46,-54,-22,-23,-35,-187,-47,31,31,-101,-104,-105,-106,31,31,31,-50,31,-49,-48,]),'DYNAMIC':([0,2,3,4,6,7,8,9,10,11,12,13,14,26,27,28,30,50,51,62,70,71,72,105,131,132,154,174,175,176,179,202,205,206,243,261,286,287,289,290,291,293,294,295,296,304,308,309,311,312,313,319,320,321,325,326,327,336,337,343,348,349,357,367,369,376,377,378,380,382,383,385,386,387,429,430,432,433,434,436,437,438,448,475,476,484,485,490,491,492,493,495,496,499,511,523,527,528,],[32,32,-3,-4,-6,-7,-8,-9,-10,-11,-14,55,-16,-88,-89,-90,-92,-5,-15,-17,139,-190,-87,32,139,-189,-13,32,-61,-62,-95,32,139,32,-99,-58,-96,-97,32,-197,-198,-200,-201,-202,-203,32,32,32,32,32,32,-12,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,-107,-184,-199,32,-186,-191,32,32,-53,-55,-56,-57,-204,-185,-188,-192,-46,-54,-22,-23,-35,-187,-47,32,32,-101,-104,-105,-106,32,32,32,-50,32,-49,-48,]),'IDENTIFICADOR':([0,2,3,4,6,7,8,9,10,11,12,13,14,16,19,26,27,28,29,30,31,32,35,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,54,55,56,57,59,60,61,62,64,67,71,72,73,74,76,81,82,84,86,87,88,89,105,115,116,117,122,126,128,132,136,137,138,139,140,141,142,143,144,150,153,154,155,156,157,170,171,174,175,176,177,178,179,180,181,186,187,188,189,190,192,197,202,206,221,226,233,235,241,243,246,250,251,252,257,258,261,269,271,272,273,274,275,286,287,289,290,291,293,294,295,296,298,299,301,302,303,304,308,309,311,312,313,314,315,319,320,321,325,326,327,336,337,343,348,349,350,351,352,353,357,359,367,369,376,377,378,380,382,383,385,386,387,393,401,405,415,416,426,429,430,432,433,434,436,437,438,448,475,476,484,485,490,491,492,493,495,496,499,502,511,523,527,528,],[17,17,-3,-4,-6,-7,-8,-9,-10,-11,-14,53,-16,63,69,-88,-89,-90,78,-92,79,80,83,85,-80,91,92,93,94,-81,-82,-83,-84,-85,-86,-5,-15,95,98,99,100,101,102,103,104,-17,106,106,-190,-87,146,146,152,158,159,106,163,164,165,166,17,193,146,146,198,193,193,-189,209,210,211,212,213,214,215,216,-80,220,223,-13,146,106,106,193,254,17,-61,-62,263,106,-95,193,193,193,193,193,193,193,193,263,297,297,317,146,106,198,106,-99,344,-181,-182,-183,254,254,-58,193,193,193,193,146,146,-96,-97,297,-197,-198,-200,-201,-202,-203,106,371,372,373,374,297,297,297,297,297,297,390,391,-12,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,254,254,254,254,-107,106,-184,-199,297,-186,-191,297,297,-53,-55,-56,-57,441,106,106,106,106,254,-204,-185,-188,-192,-46,-54,-22,-23,-35,-187,-47,297,297,-101,-104,-105,-106,297,297,297,146,-50,297,-49,-48,]),'TIPO_MAP':([0,2,3,4,6,7,8,9,10,11,12,13,14,26,27,28,30,50,51,62,70,71,72,105,131,132,154,174,175,176,179,202,205,206,242,243,261,286,287,289,290,291,293,294,295,296,304,308,309,311,312,313,319,320,321,325,326,327,336,337,343,348,349,357,367,369,376,377,378,380,382,383,385,386,387,429,430,432,433,434,436,437,438,448,475,476,484,485,490,491,492,493,495,496,499,511,523,527,528,],[35,35,-3,-4,-6,-7,-8,-9,-10,-11,-14,56,-16,-88,-89,-90,-92,-5,-15,-17,136,-190,-87,35,136,-189,-13,35,-61,-62,-95,35,136,35,342,-99,-58,-96,-97,35,-197,-198,-200,-201,-202,-203,35,35,35,35,35,35,-12,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,-107,-184,-199,35,-186,-191,35,35,-53,-55,-56,-57,-204,-185,-188,-192,-46,-54,-22,-23,-35,-187,-47,35,35,-101,-104,-105,-106,35,35,35,-50,35,-49,-48,]),'TIPO_LIST':([0,2,3,4,6,7,8,9,10,11,12,13,14,26,27,28,30,50,51,62,70,71,72,105,131,132,154,156,162,174,175,176,179,202,205,206,235,243,245,261,286,287,289,290,291,293,294,295,296,304,308,309,311,312,313,319,320,321,325,326,327,336,337,343,348,349,357,367,369,376,377,378,380,382,383,385,386,387,418,429,430,432,433,434,436,437,438,448,475,476,484,485,490,491,492,493,495,496,499,511,523,527,528,],[37,37,-3,-4,-6,-7,-8,-9,-10,-11,-14,57,-16,-88,-89,-90,-92,-5,-15,-17,137,-190,-87,37,137,-189,-13,234,234,37,-61,-62,-95,37,137,37,332,-99,332,-58,-96,-97,37,-197,-198,-200,-201,-202,-203,37,37,37,37,37,37,-12,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,-107,-184,-199,37,-186,-191,37,37,-53,-55,-56,-57,234,-204,-185,-188,-192,-46,-54,-22,-23,-35,-187,-47,37,37,-101,-104,-105,-106,37,37,37,-50,37,-49,-48,]),'TIPO_SET':([0,2,3,4,6,7,8,9,10,11,12,13,14,26,27,28,30,50,51,62,70,71,72,105,131,132,154,174,175,176,179,202,205,206,243,261,286,287,289,290,291,293,294,295,296,304,308,309,311,312,313,319,320,321,325,326,327,336,337,343,348,349,357,367,369,376,377,378,380,382,383,385,386,387,429,430,432,433,434,436,437,438,448,475,476,484,485,490,491,492,493,495,496,499,511,523,527,528,],[38,38,-3,-4,-6,-7,-8,-9,-10,-11,-14,58,-16,-88,-89,-90,-92,-5,-15,-17,144,-190,-87,38,144,-189,-13,38,-61,-62,-95,38,144,38,-99,-58,-96,-97,38,-197,-198,-200,-201,-202,-203,38,38,38,38,38,38,-12,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,-107,-184,-199,38,-186,-191,38,38,-53,-55,-56,-57,-204,-185,-188,-192,-46,-54,-22,-23,-35,-187,-47,38,38,-101,-104,-105,-106,38,38,38,-50,38,-49,-48,]),'SIGNO_MAS':([0,2,3,4,6,7,8,9,10,11,12,14,17,26,27,28,30,33,50,51,53,62,65,71,72,105,106,114,123,124,132,146,154,174,175,176,179,191,193,195,202,206,243,254,256,259,261,276,277,278,279,280,281,283,286,287,289,290,291,293,294,295,296,297,304,308,309,311,312,313,319,320,321,325,326,327,336,337,343,348,349,355,356,357,367,369,376,377,378,380,382,383,385,386,387,393,422,423,424,425,427,429,430,432,433,434,436,437,438,441,448,474,475,476,478,484,485,490,491,492,493,495,496,499,511,523,527,528,],[33,33,-3,-4,-6,-7,-8,-9,-10,-11,-14,-16,65,-88,-89,-90,-92,81,-5,-15,96,-17,125,-190,-87,33,-150,186,-148,-149,-189,-150,-13,33,-61,-62,-95,186,-150,186,33,33,-99,-139,350,-138,-58,186,186,186,186,186,186,-147,-96,-97,33,-197,-198,-200,-201,-202,-203,65,33,33,33,33,33,33,-12,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,350,350,-107,-184,-199,33,-186,-191,33,33,-53,-55,-56,-57,33,350,350,350,350,-137,-204,-185,-188,-192,-46,-54,-22,-23,478,-35,350,-187,-47,125,33,33,-101,-104,-105,-106,33,33,33,-50,33,-49,-48,]),'SIGNO_MENOS':([0,2,3,4,6,7,8,9,10,11,12,14,17,26,27,28,30,34,50,51,53,62,64,66,67,71,72,73,74,84,105,106,114,116,117,123,124,126,128,132,146,154,155,156,157,170,171,174,175,176,178,179,180,181,191,193,195,202,206,226,233,241,243,254,256,259,261,269,271,272,273,274,275,276,277,278,279,280,281,283,286,287,289,290,291,293,294,295,296,297,298,304,308,309,311,312,313,319,320,321,325,326,327,336,337,343,348,349,355,356,357,359,367,369,376,377,378,380,382,383,385,386,387,393,401,405,415,416,422,423,424,425,427,429,430,432,433,434,436,437,438,441,448,474,475,476,479,484,485,490,491,492,493,495,496,499,502,511,523,527,528,],[34,34,-3,-4,-6,-7,-8,-9,-10,-11,-14,-16,66,-88,-89,-90,-92,82,-5,-15,97,-17,115,127,115,-190,-87,115,115,115,34,-150,187,115,115,-148,-149,115,115,-189,-150,-13,115,115,115,115,257,34,-61,-62,115,-95,115,115,187,-150,187,34,34,115,115,115,-99,-139,351,-138,-58,115,115,115,115,115,115,187,187,187,187,187,187,-147,-96,-97,34,-197,-198,-200,-201,-202,-203,66,115,34,34,34,34,34,34,-12,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,351,351,-107,115,-184,-199,34,-186,-191,34,34,-53,-55,-56,-57,34,115,115,115,115,351,351,351,351,-137,-204,-185,-188,-192,-46,-54,-22,-23,479,-35,351,-187,-47,127,34,34,-101,-104,-105,-106,34,34,34,115,-50,34,-49,-48,]),'TIPO_DOUBLE':([0,2,3,4,6,7,8,9,10,11,12,13,14,26,27,28,30,50,51,62,70,71,72,90,105,131,132,154,174,175,176,179,202,205,206,243,261,286,287,289,290,291,293,294,295,296,304,308,309,311,312,313,319,320,321,325,326,327,336,337,343,348,349,357,367,369,376,377,378,380,382,383,385,386,387,429,430,432,433,434,436,437,438,448,475,476,484,485,490,491,492,493,495,496,499,511,523,527,528,],[40,40,-3,-4,-6,-7,-8,-9,-10,-11,-14,60,-16,-88,-89,-90,-92,-5,-15,-17,141,-190,-87,168,40,141,-189,-13,40,-61,-62,-95,302,141,302,-99,-58,-96,-97,302,-197,-198,-200,-201,-202,-203,302,302,302,302,302,302,-12,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,-107,-184,-199,302,-186,-191,302,302,-53,-55,-56,-57,-204,-185,-188,-192,-46,-54,-22,-23,-35,-187,-47,302,302,-101,-104,-105,-106,302,302,302,-50,302,-49,-48,]),'TIPO_INT':([0,2,3,4,6,7,8,9,10,11,12,13,14,26,27,28,30,50,51,62,70,71,72,75,90,105,131,132,154,174,175,176,179,202,205,206,243,261,286,287,289,290,291,293,294,295,296,304,308,309,311,312,313,319,320,321,325,326,327,336,337,343,348,349,357,367,369,376,377,378,380,382,383,385,386,387,429,430,432,433,434,436,437,438,448,475,476,484,485,490,491,492,493,495,496,499,511,523,527,528,],[41,41,-3,-4,-6,-7,-8,-9,-10,-11,-14,59,-16,-88,-89,-90,-92,-5,-15,-17,142,-190,-87,150,167,41,142,-189,-13,41,-61,-62,-95,301,142,301,-99,-58,-96,-97,301,-197,-198,-200,-201,-202,-203,301,301,301,301,301,301,-12,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,-107,-184,-199,301,-186,-191,301,301,-53,-55,-56,-57,-204,-185,-188,-192,-46,-54,-22,-23,-35,-187,-47,301,301,-101,-104,-105,-106,301,301,301,-50,301,-49,-48,]),'TIPO_STRING':([0,2,3,4,6,7,8,9,10,11,12,13,14,26,27,28,30,50,51,62,70,71,72,90,105,131,132,154,174,175,176,179,202,205,206,243,261,286,287,289,290,291,293,294,295,296,304,308,309,311,312,313,319,320,321,325,326,327,336,337,343,348,349,357,367,369,376,377,378,380,382,383,385,386,387,429,430,432,433,434,436,437,438,448,475,476,484,485,490,491,492,493,495,496,499,511,523,527,528,],[42,42,-3,-4,-6,-7,-8,-9,-10,-11,-14,61,-16,-88,-89,-90,-92,-5,-15,-17,143,-190,-87,169,42,143,-189,-13,42,-61,-62,-95,303,143,303,-99,-58,-96,-97,303,-197,-198,-200,-201,-202,-203,303,303,303,303,303,303,-12,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,-107,-184,-199,303,-186,-191,303,303,-53,-55,-56,-57,-204,-185,-188,-192,-46,-54,-22,-23,-35,-187,-47,303,303,-101,-104,-105,-106,303,303,303,-50,303,-49,-48,]),'TIPO_SYMBOL':([0,2,3,4,6,7,8,9,10,11,12,14,26,27,28,30,50,51,62,70,71,72,105,131,132,154,174,175,176,179,202,205,206,243,261,286,287,289,290,291,293,294,295,296,304,308,309,311,312,313,319,320,321,325,326,327,336,337,343,348,349,357,367,369,376,377,378,380,382,383,385,386,387,429,430,432,433,434,436,437,438,448,475,476,484,485,490,491,492,493,495,496,499,511,523,527,528,],[43,43,-3,-4,-6,-7,-8,-9,-10,-11,-14,-16,-88,-89,-90,-92,-5,-15,-17,43,-190,-87,43,43,-189,-13,43,-61,-62,-95,43,43,43,-99,-58,-96,-97,43,-197,-198,-200,-201,-202,-203,43,43,43,43,43,43,-12,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,-107,-184,-199,43,-186,-191,43,43,-53,-55,-56,-57,-204,-185,-188,-192,-46,-54,-22,-23,-35,-187,-47,43,43,-101,-104,-105,-106,43,43,43,-50,43,-49,-48,]),'TIPO_OBJECT':([0,2,3,4,6,7,8,9,10,11,12,14,26,27,28,30,50,51,62,70,71,72,105,131,132,154,174,175,176,179,202,205,206,243,261,286,287,289,290,291,293,294,295,296,304,308,309,311,312,313,319,320,321,325,326,327,336,337,343,348,349,357,367,369,376,377,378,380,382,383,385,386,387,429,430,432,433,434,436,437,438,448,475,476,484,485,490,491,492,493,495,496,499,511,523,527,528,],[44,44,-3,-4,-6,-7,-8,-9,-10,-11,-14,-16,-88,-89,-90,-92,-5,-15,-17,44,-190,-87,44,44,-189,-13,44,-61,-62,-95,44,44,44,-99,-58,-96,-97,44,-197,-198,-200,-201,-202,-203,44,44,44,44,44,44,-12,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,-107,-184,-199,44,-186,-191,44,44,-53,-55,-56,-57,-204,-185,-188,-192,-46,-54,-22,-23,-35,-187,-47,44,44,-101,-104,-105,-106,44,44,44,-50,44,-49,-48,]),'TIPO_FUTURE':([0,2,3,4,6,7,8,9,10,11,12,14,26,27,28,30,50,51,62,70,71,72,105,131,132,154,174,175,176,179,202,205,206,243,261,286,287,289,290,291,293,294,295,296,304,308,309,311,312,313,319,320,321,325,326,327,336,337,343,348,349,357,367,369,376,377,378,380,382,383,385,386,387,429,430,432,433,434,436,437,438,448,475,476,484,485,490,491,492,493,495,496,499,511,523,527,528,],[45,45,-3,-4,-6,-7,-8,-9,-10,-11,-14,-16,-88,-89,-90,-92,-5,-15,-17,45,-190,-87,45,45,-189,-13,45,-61,-62,-95,45,45,45,-99,-58,-96,-97,45,-197,-198,-200,-201,-202,-203,45,45,45,45,45,45,-12,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,-107,-184,-199,45,-186,-191,45,45,-53,-55,-56,-57,-204,-185,-188,-192,-46,-54,-22,-23,-35,-187,-47,45,45,-101,-104,-105,-106,45,45,45,-50,45,-49,-48,]),'TIPO_STREAM':([0,2,3,4,6,7,8,9,10,11,12,14,26,27,28,30,50,51,62,70,71,72,105,131,132,154,174,175,176,179,202,205,206,243,261,286,287,289,290,291,293,294,295,296,304,308,309,311,312,313,319,320,321,325,326,327,336,337,343,348,349,357,367,369,376,377,378,380,382,383,385,386,387,429,430,432,433,434,436,437,438,448,475,476,484,485,490,491,492,493,495,496,499,511,523,527,528,],[46,46,-3,-4,-6,-7,-8,-9,-10,-11,-14,-16,-88,-89,-90,-92,-5,-15,-17,46,-190,-87,46,46,-189,-13,46,-61,-62,-95,46,46,46,-99,-58,-96,-97,46,-197,-198,-200,-201,-202,-203,46,46,46,46,46,46,-12,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,-107,-184,-199,46,-186,-191,46,46,-53,-55,-56,-57,-204,-185,-188,-192,-46,-54,-22,-23,-35,-187,-47,46,46,-101,-104,-105,-106,46,46,46,-50,46,-49,-48,]),'TIPO_ITERABLE':([0,2,3,4,6,7,8,9,10,11,12,14,26,27,28,30,50,51,62,70,71,72,105,131,132,154,174,175,176,179,202,205,206,243,261,286,287,289,290,291,293,294,295,296,304,308,309,311,312,313,319,320,321,325,326,327,336,337,343,348,349,357,367,369,376,377,378,380,382,383,385,386,387,429,430,432,433,434,436,437,438,448,475,476,484,485,490,491,492,493,495,496,499,511,523,527,528,],[47,47,-3,-4,-6,-7,-8,-9,-10,-11,-14,-16,-88,-89,-90,-92,-5,-15,-17,47,-190,-87,47,47,-189,-13,47,-61,-62,-95,47,47,47,-99,-58,-96,-97,47,-197,-198,-200,-201,-202,-203,47,47,47,47,47,47,-12,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,-107,-184,-199,47,-186,-191,47,47,-53,-55,-56,-57,-204,-185,-188,-192,-46,-54,-22,-23,-35,-187,-47,47,47,-101,-104,-105,-106,47,47,47,-50,47,-49,-48,]),'TIPO_NEVER':([0,2,3,4,6,7,8,9,10,11,12,14,26,27,28,30,50,51,62,70,71,72,105,131,132,154,174,175,176,179,202,205,206,243,261,286,287,289,290,291,293,294,295,296,304,308,309,311,312,313,319,320,321,325,326,327,336,337,343,348,349,357,367,369,376,377,378,380,382,383,385,386,387,429,430,432,433,434,436,437,438,448,475,476,484,485,490,491,492,493,495,496,499,511,523,527,528,],[48,48,-3,-4,-6,-7,-8,-9,-10,-11,-14,-16,-88,-89,-90,-92,-5,-15,-17,48,-190,-87,48,48,-189,-13,48,-61,-62,-95,48,48,48,-99,-58,-96,-97,48,-197,-198,-200,-201,-202,-203,48,48,48,48,48,48,-12,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,-107,-184,-199,48,-186,-191,48,48,-53,-55,-56,-57,-204,-185,-188,-192,-46,-54,-22,-23,-35,-187,-47,48,48,-101,-104,-105,-106,48,48,48,-50,48,-49,-48,]),'$end':([1,2,3,4,6,7,8,9,10,11,12,14,26,27,28,30,49,50,51,62,71,72,132,154,179,243,261,286,287,290,291,293,294,295,296,319,320,321,325,326,327,336,337,343,348,349,357,367,369,377,378,429,430,432,433,434,437,438,448,475,476,490,491,492,493,511,527,528,],[0,-2,-3,-4,-6,-7,-8,-9,-10,-11,-14,-16,-88,-89,-90,-92,-1,-5,-15,-17,-190,-87,-189,-13,-95,-99,-58,-96,-97,-197,-198,-200,-201,-202,-203,-12,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,-107,-184,-199,-186,-191,-204,-185,-188,-192,-46,-22,-23,-35,-187,-47,-101,-104,-105,-106,-50,-49,-48,]),'LLAVE_CLAUSURA':([12,14,26,27,28,30,51,62,71,72,106,108,109,110,111,112,113,114,118,119,120,121,123,124,132,146,173,174,175,176,179,191,193,196,241,243,262,264,266,268,270,276,277,278,279,280,282,283,284,286,287,288,289,290,291,293,294,295,296,307,320,321,325,326,327,336,337,338,340,343,348,349,357,358,360,361,362,363,364,365,366,367,368,369,375,377,378,379,381,382,383,385,386,387,388,389,398,399,400,408,409,410,411,412,413,419,420,421,429,430,431,432,433,434,435,436,437,438,448,449,451,467,468,475,476,487,488,489,490,491,492,493,503,504,507,511,513,516,520,522,524,525,526,527,528,],[-14,-16,-88,-89,-90,-92,-15,-17,-190,-87,-150,-117,-118,-119,-120,-121,-122,-140,-155,-156,-157,-66,-148,-149,-189,-158,261,-60,-61,-62,-95,-141,-150,-154,339,-99,-59,-64,-68,-159,-160,-142,-143,-144,-145,-146,-153,-147,-65,-96,-97,367,-196,-197,-198,-200,-201,-202,-203,377,-91,-108,-93,-102,-103,-94,-98,414,-115,-100,-110,-109,-107,-67,-161,-162,-163,-164,-151,-152,-63,-184,-195,-199,430,-186,-191,432,434,-52,-53,-55,-56,-57,437,438,448,-37,-39,461,-172,463,-174,465,-176,471,472,473,-204,-185,475,-188,-192,-46,-51,-54,-22,-23,-35,-36,-38,-114,-116,-187,-47,-173,-175,-177,-101,-104,-105,-106,511,512,515,-50,-44,-41,-45,-42,-43,-40,527,-49,-48,]),'RETURN':([12,14,26,27,28,30,51,62,72,179,202,206,243,286,287,289,290,291,293,294,295,296,304,308,309,320,321,325,326,327,336,337,343,348,349,357,369,376,380,429,434,437,438,448,476,490,491,492,493,511,527,528,],[-14,-16,-88,-89,-90,-92,-15,-17,-87,-95,298,298,-99,-96,-97,298,-197,-198,-200,-201,-202,-203,298,298,298,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,-107,-199,298,298,-204,-46,-22,-23,-35,-47,-101,-104,-105,-106,-50,-49,-48,]),'BREAK':([12,14,26,27,28,30,51,62,72,179,243,286,287,320,321,325,326,327,336,337,343,348,349,357,490,491,492,493,497,500,506,509,512,515,],[-14,-16,-88,-89,-90,-92,-15,-17,-87,-95,-99,-96,-97,-91,-108,-93,-102,-103,-94,-98,-100,-110,-109,-107,-101,-104,-105,-106,505,508,514,517,519,521,]),'PUNTO_COMA':([15,20,77,78,79,80,83,85,91,92,93,94,106,107,108,109,110,111,112,113,114,118,119,120,121,123,124,125,127,146,151,158,159,161,191,193,196,199,200,223,224,225,227,228,229,230,231,232,239,240,244,253,254,255,256,259,260,264,266,268,270,276,277,278,279,280,282,283,284,292,300,316,322,329,339,355,358,360,361,362,363,364,365,366,370,371,372,373,374,384,391,392,404,414,422,423,424,425,427,442,444,453,454,455,456,458,459,461,463,465,469,470,471,472,473,474,480,481,482,483,486,498,501,505,508,514,517,519,521,],[62,72,154,-76,-74,-75,-72,-73,-71,-77,-78,-79,-150,179,-117,-118,-119,-120,-121,-122,-140,-155,-156,-157,-66,-148,-149,-18,-19,-158,221,-20,-21,243,-141,-150,-154,286,287,319,320,321,-128,-129,-124,325,326,327,336,337,343,348,-139,349,-130,-138,357,-64,-68,-159,-160,-142,-143,-144,-145,-146,-153,-147,-65,369,72,393,-127,-166,-112,-131,-67,-161,-162,-163,-164,-151,-152,-63,429,-76,-78,-77,-79,436,-26,-27,-165,-111,-132,-133,-134,-135,-137,-28,-29,-125,-128,-129,-126,-167,-168,-178,-179,-180,-113,490,491,492,493,-136,-30,-31,-32,-33,-169,506,509,513,516,520,522,524,525,]),'SIGNO_IGUAL':([17,36,53,65,66,78,79,80,83,85,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,114,123,124,134,146,147,164,165,166,180,181,182,183,191,193,195,201,203,208,220,276,277,278,279,280,283,297,305,317,344,371,372,373,374,394,395,396,397,],[64,84,64,126,128,155,156,157,160,162,170,171,172,155,126,128,156,157,160,162,171,170,172,-150,182,-140,-148,-149,207,-150,182,247,248,249,269,271,272,273,-141,-150,-140,-123,207,310,315,-142,-143,-144,-145,-146,-147,64,310,396,418,155,171,170,172,443,445,446,447,]),'CORCHETE_APERTURA':([17,53,156,162,297,332,418,],[67,67,233,233,67,407,233,]),'PARENTESIS_APERTURA':([18,20,21,22,23,24,64,67,69,73,74,78,79,80,83,84,85,91,92,93,94,106,115,116,117,126,128,155,156,157,170,171,178,180,181,186,187,188,189,190,192,198,226,233,234,241,257,258,263,269,271,272,273,274,275,297,298,342,350,351,352,353,359,401,405,415,416,426,494,502,],[68,70,73,74,75,76,116,116,131,116,116,-76,-74,-75,-72,116,-73,-71,-77,-78,-79,178,192,116,116,192,192,116,116,116,192,258,116,192,192,192,192,192,192,192,192,285,116,116,331,116,258,258,178,192,192,192,192,116,116,178,116,417,258,258,258,258,116,116,116,116,116,258,502,116,]),'DATO_CADENA_TEXTO':([25,64,67,84,156,157,172,178,233,241,298,335,347,359,401,405,415,416,466,],[77,110,110,110,110,110,260,110,110,110,110,413,413,110,110,110,110,110,413,]),'SIGNO_MENOR_QUE':([37,38,57,58,106,108,114,123,124,146,147,156,191,193,195,276,277,278,279,280,283,317,],[86,90,86,90,-150,180,-140,-148,-149,-150,180,90,-141,-150,-140,-142,-143,-144,-145,-146,-147,394,]),'LLAVE_APERTURA':([63,130,134,160,203,208,217,218,219,222,236,237,238,247,248,249,250,251,252,305,477,484,485,518,],[105,202,206,241,304,309,311,312,313,318,333,334,335,345,346,347,-181,-182,-183,376,495,496,499,523,]),'NULL':([64,67,84,156,157,178,233,241,298,359,401,405,415,416,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'SIGNO_ADMIRACION_APERTURA':([64,67,73,74,84,106,108,114,116,117,123,124,146,147,155,156,157,178,191,193,195,226,233,241,274,275,276,277,278,279,280,283,298,317,359,401,405,415,416,502,],[117,117,117,117,117,-150,183,-140,117,117,-148,-149,-150,183,226,117,117,117,-141,-150,-140,117,117,117,117,117,-142,-143,-144,-145,-146,-147,117,397,117,117,117,117,117,117,]),'TRUE':([64,67,73,74,84,116,117,155,156,157,178,226,233,241,274,275,298,359,401,402,403,405,415,416,502,],[119,119,119,119,119,119,119,227,119,119,119,227,119,119,119,119,119,119,119,454,454,119,119,119,119,]),'FALSE':([64,67,73,74,84,116,117,155,156,157,178,226,233,241,274,275,298,359,401,402,403,405,415,416,502,],[120,120,120,120,120,120,120,228,120,120,120,228,120,120,120,120,120,120,120,455,455,120,120,120,120,]),'NEW':([64,67,84,156,157,160,162,178,233,241,298,359,401,405,415,416,418,],[122,122,122,235,122,242,245,122,122,122,122,122,122,122,122,122,245,]),'DATO_DOBLE':([64,67,73,74,84,115,116,117,126,128,155,156,157,170,178,180,181,186,187,188,189,190,192,226,233,241,269,271,272,273,274,275,298,334,346,359,401,405,415,416,464,502,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,411,411,123,123,123,123,123,411,123,]),'DATO_ENTERO':([64,67,73,74,84,115,116,117,126,128,155,156,157,170,171,178,180,181,186,187,188,189,190,192,226,233,241,257,258,269,271,272,273,274,275,298,315,331,333,345,350,351,352,353,359,394,395,401,405,407,415,416,426,443,445,446,447,462,502,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,259,124,124,124,124,124,124,124,124,124,124,124,124,259,259,124,124,124,124,124,124,124,392,406,409,409,259,259,259,259,124,442,444,124,124,460,124,124,259,480,481,482,483,409,124,]),'PARENTESIS_CLAUSURA':([68,70,91,106,108,109,110,111,112,113,114,118,119,120,121,123,124,125,127,131,133,135,145,146,148,149,152,158,159,178,191,193,194,195,196,204,209,210,211,212,213,214,215,216,254,259,264,265,266,267,268,270,276,277,278,279,280,281,282,283,284,285,306,356,358,360,361,362,363,364,365,366,390,406,417,422,423,424,425,427,428,439,440,474,510,],[130,134,-71,-150,-117,-118,-119,-120,-121,-122,-140,-155,-156,-157,-66,-148,-149,-18,-19,203,-193,208,217,-150,218,219,222,-20,-21,266,-141,-150,282,283,-154,305,-72,-73,-74,-75,-76,-77,-78,-79,-139,-138,-64,358,-68,-70,-159,-160,-142,-143,-144,-145,-146,283,-153,-147,-65,366,-194,427,-67,-161,-162,-163,-164,-151,-152,-63,-24,458,469,-132,-133,-134,-135,-137,-69,-25,-34,-136,518,]),'AS':([77,],[153,]),'COMA':([91,106,108,109,110,111,112,113,114,118,119,120,121,123,124,133,146,191,193,196,209,210,211,212,213,214,215,216,264,266,267,268,270,276,277,278,279,280,282,283,284,330,340,358,360,361,362,363,364,365,366,409,411,413,468,],[-71,-150,-117,-118,-119,-120,-121,-122,-140,-155,-156,-157,-66,-148,-149,205,-158,-141,-150,-154,-72,-73,-74,-75,-76,-77,-78,-79,-64,-68,359,-159,-160,-142,-143,-144,-145,-146,-153,-147,-65,405,415,-67,-161,-162,-163,-164,-151,-152,-63,462,464,466,-116,]),'PLECA':([106,109,114,118,119,120,123,124,145,146,148,184,191,193,194,196,224,227,228,229,268,270,276,277,278,279,280,282,283,324,360,361,362,363,364,365,510,],[-158,184,-140,-155,-156,-157,-148,-149,184,-158,184,274,-141,-150,184,184,184,-128,-129,324,-159,-160,-142,-143,-144,-145,-146,-153,-147,403,-161,-162,-163,-164,184,184,184,]),'ET':([106,109,114,118,119,120,123,124,145,146,148,185,191,193,194,196,224,227,228,229,268,270,276,277,278,279,280,282,283,323,360,361,362,363,364,365,510,],[-158,185,-140,-155,-156,-157,-148,-149,185,-158,185,275,-141,-150,185,185,185,-128,-129,323,-159,-160,-142,-143,-144,-145,-146,-153,-147,402,-161,-162,-163,-164,185,185,185,]),'CORCHETE_CLAUSURA':([106,108,109,110,111,112,113,114,118,119,120,121,123,124,129,146,191,193,196,233,264,266,268,270,276,277,278,279,280,282,283,284,328,330,358,360,361,362,363,364,365,366,407,457,460,],[-150,-117,-118,-119,-120,-121,-122,-140,-155,-156,-157,-66,-148,-149,201,-158,-141,-150,-154,329,-64,-68,-159,-160,-142,-143,-144,-145,-146,-153,-147,-65,404,-170,-67,-161,-162,-163,-164,-151,-152,-63,459,-171,486,]),'DOBLE_PUNTO':([106,108,109,110,111,112,113,114,118,119,120,121,123,124,146,191,193,196,264,266,268,270,276,277,278,279,280,282,283,284,341,358,360,361,362,363,364,365,366,450,452,],[-150,-117,-118,-119,-120,-121,-122,-140,-155,-156,-157,-66,-148,-149,-158,-141,-150,-154,-64,-68,-159,-160,-142,-143,-144,-145,-146,-153,-147,-65,416,-67,-161,-162,-163,-164,-151,-152,-63,484,485,]),'PUNTO':([106,121,263,266,297,358,],[177,197,177,-68,177,-67,]),'SIGNO_MULTIPLICACION':([106,114,123,124,146,191,193,195,254,256,259,276,277,278,279,280,281,283,355,356,422,423,424,425,427,474,],[-150,188,-148,-149,-150,188,-150,188,-139,352,-138,188,188,188,188,188,188,-147,352,352,352,352,352,352,-137,352,]),'PORCENTAJE':([106,114,123,124,146,191,193,195,254,256,259,276,277,278,279,280,281,283,355,356,422,423,424,425,427,474,],[-150,189,-148,-149,-150,189,-150,189,-139,353,-138,189,189,189,189,189,189,-147,353,353,353,353,353,353,-137,353,]),'SIGNO_DIVISION':([106,114,123,124,146,191,193,195,276,277,278,279,280,281,283,354,],[-150,190,-148,-149,-150,190,-150,190,190,190,190,190,190,190,-147,426,]),'SIGNO_MAYOR_QUE':([106,108,114,123,124,146,147,163,167,168,169,191,193,195,207,276,277,278,279,280,283,310,317,],[-150,181,-140,-148,-149,-150,181,246,250,251,252,-141,-150,-140,308,-142,-143,-144,-145,-146,-147,380,395,]),'IN':([220,],[314,]),'VIRGULILLA':([254,256,259,355,356,422,423,424,425,427,474,],[-139,354,-138,354,354,354,354,354,354,-137,354,]),'CASE':([318,400,516,522,525,],[401,401,-41,-42,-40,]),'DEFAULT':([399,400,451,516,522,525,],[450,-39,-38,-41,-42,-40,]),'ELSE':([434,527,],[477,477,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,2,],[1,49,]),'item_programa':([0,2,],[2,2,]),'instruccion':([0,2,105,174,202,206,289,304,308,309,311,312,313,376,380,382,484,485,495,496,499,523,],[3,3,175,175,290,290,290,290,290,290,383,383,383,290,290,383,497,500,383,383,383,383,]),'clase':([0,2,5,],[4,4,50,]),'funcion':([0,2,105,174,],[6,6,176,176,]),'instruccion_if':([0,2,202,206,289,304,308,309,311,312,313,376,380,382,495,496,499,523,],[7,7,291,291,291,291,291,291,385,385,385,291,291,385,385,385,385,385,]),'instruccion_while':([0,2,202,206,289,304,308,309,311,312,313,376,380,382,495,496,499,523,],[8,8,293,293,293,293,293,293,386,386,386,293,293,386,386,386,386,386,]),'instruccion_for':([0,2,202,206,289,304,308,309,311,312,313,376,380,382,495,496,499,523,],[9,9,294,294,294,294,294,294,387,387,387,294,294,387,387,387,387,387,]),'instruccion_switch':([0,2,202,206,289,304,308,309,376,380,],[10,10,295,295,295,295,295,295,295,295,]),'import':([0,2,],[11,11,]),'asignacion':([0,2,13,105,174,202,206,289,304,308,309,311,312,313,376,380,382,484,485,495,496,499,523,],[12,12,51,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'declaracion':([0,2,105,174,202,206,289,304,308,309,311,312,313,376,380,382,484,485,495,496,499,523,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'operacion_unitaria':([0,2,105,174,202,206,289,304,308,309,311,312,313,376,380,382,393,484,485,495,496,499,523,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,440,15,15,15,15,15,15,]),'declaracion_general':([0,2,70,105,131,174,202,205,206,289,304,308,309,311,312,313,376,380,382,484,485,495,496,499,523,],[20,20,133,20,133,20,300,133,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,]),'asignacion_bool':([0,2,13,105,174,202,206,289,304,308,309,311,312,313,376,380,382,484,485,495,496,499,523,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'asignacion_int':([0,2,13,105,174,202,206,289,304,308,309,311,312,313,376,380,382,484,485,495,496,499,523,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'asignacion_double':([0,2,13,105,174,202,206,289,304,308,309,311,312,313,376,380,382,484,485,495,496,499,523,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'asignacion_string':([0,2,13,105,174,202,206,289,304,308,309,311,312,313,376,380,382,484,485,495,496,499,523,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'valor_mapa_lista':([0,2,13,105,174,202,206,289,304,308,309,311,312,313,376,380,382,484,485,495,496,499,523,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'tipos_declaracion':([0,2,70,105,131,174,202,205,206,289,304,308,309,311,312,313,376,380,382,484,485,495,496,499,523,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'funcion_flecha':([20,69,],[71,132,]),'cast_int':([38,58,156,],[87,87,236,]),'cast_double':([38,58,156,],[88,88,237,]),'cast_string':([38,58,156,],[89,89,238,]),'valor_general':([64,67,84,156,157,178,233,241,298,359,401,405,415,416,],[107,129,161,230,239,267,330,341,370,267,452,330,341,468,]),'expresion_mat_double':([64,67,73,74,84,116,117,126,128,155,156,157,170,178,180,181,226,233,241,269,271,272,273,274,275,298,359,401,405,415,416,502,],[108,108,147,147,108,147,147,199,200,147,108,108,253,108,268,270,147,108,108,360,361,362,363,147,147,108,108,108,108,108,108,147,]),'expresion_logica':([64,67,73,74,84,116,117,155,156,157,178,226,233,241,274,275,298,359,401,405,415,416,502,],[109,109,145,148,109,194,196,224,109,109,109,196,109,109,364,365,109,109,109,109,109,109,510,]),'llamadas_func':([64,67,84,156,157,177,178,197,202,206,233,241,289,298,304,308,309,311,312,313,359,376,380,382,401,405,415,416,484,485,495,496,499,523,],[111,111,111,111,111,264,111,284,292,292,111,111,292,111,292,292,292,384,384,384,111,292,292,384,111,111,111,111,498,501,384,384,384,384,]),'nuevo_objeto':([64,67,84,156,157,178,233,241,298,359,401,405,415,416,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'expresion_double_no_menos':([64,67,73,74,84,115,116,117,126,128,155,156,157,170,178,180,181,186,187,188,189,190,192,226,233,241,269,271,272,273,274,275,298,359,401,405,415,416,502,],[114,114,114,114,114,191,195,114,114,114,114,114,114,114,114,114,114,276,277,278,279,280,281,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'comparacion':([64,67,73,74,84,116,117,155,156,157,178,226,233,241,274,275,298,359,401,405,415,416,502,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'llamada_func':([64,67,84,156,157,177,178,197,202,206,233,241,289,298,304,308,309,311,312,313,359,376,380,382,401,405,415,416,484,485,495,496,499,523,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'parametros':([70,131,205,],[135,204,306,]),'condicion_for':([75,],[149,]),'condicion_for_inicial':([75,],[151,]),'bloque_clase':([105,174,],[173,262,]),'item_bloque_clase':([105,174,],[174,174,]),'expresion_bool':([155,],[225,]),'dato_bool':([155,226,402,403,],[229,322,453,456,]),'lista':([156,162,418,],[231,244,470,]),'conjunto_especifico':([156,],[232,]),'bloque_mapa':([160,],[240,]),'expresion_mat_int':([171,],[255,]),'expresion_int_no_menos':([171,257,258,350,351,352,353,426,],[256,355,356,422,423,424,425,474,]),'params':([178,359,],[265,428,]),'items_funcion':([202,206,289,304,309,376,],[288,307,368,375,379,431,]),'item_funcion':([202,206,289,304,308,309,376,380,],[289,289,289,289,378,289,289,433,]),'inst_return':([202,206,289,304,308,309,376,380,],[296,296,296,296,296,296,296,296,]),'condicion_for_terminacion':([221,],[316,]),'lista_general':([233,405,],[328,457,]),'pares_llave_valor':([241,415,],[338,467,]),'par_llave_valor':([241,415,],[340,340,]),'items_estructura_control':([311,312,313,382,495,496,499,523,],[381,388,389,435,503,504,507,526,]),'item_estructura_control':([311,312,313,382,495,496,499,523,],[382,382,382,382,382,382,382,382,]),'bloque_switch':([318,],[398,]),'instrucciones_case':([318,400,],[399,451,]),'instruccion_case':([318,400,],[400,400,]),'lista_numeros':([333,345,462,],[408,419,487,]),'lista_dobles':([334,346,464,],[410,420,488,]),'lista_cadenas':([335,347,466,],[412,421,489,]),'condicion_for_paso':([393,],[439,]),'instruccion_default':([399,],[449,]),'instruccion_else':([434,527,],[476,528,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> item_programa programa','programa',2,'p_programa','analisis_sintactico.py',14),
  ('programa -> item_programa','programa',1,'p_programa','analisis_sintactico.py',15),
  ('item_programa -> instruccion','item_programa',1,'p_item_programa','analisis_sintactico.py',18),
  ('item_programa -> clase','item_programa',1,'p_item_programa','analisis_sintactico.py',19),
  ('item_programa -> ABSTRACT clase','item_programa',2,'p_item_programa','analisis_sintactico.py',20),
  ('item_programa -> funcion','item_programa',1,'p_item_programa','analisis_sintactico.py',21),
  ('item_programa -> instruccion_if','item_programa',1,'p_item_programa','analisis_sintactico.py',22),
  ('item_programa -> instruccion_while','item_programa',1,'p_item_programa','analisis_sintactico.py',23),
  ('item_programa -> instruccion_for','item_programa',1,'p_item_programa','analisis_sintactico.py',24),
  ('item_programa -> instruccion_switch','item_programa',1,'p_item_programa','analisis_sintactico.py',25),
  ('item_programa -> import','item_programa',1,'p_item_programa','analisis_sintactico.py',26),
  ('import -> IMPORT DATO_CADENA_TEXTO AS IDENTIFICADOR PUNTO_COMA','import',5,'p_import','analisis_sintactico.py',29),
  ('import -> IMPORT DATO_CADENA_TEXTO PUNTO_COMA','import',3,'p_import','analisis_sintactico.py',30),
  ('instruccion -> asignacion','instruccion',1,'p_instruccion','analisis_sintactico.py',33),
  ('instruccion -> FINAL asignacion','instruccion',2,'p_instruccion','analisis_sintactico.py',34),
  ('instruccion -> declaracion','instruccion',1,'p_instruccion','analisis_sintactico.py',35),
  ('instruccion -> operacion_unitaria PUNTO_COMA','instruccion',2,'p_instruccion','analisis_sintactico.py',36),
  ('operacion_unitaria -> IDENTIFICADOR SIGNO_MAS SIGNO_MAS','operacion_unitaria',3,'p_operacion_unitaria','analisis_sintactico.py',39),
  ('operacion_unitaria -> IDENTIFICADOR SIGNO_MENOS SIGNO_MENOS','operacion_unitaria',3,'p_operacion_unitaria','analisis_sintactico.py',40),
  ('operacion_unitaria -> SIGNO_MAS SIGNO_MAS IDENTIFICADOR','operacion_unitaria',3,'p_operacion_unitaria','analisis_sintactico.py',41),
  ('operacion_unitaria -> SIGNO_MENOS SIGNO_MENOS IDENTIFICADOR','operacion_unitaria',3,'p_operacion_unitaria','analisis_sintactico.py',42),
  ('instruccion_while -> WHILE PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA','instruccion_while',7,'p_instruccion_while','analisis_sintactico.py',46),
  ('instruccion_for -> FOR PARENTESIS_APERTURA condicion_for PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA','instruccion_for',7,'p_instruccion_for','analisis_sintactico.py',50),
  ('condicion_for -> TIPO_INT IDENTIFICADOR IN IDENTIFICADOR','condicion_for',4,'p_condicion_for','analisis_sintactico.py',53),
  ('condicion_for -> condicion_for_inicial PUNTO_COMA condicion_for_terminacion PUNTO_COMA condicion_for_paso','condicion_for',5,'p_condicion_for','analisis_sintactico.py',54),
  ('condicion_for_inicial -> TIPO_INT IDENTIFICADOR SIGNO_IGUAL IDENTIFICADOR','condicion_for_inicial',4,'p_condicion_for_inicial','analisis_sintactico.py',57),
  ('condicion_for_inicial -> TIPO_INT IDENTIFICADOR SIGNO_IGUAL DATO_ENTERO','condicion_for_inicial',4,'p_condicion_for_inicial','analisis_sintactico.py',58),
  ('condicion_for_terminacion -> IDENTIFICADOR SIGNO_MENOR_QUE DATO_ENTERO','condicion_for_terminacion',3,'p_condicion_for_terminacion','analisis_sintactico.py',61),
  ('condicion_for_terminacion -> IDENTIFICADOR SIGNO_MAYOR_QUE DATO_ENTERO','condicion_for_terminacion',3,'p_condicion_for_terminacion','analisis_sintactico.py',62),
  ('condicion_for_terminacion -> IDENTIFICADOR SIGNO_MENOR_QUE SIGNO_IGUAL DATO_ENTERO','condicion_for_terminacion',4,'p_condicion_for_terminacion','analisis_sintactico.py',63),
  ('condicion_for_terminacion -> IDENTIFICADOR SIGNO_MAYOR_QUE SIGNO_IGUAL DATO_ENTERO','condicion_for_terminacion',4,'p_condicion_for_terminacion','analisis_sintactico.py',64),
  ('condicion_for_terminacion -> IDENTIFICADOR SIGNO_IGUAL SIGNO_IGUAL DATO_ENTERO','condicion_for_terminacion',4,'p_condicion_for_terminacion','analisis_sintactico.py',65),
  ('condicion_for_terminacion -> IDENTIFICADOR SIGNO_ADMIRACION_APERTURA SIGNO_IGUAL DATO_ENTERO','condicion_for_terminacion',4,'p_condicion_for_terminacion','analisis_sintactico.py',66),
  ('condicion_for_paso -> operacion_unitaria','condicion_for_paso',1,'p_condicion_for_paso','analisis_sintactico.py',69),
  ('instruccion_switch -> SWITCH PARENTESIS_APERTURA IDENTIFICADOR PARENTESIS_CLAUSURA LLAVE_APERTURA bloque_switch LLAVE_CLAUSURA','instruccion_switch',7,'p_instruccion_switch','analisis_sintactico.py',73),
  ('bloque_switch -> instrucciones_case instruccion_default','bloque_switch',2,'p_bloque_switch','analisis_sintactico.py',76),
  ('bloque_switch -> instrucciones_case','bloque_switch',1,'p_bloque_switch','analisis_sintactico.py',77),
  ('instrucciones_case -> instruccion_case instrucciones_case','instrucciones_case',2,'p_instrucciones_case','analisis_sintactico.py',80),
  ('instrucciones_case -> instruccion_case','instrucciones_case',1,'p_instrucciones_case','analisis_sintactico.py',81),
  ('instruccion_case -> CASE valor_general DOBLE_PUNTO LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA BREAK PUNTO_COMA','instruccion_case',8,'p_instruccion_case','analisis_sintactico.py',84),
  ('instruccion_case -> CASE valor_general DOBLE_PUNTO instruccion BREAK PUNTO_COMA','instruccion_case',6,'p_instruccion_case','analisis_sintactico.py',85),
  ('instruccion_case -> CASE valor_general DOBLE_PUNTO llamadas_func PUNTO_COMA BREAK PUNTO_COMA','instruccion_case',7,'p_instruccion_case','analisis_sintactico.py',86),
  ('instruccion_default -> DEFAULT DOBLE_PUNTO LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA BREAK PUNTO_COMA','instruccion_default',7,'p_instruccion_default','analisis_sintactico.py',89),
  ('instruccion_default -> DEFAULT DOBLE_PUNTO instruccion BREAK PUNTO_COMA','instruccion_default',5,'p_instruccion_default','analisis_sintactico.py',90),
  ('instruccion_default -> DEFAULT DOBLE_PUNTO llamadas_func PUNTO_COMA BREAK PUNTO_COMA','instruccion_default',6,'p_instruccion_default','analisis_sintactico.py',91),
  ('instruccion_if -> IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA','instruccion_if',7,'p_instruccion_if','analisis_sintactico.py',95),
  ('instruccion_if -> IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA instruccion_else','instruccion_if',8,'p_instruccion_if','analisis_sintactico.py',96),
  ('instruccion_else -> ELSE IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA instruccion_else','instruccion_else',9,'p_instruccion_else','analisis_sintactico.py',99),
  ('instruccion_else -> ELSE IF PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA','instruccion_else',8,'p_instruccion_else','analisis_sintactico.py',100),
  ('instruccion_else -> ELSE LLAVE_APERTURA items_estructura_control LLAVE_CLAUSURA','instruccion_else',4,'p_instruccion_else','analisis_sintactico.py',101),
  ('items_estructura_control -> item_estructura_control items_estructura_control','items_estructura_control',2,'p_items_estructura_control','analisis_sintactico.py',104),
  ('items_estructura_control -> item_estructura_control','items_estructura_control',1,'p_items_estructura_control','analisis_sintactico.py',105),
  ('item_estructura_control -> instruccion','item_estructura_control',1,'p_item_estructura_control','analisis_sintactico.py',108),
  ('item_estructura_control -> llamadas_func PUNTO_COMA','item_estructura_control',2,'p_item_estructura_control','analisis_sintactico.py',109),
  ('item_estructura_control -> instruccion_if','item_estructura_control',1,'p_item_estructura_control','analisis_sintactico.py',110),
  ('item_estructura_control -> instruccion_while','item_estructura_control',1,'p_item_estructura_control','analisis_sintactico.py',111),
  ('item_estructura_control -> instruccion_for','item_estructura_control',1,'p_item_estructura_control','analisis_sintactico.py',112),
  ('clase -> CLASS IDENTIFICADOR LLAVE_APERTURA bloque_clase LLAVE_CLAUSURA','clase',5,'p_clase','analisis_sintactico.py',118),
  ('bloque_clase -> item_bloque_clase bloque_clase','bloque_clase',2,'p_bloque_clase','analisis_sintactico.py',121),
  ('bloque_clase -> item_bloque_clase','bloque_clase',1,'p_bloque_clase','analisis_sintactico.py',122),
  ('item_bloque_clase -> instruccion','item_bloque_clase',1,'p_item_bloque_clase','analisis_sintactico.py',125),
  ('item_bloque_clase -> funcion','item_bloque_clase',1,'p_item_bloque_clase','analisis_sintactico.py',126),
  ('nuevo_objeto -> NEW IDENTIFICADOR PARENTESIS_APERTURA PARENTESIS_CLAUSURA','nuevo_objeto',4,'p_nuevo_objeto','analisis_sintactico.py',129),
  ('llamadas_func -> IDENTIFICADOR PUNTO llamadas_func','llamadas_func',3,'p_llamadas_func','analisis_sintactico.py',133),
  ('llamadas_func -> llamada_func PUNTO llamadas_func','llamadas_func',3,'p_llamadas_func','analisis_sintactico.py',134),
  ('llamadas_func -> llamada_func','llamadas_func',1,'p_llamadas_func','analisis_sintactico.py',135),
  ('llamada_func -> IDENTIFICADOR PARENTESIS_APERTURA params PARENTESIS_CLAUSURA','llamada_func',4,'p_llamada_func','analisis_sintactico.py',138),
  ('llamada_func -> IDENTIFICADOR PARENTESIS_APERTURA PARENTESIS_CLAUSURA','llamada_func',3,'p_llamada_func','analisis_sintactico.py',139),
  ('params -> valor_general COMA params','params',3,'p_params','analisis_sintactico.py',142),
  ('params -> valor_general','params',1,'p_params','analisis_sintactico.py',143),
  ('declaracion_general -> tipos_declaracion IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',147),
  ('declaracion_general -> TIPO_MAP IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',148),
  ('declaracion_general -> TIPO_LIST IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',149),
  ('declaracion_general -> VAR IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',150),
  ('declaracion_general -> DYNAMIC IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',151),
  ('declaracion_general -> TIPO_BOOL IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',152),
  ('declaracion_general -> TIPO_DOUBLE IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',153),
  ('declaracion_general -> TIPO_INT IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',154),
  ('declaracion_general -> TIPO_STRING IDENTIFICADOR','declaracion_general',2,'p_declaracion_general','analisis_sintactico.py',155),
  ('tipos_declaracion -> TIPO_SET','tipos_declaracion',1,'p_tipos_declaracion','analisis_sintactico.py',158),
  ('tipos_declaracion -> TIPO_SYMBOL','tipos_declaracion',1,'p_tipos_declaracion','analisis_sintactico.py',159),
  ('tipos_declaracion -> TIPO_OBJECT','tipos_declaracion',1,'p_tipos_declaracion','analisis_sintactico.py',160),
  ('tipos_declaracion -> TIPO_FUTURE','tipos_declaracion',1,'p_tipos_declaracion','analisis_sintactico.py',161),
  ('tipos_declaracion -> TIPO_STREAM','tipos_declaracion',1,'p_tipos_declaracion','analisis_sintactico.py',162),
  ('tipos_declaracion -> TIPO_ITERABLE','tipos_declaracion',1,'p_tipos_declaracion','analisis_sintactico.py',163),
  ('tipos_declaracion -> TIPO_NEVER','tipos_declaracion',1,'p_tipos_declaracion','analisis_sintactico.py',164),
  ('declaracion -> declaracion_general PUNTO_COMA','declaracion',2,'p_declaracion','analisis_sintactico.py',167),
  ('asignacion -> asignacion_bool','asignacion',1,'p_asignacion','analisis_sintactico.py',172),
  ('asignacion -> asignacion_int','asignacion',1,'p_asignacion','analisis_sintactico.py',173),
  ('asignacion -> asignacion_double','asignacion',1,'p_asignacion','analisis_sintactico.py',174),
  ('asignacion -> TIPO_BOOL IDENTIFICADOR SIGNO_IGUAL expresion_logica PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',175),
  ('asignacion -> asignacion_string','asignacion',1,'p_asignacion','analisis_sintactico.py',176),
  ('asignacion -> VAR IDENTIFICADOR SIGNO_IGUAL valor_general PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',177),
  ('asignacion -> DYNAMIC IDENTIFICADOR SIGNO_IGUAL valor_general PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',178),
  ('asignacion -> IDENTIFICADOR SIGNO_IGUAL valor_general PUNTO_COMA','asignacion',4,'p_asignacion','analisis_sintactico.py',179),
  ('asignacion -> IDENTIFICADOR SIGNO_MAS SIGNO_IGUAL expresion_mat_double PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',180),
  ('asignacion -> IDENTIFICADOR SIGNO_MENOS SIGNO_IGUAL expresion_mat_double PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',181),
  ('asignacion -> TIPO_MAP IDENTIFICADOR SIGNO_IGUAL bloque_mapa PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',182),
  ('asignacion -> valor_mapa_lista SIGNO_IGUAL valor_general PUNTO_COMA','asignacion',4,'p_asignacion','analisis_sintactico.py',183),
  ('asignacion -> TIPO_LIST IDENTIFICADOR SIGNO_IGUAL lista PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',184),
  ('asignacion -> TIPO_LIST SIGNO_MENOR_QUE IDENTIFICADOR SIGNO_MAYOR_QUE IDENTIFICADOR SIGNO_IGUAL lista PUNTO_COMA','asignacion',8,'p_asignacion','analisis_sintactico.py',185),
  ('asignacion -> VAR IDENTIFICADOR SIGNO_IGUAL lista PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',186),
  ('asignacion -> VAR IDENTIFICADOR SIGNO_IGUAL conjunto_especifico PUNTO_COMA','asignacion',5,'p_asignacion','analisis_sintactico.py',187),
  ('asignacion -> TIPO_SET cast_int IDENTIFICADOR SIGNO_IGUAL LLAVE_APERTURA lista_numeros LLAVE_CLAUSURA PUNTO_COMA','asignacion',8,'p_asignacion','analisis_sintactico.py',188),
  ('asignacion -> TIPO_SET cast_double IDENTIFICADOR SIGNO_IGUAL LLAVE_APERTURA lista_dobles LLAVE_CLAUSURA PUNTO_COMA','asignacion',8,'p_asignacion','analisis_sintactico.py',189),
  ('asignacion -> TIPO_SET cast_string IDENTIFICADOR SIGNO_IGUAL LLAVE_APERTURA lista_cadenas LLAVE_CLAUSURA PUNTO_COMA','asignacion',8,'p_asignacion','analisis_sintactico.py',190),
  ('asignacion_string -> TIPO_STRING IDENTIFICADOR SIGNO_IGUAL DATO_CADENA_TEXTO PUNTO_COMA','asignacion_string',5,'p_asignacion_string','analisis_sintactico.py',194),
  ('asignacion_bool -> TIPO_BOOL IDENTIFICADOR SIGNO_IGUAL expresion_bool PUNTO_COMA','asignacion_bool',5,'p_asignacion_bool','analisis_sintactico.py',199),
  ('asignacion_int -> TIPO_INT IDENTIFICADOR SIGNO_IGUAL expresion_mat_int PUNTO_COMA','asignacion_int',5,'p_asignacion_int','analisis_sintactico.py',205),
  ('asignacion_double -> TIPO_DOUBLE IDENTIFICADOR SIGNO_IGUAL expresion_mat_double PUNTO_COMA','asignacion_double',5,'p_asignacion_double','analisis_sintactico.py',210),
  ('bloque_mapa -> LLAVE_APERTURA pares_llave_valor LLAVE_CLAUSURA','bloque_mapa',3,'p_bloque_mapa','analisis_sintactico.py',216),
  ('bloque_mapa -> LLAVE_APERTURA LLAVE_CLAUSURA','bloque_mapa',2,'p_bloque_mapa','analisis_sintactico.py',217),
  ('bloque_mapa -> NEW TIPO_MAP PARENTESIS_APERTURA PARENTESIS_CLAUSURA','bloque_mapa',4,'p_bloque_mapa','analisis_sintactico.py',218),
  ('pares_llave_valor -> par_llave_valor COMA pares_llave_valor','pares_llave_valor',3,'p_pares_llave_valor','analisis_sintactico.py',221),
  ('pares_llave_valor -> par_llave_valor','pares_llave_valor',1,'p_pares_llave_valor','analisis_sintactico.py',222),
  ('par_llave_valor -> valor_general DOBLE_PUNTO valor_general','par_llave_valor',3,'p_par_llave_valor','analisis_sintactico.py',225),
  ('valor_general -> expresion_mat_double','valor_general',1,'p_valor_general','analisis_sintactico.py',228),
  ('valor_general -> expresion_logica','valor_general',1,'p_valor_general','analisis_sintactico.py',229),
  ('valor_general -> DATO_CADENA_TEXTO','valor_general',1,'p_valor_general','analisis_sintactico.py',230),
  ('valor_general -> llamadas_func','valor_general',1,'p_valor_general','analisis_sintactico.py',231),
  ('valor_general -> nuevo_objeto','valor_general',1,'p_valor_general','analisis_sintactico.py',232),
  ('valor_general -> NULL','valor_general',1,'p_valor_general','analisis_sintactico.py',233),
  ('valor_mapa_lista -> IDENTIFICADOR CORCHETE_APERTURA valor_general CORCHETE_CLAUSURA','valor_mapa_lista',4,'p_valor_mapa_lista','analisis_sintactico.py',236),
  ('expresion_bool -> dato_bool','expresion_bool',1,'p_expresion_bool','analisis_sintactico.py',240),
  ('expresion_bool -> dato_bool ET ET dato_bool','expresion_bool',4,'p_expresion_bool','analisis_sintactico.py',241),
  ('expresion_bool -> dato_bool PLECA PLECA dato_bool','expresion_bool',4,'p_expresion_bool','analisis_sintactico.py',242),
  ('expresion_bool -> SIGNO_ADMIRACION_APERTURA dato_bool','expresion_bool',2,'p_expresion_bool','analisis_sintactico.py',243),
  ('dato_bool -> TRUE','dato_bool',1,'p_dato_bool','analisis_sintactico.py',246),
  ('dato_bool -> FALSE','dato_bool',1,'p_dato_bool','analisis_sintactico.py',247),
  ('expresion_mat_int -> expresion_int_no_menos','expresion_mat_int',1,'p_expresion_mat_int','analisis_sintactico.py',251),
  ('expresion_mat_int -> SIGNO_MENOS expresion_int_no_menos','expresion_mat_int',2,'p_expresion_mat_int','analisis_sintactico.py',252),
  ('expresion_int_no_menos -> expresion_int_no_menos SIGNO_MAS expresion_int_no_menos','expresion_int_no_menos',3,'p_expresion_int_no_menos','analisis_sintactico.py',255),
  ('expresion_int_no_menos -> expresion_int_no_menos SIGNO_MENOS expresion_int_no_menos','expresion_int_no_menos',3,'p_expresion_int_no_menos','analisis_sintactico.py',256),
  ('expresion_int_no_menos -> expresion_int_no_menos SIGNO_MULTIPLICACION expresion_int_no_menos','expresion_int_no_menos',3,'p_expresion_int_no_menos','analisis_sintactico.py',257),
  ('expresion_int_no_menos -> expresion_int_no_menos PORCENTAJE expresion_int_no_menos','expresion_int_no_menos',3,'p_expresion_int_no_menos','analisis_sintactico.py',258),
  ('expresion_int_no_menos -> expresion_int_no_menos VIRGULILLA SIGNO_DIVISION expresion_int_no_menos','expresion_int_no_menos',4,'p_expresion_int_no_menos','analisis_sintactico.py',259),
  ('expresion_int_no_menos -> PARENTESIS_APERTURA expresion_int_no_menos PARENTESIS_CLAUSURA','expresion_int_no_menos',3,'p_expresion_int_no_menos','analisis_sintactico.py',260),
  ('expresion_int_no_menos -> DATO_ENTERO','expresion_int_no_menos',1,'p_expresion_int_no_menos','analisis_sintactico.py',261),
  ('expresion_int_no_menos -> IDENTIFICADOR','expresion_int_no_menos',1,'p_expresion_int_no_menos','analisis_sintactico.py',262),
  ('expresion_mat_double -> expresion_double_no_menos','expresion_mat_double',1,'p_expresion_mat_double','analisis_sintactico.py',265),
  ('expresion_mat_double -> SIGNO_MENOS expresion_double_no_menos','expresion_mat_double',2,'p_expresion_mat_double','analisis_sintactico.py',266),
  ('expresion_double_no_menos -> expresion_double_no_menos SIGNO_MAS expresion_double_no_menos','expresion_double_no_menos',3,'p_expresion_double_no_menos','analisis_sintactico.py',269),
  ('expresion_double_no_menos -> expresion_double_no_menos SIGNO_MENOS expresion_double_no_menos','expresion_double_no_menos',3,'p_expresion_double_no_menos','analisis_sintactico.py',270),
  ('expresion_double_no_menos -> expresion_double_no_menos SIGNO_MULTIPLICACION expresion_double_no_menos','expresion_double_no_menos',3,'p_expresion_double_no_menos','analisis_sintactico.py',271),
  ('expresion_double_no_menos -> expresion_double_no_menos PORCENTAJE expresion_double_no_menos','expresion_double_no_menos',3,'p_expresion_double_no_menos','analisis_sintactico.py',272),
  ('expresion_double_no_menos -> expresion_double_no_menos SIGNO_DIVISION expresion_double_no_menos','expresion_double_no_menos',3,'p_expresion_double_no_menos','analisis_sintactico.py',273),
  ('expresion_double_no_menos -> PARENTESIS_APERTURA expresion_double_no_menos PARENTESIS_CLAUSURA','expresion_double_no_menos',3,'p_expresion_double_no_menos','analisis_sintactico.py',274),
  ('expresion_double_no_menos -> DATO_DOBLE','expresion_double_no_menos',1,'p_expresion_double_no_menos','analisis_sintactico.py',275),
  ('expresion_double_no_menos -> DATO_ENTERO','expresion_double_no_menos',1,'p_expresion_double_no_menos','analisis_sintactico.py',276),
  ('expresion_double_no_menos -> IDENTIFICADOR','expresion_double_no_menos',1,'p_expresion_double_no_menos','analisis_sintactico.py',277),
  ('expresion_logica -> expresion_logica PLECA PLECA expresion_logica','expresion_logica',4,'p_expresion_logica','analisis_sintactico.py',281),
  ('expresion_logica -> expresion_logica ET ET expresion_logica','expresion_logica',4,'p_expresion_logica','analisis_sintactico.py',282),
  ('expresion_logica -> PARENTESIS_APERTURA expresion_logica PARENTESIS_CLAUSURA','expresion_logica',3,'p_expresion_logica','analisis_sintactico.py',283),
  ('expresion_logica -> SIGNO_ADMIRACION_APERTURA expresion_logica','expresion_logica',2,'p_expresion_logica','analisis_sintactico.py',284),
  ('expresion_logica -> comparacion','expresion_logica',1,'p_expresion_logica','analisis_sintactico.py',285),
  ('expresion_logica -> TRUE','expresion_logica',1,'p_expresion_logica','analisis_sintactico.py',286),
  ('expresion_logica -> FALSE','expresion_logica',1,'p_expresion_logica','analisis_sintactico.py',287),
  ('expresion_logica -> IDENTIFICADOR','expresion_logica',1,'p_expresion_logica','analisis_sintactico.py',288),
  ('comparacion -> expresion_mat_double SIGNO_MENOR_QUE expresion_mat_double','comparacion',3,'p_comparacion','analisis_sintactico.py',291),
  ('comparacion -> expresion_mat_double SIGNO_MAYOR_QUE expresion_mat_double','comparacion',3,'p_comparacion','analisis_sintactico.py',292),
  ('comparacion -> expresion_mat_double SIGNO_MENOR_QUE SIGNO_IGUAL expresion_mat_double','comparacion',4,'p_comparacion','analisis_sintactico.py',293),
  ('comparacion -> expresion_mat_double SIGNO_MAYOR_QUE SIGNO_IGUAL expresion_mat_double','comparacion',4,'p_comparacion','analisis_sintactico.py',294),
  ('comparacion -> expresion_mat_double SIGNO_IGUAL SIGNO_IGUAL expresion_mat_double','comparacion',4,'p_comparacion','analisis_sintactico.py',295),
  ('comparacion -> expresion_mat_double SIGNO_ADMIRACION_APERTURA SIGNO_IGUAL expresion_mat_double','comparacion',4,'p_comparacion','analisis_sintactico.py',296),
  ('lista -> CORCHETE_APERTURA lista_general CORCHETE_CLAUSURA','lista',3,'p_lista','analisis_sintactico.py',300),
  ('lista -> CORCHETE_APERTURA CORCHETE_CLAUSURA','lista',2,'p_lista','analisis_sintactico.py',301),
  ('lista -> TIPO_LIST PARENTESIS_APERTURA DATO_ENTERO PARENTESIS_CLAUSURA','lista',4,'p_lista','analisis_sintactico.py',302),
  ('lista -> NEW TIPO_LIST CORCHETE_APERTURA CORCHETE_CLAUSURA','lista',4,'p_lista','analisis_sintactico.py',303),
  ('lista -> NEW TIPO_LIST CORCHETE_APERTURA DATO_ENTERO CORCHETE_CLAUSURA','lista',5,'p_lista','analisis_sintactico.py',304),
  ('lista_general -> valor_general','lista_general',1,'p_lista_general','analisis_sintactico.py',307),
  ('lista_general -> valor_general COMA lista_general','lista_general',3,'p_lista_general','analisis_sintactico.py',308),
  ('lista_numeros -> DATO_ENTERO','lista_numeros',1,'p_lista_numeros','analisis_sintactico.py',311),
  ('lista_numeros -> DATO_ENTERO COMA lista_numeros','lista_numeros',3,'p_lista_numeros','analisis_sintactico.py',312),
  ('lista_dobles -> DATO_DOBLE','lista_dobles',1,'p_lista_dobles','analisis_sintactico.py',315),
  ('lista_dobles -> DATO_DOBLE COMA lista_dobles','lista_dobles',3,'p_lista_dobles','analisis_sintactico.py',316),
  ('lista_cadenas -> DATO_CADENA_TEXTO','lista_cadenas',1,'p_lista_cadenas','analisis_sintactico.py',319),
  ('lista_cadenas -> DATO_CADENA_TEXTO COMA lista_cadenas','lista_cadenas',3,'p_lista_cadenas','analisis_sintactico.py',320),
  ('conjunto_especifico -> cast_int LLAVE_APERTURA lista_numeros LLAVE_CLAUSURA','conjunto_especifico',4,'p_conjunto_especifico','analisis_sintactico.py',324),
  ('conjunto_especifico -> cast_double LLAVE_APERTURA lista_dobles LLAVE_CLAUSURA','conjunto_especifico',4,'p_conjunto_especifico','analisis_sintactico.py',325),
  ('conjunto_especifico -> cast_string LLAVE_APERTURA lista_cadenas LLAVE_CLAUSURA','conjunto_especifico',4,'p_conjunto_especifico','analisis_sintactico.py',326),
  ('cast_int -> SIGNO_MENOR_QUE TIPO_INT SIGNO_MAYOR_QUE','cast_int',3,'p_cast_int','analisis_sintactico.py',329),
  ('cast_double -> SIGNO_MENOR_QUE TIPO_DOUBLE SIGNO_MAYOR_QUE','cast_double',3,'p_cast_double','analisis_sintactico.py',332),
  ('cast_string -> SIGNO_MENOR_QUE TIPO_STRING SIGNO_MAYOR_QUE','cast_string',3,'p_cast_string','analisis_sintactico.py',335),
  ('funcion -> MAIN PARENTESIS_APERTURA PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA','funcion',6,'p_funcion','analisis_sintactico.py',339),
  ('funcion -> VOID IDENTIFICADOR PARENTESIS_APERTURA PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA','funcion',7,'p_funcion','analisis_sintactico.py',340),
  ('funcion -> declaracion_general PARENTESIS_APERTURA PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA','funcion',6,'p_funcion','analisis_sintactico.py',341),
  ('funcion -> VOID IDENTIFICADOR PARENTESIS_APERTURA parametros PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA','funcion',8,'p_funcion','analisis_sintactico.py',342),
  ('funcion -> declaracion_general PARENTESIS_APERTURA parametros PARENTESIS_CLAUSURA LLAVE_APERTURA items_funcion LLAVE_CLAUSURA','funcion',7,'p_funcion','analisis_sintactico.py',343),
  ('funcion -> VOID IDENTIFICADOR funcion_flecha','funcion',3,'p_funcion','analisis_sintactico.py',344),
  ('funcion -> declaracion_general funcion_flecha','funcion',2,'p_funcion','analisis_sintactico.py',345),
  ('funcion_flecha -> PARENTESIS_APERTURA PARENTESIS_CLAUSURA SIGNO_IGUAL SIGNO_MAYOR_QUE item_funcion','funcion_flecha',5,'p_funcion_flecha','analisis_sintactico.py',348),
  ('funcion_flecha -> PARENTESIS_APERTURA parametros PARENTESIS_CLAUSURA SIGNO_IGUAL SIGNO_MAYOR_QUE item_funcion','funcion_flecha',6,'p_funcion_flecha','analisis_sintactico.py',349),
  ('parametros -> declaracion_general','parametros',1,'p_parametros','analisis_sintactico.py',352),
  ('parametros -> declaracion_general COMA parametros','parametros',3,'p_parametros','analisis_sintactico.py',353),
  ('items_funcion -> item_funcion items_funcion','items_funcion',2,'p_items_funcion','analisis_sintactico.py',356),
  ('items_funcion -> item_funcion','items_funcion',1,'p_items_funcion','analisis_sintactico.py',357),
  ('item_funcion -> instruccion','item_funcion',1,'p_item_funcion','analisis_sintactico.py',360),
  ('item_funcion -> instruccion_if','item_funcion',1,'p_item_funcion','analisis_sintactico.py',361),
  ('item_funcion -> llamadas_func PUNTO_COMA','item_funcion',2,'p_item_funcion','analisis_sintactico.py',362),
  ('item_funcion -> instruccion_while','item_funcion',1,'p_item_funcion','analisis_sintactico.py',363),
  ('item_funcion -> instruccion_for','item_funcion',1,'p_item_funcion','analisis_sintactico.py',364),
  ('item_funcion -> instruccion_switch','item_funcion',1,'p_item_funcion','analisis_sintactico.py',365),
  ('item_funcion -> inst_return','item_funcion',1,'p_item_funcion','analisis_sintactico.py',366),
  ('inst_return -> RETURN valor_general PUNTO_COMA','inst_return',3,'p_inst_return','analisis_sintactico.py',369),
]
